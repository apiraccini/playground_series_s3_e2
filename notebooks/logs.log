2023-01-15 17:57:55,635:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-01-15 17:57:55,635:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-01-15 17:57:55,635:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-01-15 17:57:55,636:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-01-15 17:57:56,713:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-01-15 17:59:03,202:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-01-15 17:59:03,202:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-01-15 17:59:03,202:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-01-15 17:59:03,202:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-01-15 17:59:03,789:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-01-15 18:00:38,609:INFO:PyCaret ClassificationExperiment
2023-01-15 18:00:38,609:INFO:Logging name: clf-default-name
2023-01-15 18:00:38,609:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-01-15 18:00:38,609:INFO:version 3.0.0.rc8
2023-01-15 18:00:38,609:INFO:Initializing setup()
2023-01-15 18:00:38,609:INFO:self.USI: a008
2023-01-15 18:00:38,610:INFO:self._variable_keys: {'logging_param', 'fold_generator', 'is_multiclass', 'exp_name_log', 'memory', 'log_plots_param', 'exp_id', 'fold_shuffle_param', 'USI', '_available_plots', 'data', 'gpu_n_jobs_param', 'idx', 'X', 'X_test', 'y_train', 'n_jobs_param', 'gpu_param', 'fold_groups_param', 'html_param', 'y_test', 'target_param', 'y', 'fix_imbalance', 'X_train', '_ml_usecase', 'pipeline', 'seed'}
2023-01-15 18:00:38,610:INFO:Checking environment
2023-01-15 18:00:38,610:INFO:python_version: 3.10.5
2023-01-15 18:00:38,610:INFO:python_build: ('tags/v3.10.5:f377153', 'Jun  6 2022 16:14:13')
2023-01-15 18:00:38,610:INFO:machine: AMD64
2023-01-15 18:00:38,610:INFO:platform: Windows-10-10.0.19045-SP0
2023-01-15 18:00:38,614:INFO:Memory: svmem(total=8494747648, available=1556533248, percent=81.7, used=6938214400, free=1556533248)
2023-01-15 18:00:38,614:INFO:Physical Core: 4
2023-01-15 18:00:38,614:INFO:Logical Core: 8
2023-01-15 18:00:38,614:INFO:Checking libraries
2023-01-15 18:00:38,614:INFO:System:
2023-01-15 18:00:38,614:INFO:    python: 3.10.5 (tags/v3.10.5:f377153, Jun  6 2022, 16:14:13) [MSC v.1929 64 bit (AMD64)]
2023-01-15 18:00:38,614:INFO:executable: c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\Scripts\python.exe
2023-01-15 18:00:38,615:INFO:   machine: Windows-10-10.0.19045-SP0
2023-01-15 18:00:38,615:INFO:PyCaret required dependencies:
2023-01-15 18:00:38,615:INFO:                 pip: 22.3.1
2023-01-15 18:00:38,615:INFO:          setuptools: 65.7.0
2023-01-15 18:00:38,615:INFO:             pycaret: 3.0.0rc8
2023-01-15 18:00:38,615:INFO:             IPython: 8.8.0
2023-01-15 18:00:38,615:INFO:          ipywidgets: 8.0.4
2023-01-15 18:00:38,615:INFO:                tqdm: 4.64.1
2023-01-15 18:00:38,615:INFO:               numpy: 1.23.5
2023-01-15 18:00:38,616:INFO:              pandas: 1.5.2
2023-01-15 18:00:38,616:INFO:              jinja2: 3.1.2
2023-01-15 18:00:38,616:INFO:               scipy: 1.10.0
2023-01-15 18:00:38,616:INFO:              joblib: 1.2.0
2023-01-15 18:00:38,616:INFO:             sklearn: 1.1.3
2023-01-15 18:00:38,616:INFO:                pyod: 1.0.7
2023-01-15 18:00:38,616:INFO:            imblearn: 0.10.1
2023-01-15 18:00:38,616:INFO:   category_encoders: 2.6.0
2023-01-15 18:00:38,616:INFO:            lightgbm: 3.3.4
2023-01-15 18:00:38,616:INFO:               numba: 0.56.4
2023-01-15 18:00:38,617:INFO:            requests: 2.28.2
2023-01-15 18:00:38,617:INFO:          matplotlib: 3.6.3
2023-01-15 18:00:38,617:INFO:          scikitplot: 0.3.7
2023-01-15 18:00:38,617:INFO:         yellowbrick: 1.5
2023-01-15 18:00:38,617:INFO:              plotly: 5.12.0
2023-01-15 18:00:38,617:INFO:             kaleido: 0.2.1
2023-01-15 18:00:38,617:INFO:         statsmodels: 0.13.5
2023-01-15 18:00:38,617:INFO:              sktime: 0.15.1
2023-01-15 18:00:38,618:INFO:               tbats: 1.1.2
2023-01-15 18:00:38,618:INFO:            pmdarima: 2.0.2
2023-01-15 18:00:38,618:INFO:              psutil: 5.9.4
2023-01-15 18:00:38,618:INFO:PyCaret optional dependencies:
2023-01-15 18:00:38,654:INFO:                shap: Not installed
2023-01-15 18:00:38,655:INFO:           interpret: Not installed
2023-01-15 18:00:38,655:INFO:                umap: Not installed
2023-01-15 18:00:38,655:INFO:    pandas_profiling: Not installed
2023-01-15 18:00:38,655:INFO:  explainerdashboard: Not installed
2023-01-15 18:00:38,655:INFO:             autoviz: Not installed
2023-01-15 18:00:38,655:INFO:           fairlearn: Not installed
2023-01-15 18:00:38,655:INFO:             xgboost: Not installed
2023-01-15 18:00:38,655:INFO:            catboost: Not installed
2023-01-15 18:00:38,655:INFO:              kmodes: Not installed
2023-01-15 18:00:38,655:INFO:             mlxtend: Not installed
2023-01-15 18:00:38,656:INFO:       statsforecast: Not installed
2023-01-15 18:00:38,656:INFO:        tune_sklearn: Not installed
2023-01-15 18:00:38,656:INFO:                 ray: Not installed
2023-01-15 18:00:38,656:INFO:            hyperopt: Not installed
2023-01-15 18:00:38,656:INFO:              optuna: Not installed
2023-01-15 18:00:38,656:INFO:               skopt: Not installed
2023-01-15 18:00:38,656:INFO:              mlflow: Not installed
2023-01-15 18:00:38,656:INFO:              gradio: Not installed
2023-01-15 18:00:38,656:INFO:             fastapi: Not installed
2023-01-15 18:00:38,656:INFO:             uvicorn: Not installed
2023-01-15 18:00:38,656:INFO:              m2cgen: Not installed
2023-01-15 18:00:38,656:INFO:           evidently: Not installed
2023-01-15 18:00:38,657:INFO:                nltk: Not installed
2023-01-15 18:00:38,657:INFO:            pyLDAvis: Not installed
2023-01-15 18:00:38,657:INFO:              gensim: Not installed
2023-01-15 18:00:38,657:INFO:               spacy: Not installed
2023-01-15 18:00:38,657:INFO:           wordcloud: Not installed
2023-01-15 18:00:38,657:INFO:            textblob: Not installed
2023-01-15 18:00:38,657:INFO:               fugue: Not installed
2023-01-15 18:00:38,657:INFO:           streamlit: Not installed
2023-01-15 18:00:38,657:INFO:             prophet: Not installed
2023-01-15 18:00:38,657:INFO:None
2023-01-15 18:00:38,658:INFO:Set up data.
2023-01-15 18:00:38,678:INFO:Set up train/test split.
2023-01-15 18:00:38,690:INFO:Set up index.
2023-01-15 18:00:38,691:INFO:Set up folding strategy.
2023-01-15 18:00:38,691:INFO:Assigning column types.
2023-01-15 18:00:38,695:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-01-15 18:00:38,760:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-01-15 18:00:38,762:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-15 18:00:38,807:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:00:38,938:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:00:39,009:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-01-15 18:00:39,010:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-15 18:00:39,045:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:00:39,045:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:00:39,046:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-01-15 18:00:39,116:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-15 18:00:39,171:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:00:39,172:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:00:39,233:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-15 18:00:39,272:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:00:39,273:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:00:39,273:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-01-15 18:00:39,370:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:00:39,370:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:00:39,466:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:00:39,467:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:00:39,470:INFO:Preparing preprocessing pipeline...
2023-01-15 18:00:39,473:INFO:Set up simple imputation.
2023-01-15 18:00:39,479:INFO:Set up encoding of ordinal features.
2023-01-15 18:00:39,482:INFO:Set up encoding of categorical features.
2023-01-15 18:00:40,534:INFO:Finished creating preprocessing pipeline.
2023-01-15 18:00:40,574:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\alepi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'hypertension',
                                             'heart_disease',
                                             'avg_glucose_level', 'bmi'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorica...
NaN     -1
dtype: int64}],
                                                               return_df=True,
                                                               verbose=0))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['gender', 'work_type',
                                             'smoking_status'],
                                    transformer=OneHotEncoder(cols=['gender',
                                                                    'work_type',
                                                                    'smoking_status'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False)
2023-01-15 18:00:40,574:INFO:Creating final display dataframe.
2023-01-15 18:00:45,471:INFO:Setup _display_container:                     Description             Value
0                    Session id                42
1                        Target            stroke
2                   Target type            Binary
3           Original data shape       (15304, 11)
4        Transformed data shape       (15304, 20)
5   Transformed train set shape       (11478, 20)
6    Transformed test set shape        (3826, 20)
7              Ordinal features                 2
8              Numeric features                 5
9          Categorical features                 5
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator   StratifiedKFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  clf-default-name
22                          USI              a008
2023-01-15 18:00:45,580:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:00:45,580:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:00:45,683:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:00:45,683:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:00:45,686:INFO:setup() successfully completed in 7.08s...............
2023-01-15 18:01:07,385:INFO:PyCaret ClassificationExperiment
2023-01-15 18:01:07,385:INFO:Logging name: clf-default-name
2023-01-15 18:01:07,385:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-01-15 18:01:07,385:INFO:version 3.0.0.rc8
2023-01-15 18:01:07,385:INFO:Initializing setup()
2023-01-15 18:01:07,385:INFO:self.USI: 7795
2023-01-15 18:01:07,386:INFO:self._variable_keys: {'logging_param', 'fold_generator', 'is_multiclass', 'exp_name_log', 'memory', 'log_plots_param', 'exp_id', 'fold_shuffle_param', 'USI', '_available_plots', 'data', 'gpu_n_jobs_param', 'idx', 'X', 'X_test', 'y_train', 'n_jobs_param', 'gpu_param', 'fold_groups_param', 'html_param', 'y_test', 'target_param', 'y', 'fix_imbalance', 'X_train', '_ml_usecase', 'pipeline', 'seed'}
2023-01-15 18:01:07,386:INFO:Checking environment
2023-01-15 18:01:07,386:INFO:python_version: 3.10.5
2023-01-15 18:01:07,386:INFO:python_build: ('tags/v3.10.5:f377153', 'Jun  6 2022 16:14:13')
2023-01-15 18:01:07,386:INFO:machine: AMD64
2023-01-15 18:01:07,386:INFO:platform: Windows-10-10.0.19045-SP0
2023-01-15 18:01:07,389:INFO:Memory: svmem(total=8494747648, available=1582469120, percent=81.4, used=6912278528, free=1582469120)
2023-01-15 18:01:07,389:INFO:Physical Core: 4
2023-01-15 18:01:07,390:INFO:Logical Core: 8
2023-01-15 18:01:07,390:INFO:Checking libraries
2023-01-15 18:01:07,390:INFO:System:
2023-01-15 18:01:07,390:INFO:    python: 3.10.5 (tags/v3.10.5:f377153, Jun  6 2022, 16:14:13) [MSC v.1929 64 bit (AMD64)]
2023-01-15 18:01:07,390:INFO:executable: c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\Scripts\python.exe
2023-01-15 18:01:07,390:INFO:   machine: Windows-10-10.0.19045-SP0
2023-01-15 18:01:07,390:INFO:PyCaret required dependencies:
2023-01-15 18:01:07,390:INFO:                 pip: 22.3.1
2023-01-15 18:01:07,390:INFO:          setuptools: 65.7.0
2023-01-15 18:01:07,391:INFO:             pycaret: 3.0.0rc8
2023-01-15 18:01:07,391:INFO:             IPython: 8.8.0
2023-01-15 18:01:07,391:INFO:          ipywidgets: 8.0.4
2023-01-15 18:01:07,391:INFO:                tqdm: 4.64.1
2023-01-15 18:01:07,391:INFO:               numpy: 1.23.5
2023-01-15 18:01:07,391:INFO:              pandas: 1.5.2
2023-01-15 18:01:07,391:INFO:              jinja2: 3.1.2
2023-01-15 18:01:07,391:INFO:               scipy: 1.10.0
2023-01-15 18:01:07,391:INFO:              joblib: 1.2.0
2023-01-15 18:01:07,391:INFO:             sklearn: 1.1.3
2023-01-15 18:01:07,391:INFO:                pyod: 1.0.7
2023-01-15 18:01:07,392:INFO:            imblearn: 0.10.1
2023-01-15 18:01:07,392:INFO:   category_encoders: 2.6.0
2023-01-15 18:01:07,392:INFO:            lightgbm: 3.3.4
2023-01-15 18:01:07,392:INFO:               numba: 0.56.4
2023-01-15 18:01:07,392:INFO:            requests: 2.28.2
2023-01-15 18:01:07,392:INFO:          matplotlib: 3.6.3
2023-01-15 18:01:07,392:INFO:          scikitplot: 0.3.7
2023-01-15 18:01:07,392:INFO:         yellowbrick: 1.5
2023-01-15 18:01:07,392:INFO:              plotly: 5.12.0
2023-01-15 18:01:07,392:INFO:             kaleido: 0.2.1
2023-01-15 18:01:07,392:INFO:         statsmodels: 0.13.5
2023-01-15 18:01:07,392:INFO:              sktime: 0.15.1
2023-01-15 18:01:07,392:INFO:               tbats: 1.1.2
2023-01-15 18:01:07,392:INFO:            pmdarima: 2.0.2
2023-01-15 18:01:07,393:INFO:              psutil: 5.9.4
2023-01-15 18:01:07,393:INFO:PyCaret optional dependencies:
2023-01-15 18:01:07,393:INFO:                shap: Not installed
2023-01-15 18:01:07,393:INFO:           interpret: Not installed
2023-01-15 18:01:07,393:INFO:                umap: Not installed
2023-01-15 18:01:07,393:INFO:    pandas_profiling: Not installed
2023-01-15 18:01:07,393:INFO:  explainerdashboard: Not installed
2023-01-15 18:01:07,393:INFO:             autoviz: Not installed
2023-01-15 18:01:07,393:INFO:           fairlearn: Not installed
2023-01-15 18:01:07,394:INFO:             xgboost: Not installed
2023-01-15 18:01:07,394:INFO:            catboost: Not installed
2023-01-15 18:01:07,394:INFO:              kmodes: Not installed
2023-01-15 18:01:07,394:INFO:             mlxtend: Not installed
2023-01-15 18:01:07,394:INFO:       statsforecast: Not installed
2023-01-15 18:01:07,394:INFO:        tune_sklearn: Not installed
2023-01-15 18:01:07,394:INFO:                 ray: Not installed
2023-01-15 18:01:07,394:INFO:            hyperopt: Not installed
2023-01-15 18:01:07,394:INFO:              optuna: Not installed
2023-01-15 18:01:07,394:INFO:               skopt: Not installed
2023-01-15 18:01:07,394:INFO:              mlflow: Not installed
2023-01-15 18:01:07,395:INFO:              gradio: Not installed
2023-01-15 18:01:07,395:INFO:             fastapi: Not installed
2023-01-15 18:01:07,395:INFO:             uvicorn: Not installed
2023-01-15 18:01:07,395:INFO:              m2cgen: Not installed
2023-01-15 18:01:07,395:INFO:           evidently: Not installed
2023-01-15 18:01:07,395:INFO:                nltk: Not installed
2023-01-15 18:01:07,395:INFO:            pyLDAvis: Not installed
2023-01-15 18:01:07,395:INFO:              gensim: Not installed
2023-01-15 18:01:07,395:INFO:               spacy: Not installed
2023-01-15 18:01:07,395:INFO:           wordcloud: Not installed
2023-01-15 18:01:07,396:INFO:            textblob: Not installed
2023-01-15 18:01:07,396:INFO:               fugue: Not installed
2023-01-15 18:01:07,396:INFO:           streamlit: Not installed
2023-01-15 18:01:07,396:INFO:             prophet: Not installed
2023-01-15 18:01:07,396:INFO:None
2023-01-15 18:01:07,396:INFO:Set up data.
2023-01-15 18:01:07,420:INFO:Set up train/test split.
2023-01-15 18:01:07,433:INFO:Set up index.
2023-01-15 18:01:07,434:INFO:Set up folding strategy.
2023-01-15 18:01:07,434:INFO:Assigning column types.
2023-01-15 18:01:07,439:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-01-15 18:01:07,499:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-01-15 18:01:07,500:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-15 18:01:07,536:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:01:07,536:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:01:07,589:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-01-15 18:01:07,591:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-15 18:01:07,624:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:01:07,624:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:01:07,625:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-01-15 18:01:07,679:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-15 18:01:07,712:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:01:07,712:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:01:07,767:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-15 18:01:07,802:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:01:07,803:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:01:07,803:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-01-15 18:01:07,898:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:01:07,898:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:01:07,994:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:01:07,995:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:01:07,996:INFO:Preparing preprocessing pipeline...
2023-01-15 18:01:07,999:INFO:Set up simple imputation.
2023-01-15 18:01:08,004:INFO:Set up encoding of ordinal features.
2023-01-15 18:01:08,008:INFO:Set up encoding of categorical features.
2023-01-15 18:01:09,048:INFO:Finished creating preprocessing pipeline.
2023-01-15 18:01:09,094:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\alepi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'hypertension',
                                             'heart_disease',
                                             'avg_glucose_level', 'bmi'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorica...
NaN     -1
dtype: int64}],
                                                               return_df=True,
                                                               verbose=0))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['gender', 'work_type',
                                             'smoking_status'],
                                    transformer=OneHotEncoder(cols=['gender',
                                                                    'work_type',
                                                                    'smoking_status'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False)
2023-01-15 18:01:09,094:INFO:Creating final display dataframe.
2023-01-15 18:01:11,372:INFO:Setup _display_container:                     Description             Value
0                    Session id                42
1                        Target            stroke
2                   Target type            Binary
3           Original data shape       (15304, 11)
4        Transformed data shape       (15304, 20)
5   Transformed train set shape       (11478, 20)
6    Transformed test set shape        (3826, 20)
7              Ordinal features                 2
8              Numeric features                 5
9          Categorical features                 5
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator   StratifiedKFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  clf-default-name
22                          USI              7795
2023-01-15 18:01:11,463:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:01:11,463:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:01:11,562:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:01:11,563:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:01:11,564:INFO:setup() successfully completed in 4.18s...............
2023-01-15 18:03:29,330:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-01-15 18:03:29,331:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-01-15 18:03:29,331:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-01-15 18:03:29,331:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-01-15 18:03:29,911:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-01-15 18:03:48,437:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-01-15 18:03:48,437:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-01-15 18:03:48,437:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-01-15 18:03:48,437:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-01-15 18:03:49,075:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-01-15 18:03:53,070:INFO:PyCaret ClassificationExperiment
2023-01-15 18:03:53,071:INFO:Logging name: clf-default-name
2023-01-15 18:03:53,071:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-01-15 18:03:53,072:INFO:version 3.0.0.rc8
2023-01-15 18:03:53,072:INFO:Initializing setup()
2023-01-15 18:03:53,072:INFO:self.USI: 1766
2023-01-15 18:03:53,072:INFO:self._variable_keys: {'gpu_n_jobs_param', '_available_plots', 'y', 'exp_id', 'data', 'y_train', 'fold_generator', 'USI', 'X_test', 'fix_imbalance', 'target_param', 'memory', 'seed', 'n_jobs_param', 'gpu_param', 'exp_name_log', 'X', 'y_test', 'is_multiclass', '_ml_usecase', 'log_plots_param', 'fold_groups_param', 'pipeline', 'logging_param', 'fold_shuffle_param', 'X_train', 'idx', 'html_param'}
2023-01-15 18:03:53,072:INFO:Checking environment
2023-01-15 18:03:53,072:INFO:python_version: 3.10.5
2023-01-15 18:03:53,072:INFO:python_build: ('tags/v3.10.5:f377153', 'Jun  6 2022 16:14:13')
2023-01-15 18:03:53,072:INFO:machine: AMD64
2023-01-15 18:03:53,072:INFO:platform: Windows-10-10.0.19045-SP0
2023-01-15 18:03:53,075:INFO:Memory: svmem(total=8494747648, available=1602383872, percent=81.1, used=6892363776, free=1602383872)
2023-01-15 18:03:53,076:INFO:Physical Core: 4
2023-01-15 18:03:53,076:INFO:Logical Core: 8
2023-01-15 18:03:53,076:INFO:Checking libraries
2023-01-15 18:03:53,076:INFO:System:
2023-01-15 18:03:53,076:INFO:    python: 3.10.5 (tags/v3.10.5:f377153, Jun  6 2022, 16:14:13) [MSC v.1929 64 bit (AMD64)]
2023-01-15 18:03:53,076:INFO:executable: c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\Scripts\python.exe
2023-01-15 18:03:53,076:INFO:   machine: Windows-10-10.0.19045-SP0
2023-01-15 18:03:53,076:INFO:PyCaret required dependencies:
2023-01-15 18:03:53,076:INFO:                 pip: 22.3.1
2023-01-15 18:03:53,076:INFO:          setuptools: 65.7.0
2023-01-15 18:03:53,076:INFO:             pycaret: 3.0.0rc8
2023-01-15 18:03:53,076:INFO:             IPython: 8.8.0
2023-01-15 18:03:53,076:INFO:          ipywidgets: 8.0.4
2023-01-15 18:03:53,076:INFO:                tqdm: 4.64.1
2023-01-15 18:03:53,077:INFO:               numpy: 1.23.5
2023-01-15 18:03:53,077:INFO:              pandas: 1.5.2
2023-01-15 18:03:53,077:INFO:              jinja2: 3.1.2
2023-01-15 18:03:53,077:INFO:               scipy: 1.10.0
2023-01-15 18:03:53,077:INFO:              joblib: 1.2.0
2023-01-15 18:03:53,077:INFO:             sklearn: 1.1.3
2023-01-15 18:03:53,077:INFO:                pyod: 1.0.7
2023-01-15 18:03:53,077:INFO:            imblearn: 0.10.1
2023-01-15 18:03:53,077:INFO:   category_encoders: 2.6.0
2023-01-15 18:03:53,077:INFO:            lightgbm: 3.3.4
2023-01-15 18:03:53,077:INFO:               numba: 0.56.4
2023-01-15 18:03:53,077:INFO:            requests: 2.28.2
2023-01-15 18:03:53,077:INFO:          matplotlib: 3.6.3
2023-01-15 18:03:53,077:INFO:          scikitplot: 0.3.7
2023-01-15 18:03:53,077:INFO:         yellowbrick: 1.5
2023-01-15 18:03:53,078:INFO:              plotly: 5.12.0
2023-01-15 18:03:53,078:INFO:             kaleido: 0.2.1
2023-01-15 18:03:53,078:INFO:         statsmodels: 0.13.5
2023-01-15 18:03:53,078:INFO:              sktime: 0.15.1
2023-01-15 18:03:53,078:INFO:               tbats: 1.1.2
2023-01-15 18:03:53,078:INFO:            pmdarima: 2.0.2
2023-01-15 18:03:53,078:INFO:              psutil: 5.9.4
2023-01-15 18:03:53,078:INFO:PyCaret optional dependencies:
2023-01-15 18:03:53,112:INFO:                shap: Not installed
2023-01-15 18:03:53,112:INFO:           interpret: Not installed
2023-01-15 18:03:53,113:INFO:                umap: Not installed
2023-01-15 18:03:53,113:INFO:    pandas_profiling: Not installed
2023-01-15 18:03:53,113:INFO:  explainerdashboard: Not installed
2023-01-15 18:03:53,113:INFO:             autoviz: Not installed
2023-01-15 18:03:53,113:INFO:           fairlearn: Not installed
2023-01-15 18:03:53,113:INFO:             xgboost: Not installed
2023-01-15 18:03:53,113:INFO:            catboost: Not installed
2023-01-15 18:03:53,113:INFO:              kmodes: Not installed
2023-01-15 18:03:53,113:INFO:             mlxtend: Not installed
2023-01-15 18:03:53,113:INFO:       statsforecast: Not installed
2023-01-15 18:03:53,113:INFO:        tune_sklearn: Not installed
2023-01-15 18:03:53,114:INFO:                 ray: Not installed
2023-01-15 18:03:53,114:INFO:            hyperopt: Not installed
2023-01-15 18:03:53,114:INFO:              optuna: Not installed
2023-01-15 18:03:53,114:INFO:               skopt: Not installed
2023-01-15 18:03:53,114:INFO:              mlflow: Not installed
2023-01-15 18:03:53,114:INFO:              gradio: Not installed
2023-01-15 18:03:53,114:INFO:             fastapi: Not installed
2023-01-15 18:03:53,114:INFO:             uvicorn: Not installed
2023-01-15 18:03:53,114:INFO:              m2cgen: Not installed
2023-01-15 18:03:53,114:INFO:           evidently: Not installed
2023-01-15 18:03:53,115:INFO:                nltk: Not installed
2023-01-15 18:03:53,115:INFO:            pyLDAvis: Not installed
2023-01-15 18:03:53,115:INFO:              gensim: Not installed
2023-01-15 18:03:53,115:INFO:               spacy: Not installed
2023-01-15 18:03:53,115:INFO:           wordcloud: Not installed
2023-01-15 18:03:53,115:INFO:            textblob: Not installed
2023-01-15 18:03:53,115:INFO:               fugue: Not installed
2023-01-15 18:03:53,115:INFO:           streamlit: Not installed
2023-01-15 18:03:53,115:INFO:             prophet: Not installed
2023-01-15 18:03:53,115:INFO:None
2023-01-15 18:03:53,115:INFO:Set up data.
2023-01-15 18:03:53,145:INFO:Set up train/test split.
2023-01-15 18:03:53,163:INFO:Set up index.
2023-01-15 18:03:53,164:INFO:Set up folding strategy.
2023-01-15 18:03:53,164:INFO:Assigning column types.
2023-01-15 18:03:53,171:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-01-15 18:03:53,239:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-01-15 18:03:53,241:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-15 18:03:53,288:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:03:53,305:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:03:53,357:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-01-15 18:03:53,357:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-15 18:03:53,393:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:03:53,394:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:03:53,394:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-01-15 18:03:53,448:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-15 18:03:53,482:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:03:53,482:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:03:53,537:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-15 18:03:53,569:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:03:53,570:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:03:53,571:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-01-15 18:03:53,661:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:03:53,661:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:03:53,751:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:03:53,752:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:03:53,753:INFO:Preparing preprocessing pipeline...
2023-01-15 18:03:53,756:INFO:Set up simple imputation.
2023-01-15 18:03:53,761:INFO:Set up encoding of ordinal features.
2023-01-15 18:03:53,765:INFO:Set up encoding of categorical features.
2023-01-15 18:03:54,114:INFO:Finished creating preprocessing pipeline.
2023-01-15 18:03:54,147:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\alepi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'hypertension',
                                             'heart_disease',
                                             'avg_glucose_level', 'bmi'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorica...
NaN     -1
dtype: int64}],
                                                               return_df=True,
                                                               verbose=0))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['gender', 'work_type',
                                             'smoking_status'],
                                    transformer=OneHotEncoder(cols=['gender',
                                                                    'work_type',
                                                                    'smoking_status'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False)
2023-01-15 18:03:54,147:INFO:Creating final display dataframe.
2023-01-15 18:03:56,343:INFO:Setup _display_container:                     Description             Value
0                    Session id                42
1                        Target            stroke
2                   Target type            Binary
3           Original data shape       (15304, 11)
4        Transformed data shape       (15304, 20)
5   Transformed train set shape       (11478, 20)
6    Transformed test set shape        (3826, 20)
7              Ordinal features                 2
8              Numeric features                 5
9          Categorical features                 5
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator   StratifiedKFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  clf-default-name
22                          USI              1766
2023-01-15 18:03:56,436:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:03:56,436:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:03:56,528:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:03:56,529:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:03:56,530:INFO:setup() successfully completed in 3.46s...............
2023-01-15 18:05:01,714:INFO:Initializing compare_models()
2023-01-15 18:05:01,715:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000196DF893850>, include=None, fold=None, round=4, cross_validation=True, sort=AUC, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000196DF893850>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'AUC', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-01-15 18:05:01,715:INFO:Checking exceptions
2023-01-15 18:05:01,722:INFO:Preparing display monitor
2023-01-15 18:05:01,777:INFO:Initializing Logistic Regression
2023-01-15 18:05:01,777:INFO:Total runtime is 0.0 minutes
2023-01-15 18:05:01,782:INFO:SubProcess create_model() called ==================================
2023-01-15 18:05:01,782:INFO:Initializing create_model()
2023-01-15 18:05:01,783:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000196DF893850>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000196DFD8F8E0>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:05:01,783:INFO:Checking exceptions
2023-01-15 18:05:01,783:INFO:Importing libraries
2023-01-15 18:05:01,783:INFO:Copying training dataset
2023-01-15 18:05:01,789:INFO:Defining folds
2023-01-15 18:05:01,790:INFO:Declaring metric variables
2023-01-15 18:05:01,795:INFO:Importing untrained model
2023-01-15 18:05:01,801:INFO:Logistic Regression Imported successfully
2023-01-15 18:05:01,812:INFO:Starting cross validation
2023-01-15 18:05:01,814:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:05:09,422:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\pycaret\internal\pipeline.py:192: UserWarning: Persisting input arguments took 0.51s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y, fitted_transformer = self._memory_fit(

2023-01-15 18:05:09,465:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\pycaret\internal\pipeline.py:192: UserWarning: Persisting input arguments took 0.51s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y, fitted_transformer = self._memory_fit(

2023-01-15 18:05:09,482:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\pycaret\internal\pipeline.py:192: UserWarning: Persisting input arguments took 0.50s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y, fitted_transformer = self._memory_fit(

2023-01-15 18:05:09,513:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\pycaret\internal\pipeline.py:192: UserWarning: Persisting input arguments took 0.51s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y, fitted_transformer = self._memory_fit(

2023-01-15 18:05:09,522:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\pycaret\internal\pipeline.py:192: UserWarning: Persisting input arguments took 0.50s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y, fitted_transformer = self._memory_fit(

2023-01-15 18:05:15,109:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-01-15 18:05:18,751:INFO:Calculating mean and std
2023-01-15 18:05:18,752:INFO:Creating metrics dataframe
2023-01-15 18:05:18,756:INFO:Uploading results into container
2023-01-15 18:05:18,757:INFO:Uploading model into container now
2023-01-15 18:05:18,758:INFO:_master_model_container: 1
2023-01-15 18:05:18,758:INFO:_display_container: 2
2023-01-15 18:05:18,759:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-01-15 18:05:18,760:INFO:create_model() successfully completed......................................
2023-01-15 18:05:18,859:INFO:SubProcess create_model() end ==================================
2023-01-15 18:05:18,859:INFO:Creating metrics dataframe
2023-01-15 18:05:18,872:INFO:Initializing K Neighbors Classifier
2023-01-15 18:05:18,872:INFO:Total runtime is 0.2849089026451111 minutes
2023-01-15 18:05:18,878:INFO:SubProcess create_model() called ==================================
2023-01-15 18:05:18,879:INFO:Initializing create_model()
2023-01-15 18:05:18,880:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000196DF893850>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000196DFD8F8E0>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:05:18,880:INFO:Checking exceptions
2023-01-15 18:05:18,881:INFO:Importing libraries
2023-01-15 18:05:18,881:INFO:Copying training dataset
2023-01-15 18:05:18,887:INFO:Defining folds
2023-01-15 18:05:18,887:INFO:Declaring metric variables
2023-01-15 18:05:18,893:INFO:Importing untrained model
2023-01-15 18:05:18,903:INFO:K Neighbors Classifier Imported successfully
2023-01-15 18:05:18,917:INFO:Starting cross validation
2023-01-15 18:05:18,919:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:05:20,879:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\pycaret\internal\pipeline.py:192: UserWarning: Persisting input arguments took 0.67s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y, fitted_transformer = self._memory_fit(

2023-01-15 18:05:20,880:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\pycaret\internal\pipeline.py:192: UserWarning: Persisting input arguments took 0.66s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y, fitted_transformer = self._memory_fit(

2023-01-15 18:05:20,895:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\pycaret\internal\pipeline.py:192: UserWarning: Persisting input arguments took 0.65s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y, fitted_transformer = self._memory_fit(

2023-01-15 18:05:20,908:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\pycaret\internal\pipeline.py:192: UserWarning: Persisting input arguments took 0.65s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y, fitted_transformer = self._memory_fit(

2023-01-15 18:05:20,913:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\pycaret\internal\pipeline.py:192: UserWarning: Persisting input arguments took 0.65s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y, fitted_transformer = self._memory_fit(

2023-01-15 18:05:20,919:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\pycaret\internal\pipeline.py:192: UserWarning: Persisting input arguments took 0.67s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y, fitted_transformer = self._memory_fit(

2023-01-15 18:05:20,953:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\pycaret\internal\pipeline.py:192: UserWarning: Persisting input arguments took 0.64s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y, fitted_transformer = self._memory_fit(

2023-01-15 18:05:20,955:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\pycaret\internal\pipeline.py:192: UserWarning: Persisting input arguments took 0.64s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y, fitted_transformer = self._memory_fit(

2023-01-15 18:05:24,185:INFO:Calculating mean and std
2023-01-15 18:05:24,186:INFO:Creating metrics dataframe
2023-01-15 18:05:24,191:INFO:Uploading results into container
2023-01-15 18:05:24,191:INFO:Uploading model into container now
2023-01-15 18:05:24,192:INFO:_master_model_container: 2
2023-01-15 18:05:24,192:INFO:_display_container: 2
2023-01-15 18:05:24,192:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-01-15 18:05:24,192:INFO:create_model() successfully completed......................................
2023-01-15 18:05:24,289:INFO:SubProcess create_model() end ==================================
2023-01-15 18:05:24,289:INFO:Creating metrics dataframe
2023-01-15 18:05:24,323:INFO:Initializing Naive Bayes
2023-01-15 18:05:24,324:INFO:Total runtime is 0.37577696243921915 minutes
2023-01-15 18:05:24,335:INFO:SubProcess create_model() called ==================================
2023-01-15 18:05:24,335:INFO:Initializing create_model()
2023-01-15 18:05:24,336:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000196DF893850>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000196DFD8F8E0>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:05:24,336:INFO:Checking exceptions
2023-01-15 18:05:24,336:INFO:Importing libraries
2023-01-15 18:05:24,336:INFO:Copying training dataset
2023-01-15 18:05:24,348:INFO:Defining folds
2023-01-15 18:05:24,349:INFO:Declaring metric variables
2023-01-15 18:05:24,356:INFO:Importing untrained model
2023-01-15 18:05:24,367:INFO:Naive Bayes Imported successfully
2023-01-15 18:05:24,382:INFO:Starting cross validation
2023-01-15 18:05:24,385:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:05:26,849:INFO:Calculating mean and std
2023-01-15 18:05:26,849:INFO:Creating metrics dataframe
2023-01-15 18:05:26,858:INFO:Uploading results into container
2023-01-15 18:05:26,858:INFO:Uploading model into container now
2023-01-15 18:05:26,861:INFO:_master_model_container: 3
2023-01-15 18:05:26,861:INFO:_display_container: 2
2023-01-15 18:05:26,862:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-01-15 18:05:26,862:INFO:create_model() successfully completed......................................
2023-01-15 18:05:26,944:INFO:SubProcess create_model() end ==================================
2023-01-15 18:05:26,944:INFO:Creating metrics dataframe
2023-01-15 18:05:26,961:INFO:Initializing Decision Tree Classifier
2023-01-15 18:05:26,961:INFO:Total runtime is 0.4197286367416382 minutes
2023-01-15 18:05:26,966:INFO:SubProcess create_model() called ==================================
2023-01-15 18:05:26,966:INFO:Initializing create_model()
2023-01-15 18:05:26,967:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000196DF893850>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000196DFD8F8E0>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:05:26,967:INFO:Checking exceptions
2023-01-15 18:05:26,967:INFO:Importing libraries
2023-01-15 18:05:26,967:INFO:Copying training dataset
2023-01-15 18:05:26,979:INFO:Defining folds
2023-01-15 18:05:26,979:INFO:Declaring metric variables
2023-01-15 18:05:26,987:INFO:Importing untrained model
2023-01-15 18:05:26,996:INFO:Decision Tree Classifier Imported successfully
2023-01-15 18:05:27,013:INFO:Starting cross validation
2023-01-15 18:05:27,016:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:06:10,166:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-01-15 18:06:10,166:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-01-15 18:06:10,166:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-01-15 18:06:10,166:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-01-15 18:06:10,782:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-01-15 18:06:11,298:INFO:PyCaret ClassificationExperiment
2023-01-15 18:06:11,298:INFO:Logging name: clf-default-name
2023-01-15 18:06:11,298:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-01-15 18:06:11,298:INFO:version 3.0.0.rc8
2023-01-15 18:06:11,298:INFO:Initializing setup()
2023-01-15 18:06:11,298:INFO:self.USI: 0287
2023-01-15 18:06:11,298:INFO:self._variable_keys: {'USI', 'X_test', 'gpu_n_jobs_param', 'X', 'pipeline', '_ml_usecase', 'n_jobs_param', 'memory', 'fix_imbalance', 'logging_param', 'X_train', 'html_param', 'data', 'target_param', 'y', 'fold_groups_param', 'fold_shuffle_param', 'gpu_param', 'seed', 'log_plots_param', 'y_test', 'y_train', 'is_multiclass', 'exp_id', '_available_plots', 'exp_name_log', 'idx', 'fold_generator'}
2023-01-15 18:06:11,299:INFO:Checking environment
2023-01-15 18:06:11,299:INFO:python_version: 3.10.5
2023-01-15 18:06:11,299:INFO:python_build: ('tags/v3.10.5:f377153', 'Jun  6 2022 16:14:13')
2023-01-15 18:06:11,299:INFO:machine: AMD64
2023-01-15 18:06:11,299:INFO:platform: Windows-10-10.0.19045-SP0
2023-01-15 18:06:11,303:INFO:Memory: svmem(total=8494747648, available=1307926528, percent=84.6, used=7186821120, free=1307926528)
2023-01-15 18:06:11,303:INFO:Physical Core: 4
2023-01-15 18:06:11,303:INFO:Logical Core: 8
2023-01-15 18:06:11,303:INFO:Checking libraries
2023-01-15 18:06:11,303:INFO:System:
2023-01-15 18:06:11,303:INFO:    python: 3.10.5 (tags/v3.10.5:f377153, Jun  6 2022, 16:14:13) [MSC v.1929 64 bit (AMD64)]
2023-01-15 18:06:11,303:INFO:executable: c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\Scripts\python.exe
2023-01-15 18:06:11,303:INFO:   machine: Windows-10-10.0.19045-SP0
2023-01-15 18:06:11,303:INFO:PyCaret required dependencies:
2023-01-15 18:06:11,303:INFO:                 pip: 22.3.1
2023-01-15 18:06:11,303:INFO:          setuptools: 65.7.0
2023-01-15 18:06:11,303:INFO:             pycaret: 3.0.0rc8
2023-01-15 18:06:11,303:INFO:             IPython: 8.8.0
2023-01-15 18:06:11,303:INFO:          ipywidgets: 8.0.4
2023-01-15 18:06:11,303:INFO:                tqdm: 4.64.1
2023-01-15 18:06:11,303:INFO:               numpy: 1.23.5
2023-01-15 18:06:11,303:INFO:              pandas: 1.5.2
2023-01-15 18:06:11,303:INFO:              jinja2: 3.1.2
2023-01-15 18:06:11,303:INFO:               scipy: 1.10.0
2023-01-15 18:06:11,303:INFO:              joblib: 1.2.0
2023-01-15 18:06:11,303:INFO:             sklearn: 1.1.3
2023-01-15 18:06:11,305:INFO:                pyod: 1.0.7
2023-01-15 18:06:11,305:INFO:            imblearn: 0.10.1
2023-01-15 18:06:11,305:INFO:   category_encoders: 2.6.0
2023-01-15 18:06:11,305:INFO:            lightgbm: 3.3.4
2023-01-15 18:06:11,305:INFO:               numba: 0.56.4
2023-01-15 18:06:11,305:INFO:            requests: 2.28.2
2023-01-15 18:06:11,305:INFO:          matplotlib: 3.6.3
2023-01-15 18:06:11,305:INFO:          scikitplot: 0.3.7
2023-01-15 18:06:11,305:INFO:         yellowbrick: 1.5
2023-01-15 18:06:11,305:INFO:              plotly: 5.12.0
2023-01-15 18:06:11,305:INFO:             kaleido: 0.2.1
2023-01-15 18:06:11,305:INFO:         statsmodels: 0.13.5
2023-01-15 18:06:11,305:INFO:              sktime: 0.15.1
2023-01-15 18:06:11,305:INFO:               tbats: 1.1.2
2023-01-15 18:06:11,305:INFO:            pmdarima: 2.0.2
2023-01-15 18:06:11,305:INFO:              psutil: 5.9.4
2023-01-15 18:06:11,306:INFO:PyCaret optional dependencies:
2023-01-15 18:06:11,335:INFO:                shap: Not installed
2023-01-15 18:06:11,335:INFO:           interpret: Not installed
2023-01-15 18:06:11,335:INFO:                umap: Not installed
2023-01-15 18:06:11,335:INFO:    pandas_profiling: Not installed
2023-01-15 18:06:11,335:INFO:  explainerdashboard: Not installed
2023-01-15 18:06:11,335:INFO:             autoviz: Not installed
2023-01-15 18:06:11,335:INFO:           fairlearn: Not installed
2023-01-15 18:06:11,335:INFO:             xgboost: Not installed
2023-01-15 18:06:11,335:INFO:            catboost: Not installed
2023-01-15 18:06:11,335:INFO:              kmodes: Not installed
2023-01-15 18:06:11,335:INFO:             mlxtend: Not installed
2023-01-15 18:06:11,335:INFO:       statsforecast: Not installed
2023-01-15 18:06:11,336:INFO:        tune_sklearn: Not installed
2023-01-15 18:06:11,336:INFO:                 ray: Not installed
2023-01-15 18:06:11,336:INFO:            hyperopt: Not installed
2023-01-15 18:06:11,336:INFO:              optuna: Not installed
2023-01-15 18:06:11,336:INFO:               skopt: Not installed
2023-01-15 18:06:11,336:INFO:              mlflow: Not installed
2023-01-15 18:06:11,336:INFO:              gradio: Not installed
2023-01-15 18:06:11,336:INFO:             fastapi: Not installed
2023-01-15 18:06:11,336:INFO:             uvicorn: Not installed
2023-01-15 18:06:11,336:INFO:              m2cgen: Not installed
2023-01-15 18:06:11,336:INFO:           evidently: Not installed
2023-01-15 18:06:11,336:INFO:                nltk: Not installed
2023-01-15 18:06:11,336:INFO:            pyLDAvis: Not installed
2023-01-15 18:06:11,336:INFO:              gensim: Not installed
2023-01-15 18:06:11,336:INFO:               spacy: Not installed
2023-01-15 18:06:11,337:INFO:           wordcloud: Not installed
2023-01-15 18:06:11,337:INFO:            textblob: Not installed
2023-01-15 18:06:11,337:INFO:               fugue: Not installed
2023-01-15 18:06:11,337:INFO:           streamlit: Not installed
2023-01-15 18:06:11,337:INFO:             prophet: Not installed
2023-01-15 18:06:11,337:INFO:None
2023-01-15 18:06:11,337:INFO:Set up data.
2023-01-15 18:06:11,353:INFO:Set up train/test split.
2023-01-15 18:06:11,364:INFO:Set up index.
2023-01-15 18:06:11,364:INFO:Set up folding strategy.
2023-01-15 18:06:11,364:INFO:Assigning column types.
2023-01-15 18:06:11,368:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-01-15 18:06:11,424:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-01-15 18:06:11,427:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-15 18:06:11,467:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:06:11,484:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:06:11,549:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-01-15 18:06:11,550:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-15 18:06:11,592:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:06:11,592:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:06:11,592:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-01-15 18:06:11,656:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-15 18:06:11,696:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:06:11,697:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:06:11,764:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-15 18:06:11,803:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:06:11,803:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:06:11,804:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-01-15 18:06:11,907:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:06:11,907:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:06:12,012:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:06:12,012:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:06:12,014:INFO:Preparing preprocessing pipeline...
2023-01-15 18:06:12,016:INFO:Set up simple imputation.
2023-01-15 18:06:12,021:INFO:Set up encoding of ordinal features.
2023-01-15 18:06:12,025:INFO:Set up encoding of categorical features.
2023-01-15 18:06:12,368:INFO:Finished creating preprocessing pipeline.
2023-01-15 18:06:12,400:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\alepi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'hypertension',
                                             'heart_disease',
                                             'avg_glucose_level', 'bmi'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorica...
NaN     -1
dtype: int64}],
                                                               return_df=True,
                                                               verbose=0))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['gender', 'work_type',
                                             'smoking_status'],
                                    transformer=OneHotEncoder(cols=['gender',
                                                                    'work_type',
                                                                    'smoking_status'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False)
2023-01-15 18:06:12,400:INFO:Creating final display dataframe.
2023-01-15 18:06:14,528:INFO:Setup _display_container:                     Description             Value
0                    Session id                42
1                        Target            stroke
2                   Target type            Binary
3           Original data shape       (15304, 11)
4        Transformed data shape       (15304, 20)
5   Transformed train set shape       (11478, 20)
6    Transformed test set shape        (3826, 20)
7              Ordinal features                 2
8              Numeric features                 5
9          Categorical features                 5
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator   StratifiedKFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  clf-default-name
22                          USI              0287
2023-01-15 18:06:14,634:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:06:14,634:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:06:14,740:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:06:14,740:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:06:14,742:INFO:setup() successfully completed in 3.45s...............
2023-01-15 18:06:14,784:INFO:Initializing compare_models()
2023-01-15 18:06:14,784:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001991DC93910>, include=None, fold=None, round=4, cross_validation=True, sort=AUC, n_select=3, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=False, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001991DC93910>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'AUC', 'n_select': 3, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': False, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-01-15 18:06:14,784:INFO:Checking exceptions
2023-01-15 18:06:14,791:INFO:Preparing display monitor
2023-01-15 18:06:14,795:INFO:Initializing Logistic Regression
2023-01-15 18:06:14,795:INFO:Total runtime is 0.0 minutes
2023-01-15 18:06:14,795:INFO:SubProcess create_model() called ==================================
2023-01-15 18:06:14,796:INFO:Initializing create_model()
2023-01-15 18:06:14,796:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001991DC93910>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000199797ADFF0>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:06:14,796:INFO:Checking exceptions
2023-01-15 18:06:14,796:INFO:Importing libraries
2023-01-15 18:06:14,796:INFO:Copying training dataset
2023-01-15 18:06:14,801:INFO:Defining folds
2023-01-15 18:06:14,802:INFO:Declaring metric variables
2023-01-15 18:06:14,802:INFO:Importing untrained model
2023-01-15 18:06:14,803:INFO:Logistic Regression Imported successfully
2023-01-15 18:06:14,803:INFO:Starting cross validation
2023-01-15 18:06:14,805:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:06:26,901:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-01-15 18:06:28,223:INFO:Calculating mean and std
2023-01-15 18:06:28,223:INFO:Creating metrics dataframe
2023-01-15 18:06:28,226:INFO:Uploading results into container
2023-01-15 18:06:28,229:INFO:Uploading model into container now
2023-01-15 18:06:28,229:INFO:_master_model_container: 1
2023-01-15 18:06:28,229:INFO:_display_container: 2
2023-01-15 18:06:28,229:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-01-15 18:06:28,229:INFO:create_model() successfully completed......................................
2023-01-15 18:06:28,301:INFO:SubProcess create_model() end ==================================
2023-01-15 18:06:28,301:INFO:Creating metrics dataframe
2023-01-15 18:06:28,306:INFO:Initializing K Neighbors Classifier
2023-01-15 18:06:28,306:INFO:Total runtime is 0.22517911593119302 minutes
2023-01-15 18:06:28,306:INFO:SubProcess create_model() called ==================================
2023-01-15 18:06:28,307:INFO:Initializing create_model()
2023-01-15 18:06:28,307:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001991DC93910>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000199797ADFF0>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:06:28,307:INFO:Checking exceptions
2023-01-15 18:06:28,307:INFO:Importing libraries
2023-01-15 18:06:28,307:INFO:Copying training dataset
2023-01-15 18:06:28,309:INFO:Defining folds
2023-01-15 18:06:28,312:INFO:Declaring metric variables
2023-01-15 18:06:28,313:INFO:Importing untrained model
2023-01-15 18:06:28,313:INFO:K Neighbors Classifier Imported successfully
2023-01-15 18:06:28,314:INFO:Starting cross validation
2023-01-15 18:06:28,316:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:06:31,134:INFO:Calculating mean and std
2023-01-15 18:06:31,134:INFO:Creating metrics dataframe
2023-01-15 18:06:31,139:INFO:Uploading results into container
2023-01-15 18:06:31,139:INFO:Uploading model into container now
2023-01-15 18:06:31,140:INFO:_master_model_container: 2
2023-01-15 18:06:31,140:INFO:_display_container: 2
2023-01-15 18:06:31,140:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-01-15 18:06:31,140:INFO:create_model() successfully completed......................................
2023-01-15 18:06:31,211:INFO:SubProcess create_model() end ==================================
2023-01-15 18:06:31,211:INFO:Creating metrics dataframe
2023-01-15 18:06:31,218:INFO:Initializing Naive Bayes
2023-01-15 18:06:31,218:INFO:Total runtime is 0.2737206816673279 minutes
2023-01-15 18:06:31,218:INFO:SubProcess create_model() called ==================================
2023-01-15 18:06:31,218:INFO:Initializing create_model()
2023-01-15 18:06:31,219:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001991DC93910>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000199797ADFF0>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:06:31,219:INFO:Checking exceptions
2023-01-15 18:06:31,219:INFO:Importing libraries
2023-01-15 18:06:31,219:INFO:Copying training dataset
2023-01-15 18:06:31,223:INFO:Defining folds
2023-01-15 18:06:31,223:INFO:Declaring metric variables
2023-01-15 18:06:31,224:INFO:Importing untrained model
2023-01-15 18:06:31,224:INFO:Naive Bayes Imported successfully
2023-01-15 18:06:31,224:INFO:Starting cross validation
2023-01-15 18:06:31,226:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:06:33,258:INFO:Calculating mean and std
2023-01-15 18:06:33,259:INFO:Creating metrics dataframe
2023-01-15 18:06:33,264:INFO:Uploading results into container
2023-01-15 18:06:33,264:INFO:Uploading model into container now
2023-01-15 18:06:33,265:INFO:_master_model_container: 3
2023-01-15 18:06:33,265:INFO:_display_container: 2
2023-01-15 18:06:33,265:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-01-15 18:06:33,265:INFO:create_model() successfully completed......................................
2023-01-15 18:06:33,337:INFO:SubProcess create_model() end ==================================
2023-01-15 18:06:33,338:INFO:Creating metrics dataframe
2023-01-15 18:06:33,343:INFO:Initializing Decision Tree Classifier
2023-01-15 18:06:33,344:INFO:Total runtime is 0.3091480215390523 minutes
2023-01-15 18:06:33,344:INFO:SubProcess create_model() called ==================================
2023-01-15 18:06:33,344:INFO:Initializing create_model()
2023-01-15 18:06:33,344:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001991DC93910>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000199797ADFF0>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:06:33,344:INFO:Checking exceptions
2023-01-15 18:06:33,344:INFO:Importing libraries
2023-01-15 18:06:33,344:INFO:Copying training dataset
2023-01-15 18:06:33,351:INFO:Defining folds
2023-01-15 18:06:33,351:INFO:Declaring metric variables
2023-01-15 18:06:33,351:INFO:Importing untrained model
2023-01-15 18:06:33,352:INFO:Decision Tree Classifier Imported successfully
2023-01-15 18:06:33,352:INFO:Starting cross validation
2023-01-15 18:06:33,354:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:06:35,476:INFO:Calculating mean and std
2023-01-15 18:06:35,477:INFO:Creating metrics dataframe
2023-01-15 18:06:35,481:INFO:Uploading results into container
2023-01-15 18:06:35,482:INFO:Uploading model into container now
2023-01-15 18:06:35,482:INFO:_master_model_container: 4
2023-01-15 18:06:35,482:INFO:_display_container: 2
2023-01-15 18:06:35,483:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=42, splitter='best')
2023-01-15 18:06:35,483:INFO:create_model() successfully completed......................................
2023-01-15 18:06:35,554:INFO:SubProcess create_model() end ==================================
2023-01-15 18:06:35,554:INFO:Creating metrics dataframe
2023-01-15 18:06:35,560:INFO:Initializing SVM - Linear Kernel
2023-01-15 18:06:35,560:INFO:Total runtime is 0.3460718949635823 minutes
2023-01-15 18:06:35,561:INFO:SubProcess create_model() called ==================================
2023-01-15 18:06:35,561:INFO:Initializing create_model()
2023-01-15 18:06:35,561:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001991DC93910>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000199797ADFF0>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:06:35,561:INFO:Checking exceptions
2023-01-15 18:06:35,561:INFO:Importing libraries
2023-01-15 18:06:35,561:INFO:Copying training dataset
2023-01-15 18:06:35,566:INFO:Defining folds
2023-01-15 18:06:35,567:INFO:Declaring metric variables
2023-01-15 18:06:35,567:INFO:Importing untrained model
2023-01-15 18:06:35,567:INFO:SVM - Linear Kernel Imported successfully
2023-01-15 18:06:35,568:INFO:Starting cross validation
2023-01-15 18:06:35,569:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:06:36,907:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-15 18:06:37,040:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-15 18:06:37,651:INFO:Calculating mean and std
2023-01-15 18:06:37,652:INFO:Creating metrics dataframe
2023-01-15 18:06:37,656:INFO:Uploading results into container
2023-01-15 18:06:37,656:INFO:Uploading model into container now
2023-01-15 18:06:37,657:INFO:_master_model_container: 5
2023-01-15 18:06:37,657:INFO:_display_container: 2
2023-01-15 18:06:37,657:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-01-15 18:06:37,658:INFO:create_model() successfully completed......................................
2023-01-15 18:06:37,729:INFO:SubProcess create_model() end ==================================
2023-01-15 18:06:37,729:INFO:Creating metrics dataframe
2023-01-15 18:06:37,737:INFO:Initializing Ridge Classifier
2023-01-15 18:06:37,737:INFO:Total runtime is 0.3823632717132568 minutes
2023-01-15 18:06:37,737:INFO:SubProcess create_model() called ==================================
2023-01-15 18:06:37,737:INFO:Initializing create_model()
2023-01-15 18:06:37,737:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001991DC93910>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000199797ADFF0>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:06:37,738:INFO:Checking exceptions
2023-01-15 18:06:37,738:INFO:Importing libraries
2023-01-15 18:06:37,738:INFO:Copying training dataset
2023-01-15 18:06:37,742:INFO:Defining folds
2023-01-15 18:06:37,742:INFO:Declaring metric variables
2023-01-15 18:06:37,742:INFO:Importing untrained model
2023-01-15 18:06:37,743:INFO:Ridge Classifier Imported successfully
2023-01-15 18:06:37,743:INFO:Starting cross validation
2023-01-15 18:06:37,745:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:06:38,875:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-15 18:06:38,894:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-15 18:06:38,895:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-15 18:06:38,898:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-15 18:06:38,904:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-15 18:06:38,908:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-15 18:06:38,917:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-15 18:06:38,928:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-15 18:06:39,529:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-15 18:06:39,538:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-15 18:06:39,542:INFO:Calculating mean and std
2023-01-15 18:06:39,542:INFO:Creating metrics dataframe
2023-01-15 18:06:39,546:INFO:Uploading results into container
2023-01-15 18:06:39,547:INFO:Uploading model into container now
2023-01-15 18:06:39,549:INFO:_master_model_container: 6
2023-01-15 18:06:39,549:INFO:_display_container: 2
2023-01-15 18:06:39,550:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize='deprecated', positive=False,
                random_state=42, solver='auto', tol=0.001)
2023-01-15 18:06:39,550:INFO:create_model() successfully completed......................................
2023-01-15 18:06:39,620:INFO:SubProcess create_model() end ==================================
2023-01-15 18:06:39,620:INFO:Creating metrics dataframe
2023-01-15 18:06:39,626:INFO:Initializing Random Forest Classifier
2023-01-15 18:06:39,626:INFO:Total runtime is 0.41385156313578286 minutes
2023-01-15 18:06:39,626:INFO:SubProcess create_model() called ==================================
2023-01-15 18:06:39,626:INFO:Initializing create_model()
2023-01-15 18:06:39,626:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001991DC93910>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000199797ADFF0>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:06:39,626:INFO:Checking exceptions
2023-01-15 18:06:39,627:INFO:Importing libraries
2023-01-15 18:06:39,627:INFO:Copying training dataset
2023-01-15 18:06:39,633:INFO:Defining folds
2023-01-15 18:06:39,633:INFO:Declaring metric variables
2023-01-15 18:06:39,633:INFO:Importing untrained model
2023-01-15 18:06:39,634:INFO:Random Forest Classifier Imported successfully
2023-01-15 18:06:39,634:INFO:Starting cross validation
2023-01-15 18:06:39,636:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:06:44,336:INFO:Calculating mean and std
2023-01-15 18:06:44,336:INFO:Creating metrics dataframe
2023-01-15 18:06:44,341:INFO:Uploading results into container
2023-01-15 18:06:44,342:INFO:Uploading model into container now
2023-01-15 18:06:44,342:INFO:_master_model_container: 7
2023-01-15 18:06:44,342:INFO:_display_container: 2
2023-01-15 18:06:44,343:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=42, verbose=0, warm_start=False)
2023-01-15 18:06:44,343:INFO:create_model() successfully completed......................................
2023-01-15 18:06:44,420:INFO:SubProcess create_model() end ==================================
2023-01-15 18:06:44,420:INFO:Creating metrics dataframe
2023-01-15 18:06:44,427:INFO:Initializing Quadratic Discriminant Analysis
2023-01-15 18:06:44,427:INFO:Total runtime is 0.4938586950302124 minutes
2023-01-15 18:06:44,427:INFO:SubProcess create_model() called ==================================
2023-01-15 18:06:44,427:INFO:Initializing create_model()
2023-01-15 18:06:44,427:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001991DC93910>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000199797ADFF0>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:06:44,427:INFO:Checking exceptions
2023-01-15 18:06:44,428:INFO:Importing libraries
2023-01-15 18:06:44,428:INFO:Copying training dataset
2023-01-15 18:06:44,433:INFO:Defining folds
2023-01-15 18:06:44,433:INFO:Declaring metric variables
2023-01-15 18:06:44,434:INFO:Importing untrained model
2023-01-15 18:06:44,434:INFO:Quadratic Discriminant Analysis Imported successfully
2023-01-15 18:06:44,434:INFO:Starting cross validation
2023-01-15 18:06:44,436:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:06:45,413:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-01-15 18:06:45,415:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-01-15 18:06:45,415:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-01-15 18:06:45,422:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-01-15 18:06:45,438:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-01-15 18:06:45,443:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-01-15 18:06:45,464:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-01-15 18:06:45,473:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-01-15 18:06:46,340:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-01-15 18:06:46,341:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-01-15 18:06:46,531:INFO:Calculating mean and std
2023-01-15 18:06:46,532:INFO:Creating metrics dataframe
2023-01-15 18:06:46,537:INFO:Uploading results into container
2023-01-15 18:06:46,537:INFO:Uploading model into container now
2023-01-15 18:06:46,538:INFO:_master_model_container: 8
2023-01-15 18:06:46,538:INFO:_display_container: 2
2023-01-15 18:06:46,538:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-01-15 18:06:46,538:INFO:create_model() successfully completed......................................
2023-01-15 18:06:46,611:INFO:SubProcess create_model() end ==================================
2023-01-15 18:06:46,611:INFO:Creating metrics dataframe
2023-01-15 18:06:46,618:INFO:Initializing Ada Boost Classifier
2023-01-15 18:06:46,618:INFO:Total runtime is 0.530376116434733 minutes
2023-01-15 18:06:46,618:INFO:SubProcess create_model() called ==================================
2023-01-15 18:06:46,619:INFO:Initializing create_model()
2023-01-15 18:06:46,619:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001991DC93910>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000199797ADFF0>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:06:46,619:INFO:Checking exceptions
2023-01-15 18:06:46,619:INFO:Importing libraries
2023-01-15 18:06:46,619:INFO:Copying training dataset
2023-01-15 18:06:46,623:INFO:Defining folds
2023-01-15 18:06:46,623:INFO:Declaring metric variables
2023-01-15 18:06:46,624:INFO:Importing untrained model
2023-01-15 18:06:46,624:INFO:Ada Boost Classifier Imported successfully
2023-01-15 18:06:46,624:INFO:Starting cross validation
2023-01-15 18:06:46,626:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:06:50,059:INFO:Calculating mean and std
2023-01-15 18:06:50,060:INFO:Creating metrics dataframe
2023-01-15 18:06:50,063:INFO:Uploading results into container
2023-01-15 18:06:50,064:INFO:Uploading model into container now
2023-01-15 18:06:50,065:INFO:_master_model_container: 9
2023-01-15 18:06:50,065:INFO:_display_container: 2
2023-01-15 18:06:50,065:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2023-01-15 18:06:50,065:INFO:create_model() successfully completed......................................
2023-01-15 18:06:50,136:INFO:SubProcess create_model() end ==================================
2023-01-15 18:06:50,136:INFO:Creating metrics dataframe
2023-01-15 18:06:50,142:INFO:Initializing Gradient Boosting Classifier
2023-01-15 18:06:50,142:INFO:Total runtime is 0.5891193429629008 minutes
2023-01-15 18:06:50,142:INFO:SubProcess create_model() called ==================================
2023-01-15 18:06:50,142:INFO:Initializing create_model()
2023-01-15 18:06:50,142:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001991DC93910>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000199797ADFF0>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:06:50,142:INFO:Checking exceptions
2023-01-15 18:06:50,143:INFO:Importing libraries
2023-01-15 18:06:50,143:INFO:Copying training dataset
2023-01-15 18:06:50,147:INFO:Defining folds
2023-01-15 18:06:50,147:INFO:Declaring metric variables
2023-01-15 18:06:50,147:INFO:Importing untrained model
2023-01-15 18:06:50,148:INFO:Gradient Boosting Classifier Imported successfully
2023-01-15 18:06:50,148:INFO:Starting cross validation
2023-01-15 18:06:50,151:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:06:55,767:INFO:Calculating mean and std
2023-01-15 18:06:55,767:INFO:Creating metrics dataframe
2023-01-15 18:06:55,773:INFO:Uploading results into container
2023-01-15 18:06:55,774:INFO:Uploading model into container now
2023-01-15 18:06:55,774:INFO:_master_model_container: 10
2023-01-15 18:06:55,774:INFO:_display_container: 2
2023-01-15 18:06:55,775:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-01-15 18:06:55,775:INFO:create_model() successfully completed......................................
2023-01-15 18:06:55,844:INFO:SubProcess create_model() end ==================================
2023-01-15 18:06:55,844:INFO:Creating metrics dataframe
2023-01-15 18:06:55,849:INFO:Initializing Linear Discriminant Analysis
2023-01-15 18:06:55,849:INFO:Total runtime is 0.6842283487319947 minutes
2023-01-15 18:06:55,850:INFO:SubProcess create_model() called ==================================
2023-01-15 18:06:55,850:INFO:Initializing create_model()
2023-01-15 18:06:55,850:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001991DC93910>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000199797ADFF0>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:06:55,850:INFO:Checking exceptions
2023-01-15 18:06:55,850:INFO:Importing libraries
2023-01-15 18:06:55,850:INFO:Copying training dataset
2023-01-15 18:06:55,855:INFO:Defining folds
2023-01-15 18:06:55,856:INFO:Declaring metric variables
2023-01-15 18:06:55,856:INFO:Importing untrained model
2023-01-15 18:06:55,856:INFO:Linear Discriminant Analysis Imported successfully
2023-01-15 18:06:55,857:INFO:Starting cross validation
2023-01-15 18:06:55,858:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:06:57,980:INFO:Calculating mean and std
2023-01-15 18:06:57,981:INFO:Creating metrics dataframe
2023-01-15 18:06:57,985:INFO:Uploading results into container
2023-01-15 18:06:57,988:INFO:Uploading model into container now
2023-01-15 18:06:57,988:INFO:_master_model_container: 11
2023-01-15 18:06:57,988:INFO:_display_container: 2
2023-01-15 18:06:57,989:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-01-15 18:06:57,989:INFO:create_model() successfully completed......................................
2023-01-15 18:06:58,061:INFO:SubProcess create_model() end ==================================
2023-01-15 18:06:58,061:INFO:Creating metrics dataframe
2023-01-15 18:06:58,067:INFO:Initializing Extra Trees Classifier
2023-01-15 18:06:58,067:INFO:Total runtime is 0.7212018450101217 minutes
2023-01-15 18:06:58,068:INFO:SubProcess create_model() called ==================================
2023-01-15 18:06:58,068:INFO:Initializing create_model()
2023-01-15 18:06:58,068:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001991DC93910>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000199797ADFF0>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:06:58,068:INFO:Checking exceptions
2023-01-15 18:06:58,068:INFO:Importing libraries
2023-01-15 18:06:58,068:INFO:Copying training dataset
2023-01-15 18:06:58,074:INFO:Defining folds
2023-01-15 18:06:58,074:INFO:Declaring metric variables
2023-01-15 18:06:58,074:INFO:Importing untrained model
2023-01-15 18:06:58,075:INFO:Extra Trees Classifier Imported successfully
2023-01-15 18:06:58,075:INFO:Starting cross validation
2023-01-15 18:06:58,077:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:07:02,824:INFO:Calculating mean and std
2023-01-15 18:07:02,825:INFO:Creating metrics dataframe
2023-01-15 18:07:02,830:INFO:Uploading results into container
2023-01-15 18:07:02,830:INFO:Uploading model into container now
2023-01-15 18:07:02,831:INFO:_master_model_container: 12
2023-01-15 18:07:02,831:INFO:_display_container: 2
2023-01-15 18:07:02,832:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=42, verbose=0, warm_start=False)
2023-01-15 18:07:02,832:INFO:create_model() successfully completed......................................
2023-01-15 18:07:02,905:INFO:SubProcess create_model() end ==================================
2023-01-15 18:07:02,905:INFO:Creating metrics dataframe
2023-01-15 18:07:02,912:INFO:Initializing Light Gradient Boosting Machine
2023-01-15 18:07:02,912:INFO:Total runtime is 0.8019381403923036 minutes
2023-01-15 18:07:02,913:INFO:SubProcess create_model() called ==================================
2023-01-15 18:07:02,913:INFO:Initializing create_model()
2023-01-15 18:07:02,913:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001991DC93910>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000199797ADFF0>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:07:02,913:INFO:Checking exceptions
2023-01-15 18:07:02,913:INFO:Importing libraries
2023-01-15 18:07:02,913:INFO:Copying training dataset
2023-01-15 18:07:02,918:INFO:Defining folds
2023-01-15 18:07:02,918:INFO:Declaring metric variables
2023-01-15 18:07:02,918:INFO:Importing untrained model
2023-01-15 18:07:02,919:INFO:Light Gradient Boosting Machine Imported successfully
2023-01-15 18:07:02,919:INFO:Starting cross validation
2023-01-15 18:07:02,922:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:07:05,541:INFO:Calculating mean and std
2023-01-15 18:07:05,541:INFO:Creating metrics dataframe
2023-01-15 18:07:05,545:INFO:Uploading results into container
2023-01-15 18:07:05,546:INFO:Uploading model into container now
2023-01-15 18:07:05,546:INFO:_master_model_container: 13
2023-01-15 18:07:05,546:INFO:_display_container: 2
2023-01-15 18:07:05,547:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-01-15 18:07:05,547:INFO:create_model() successfully completed......................................
2023-01-15 18:07:05,619:INFO:SubProcess create_model() end ==================================
2023-01-15 18:07:05,619:INFO:Creating metrics dataframe
2023-01-15 18:07:05,626:INFO:Initializing Dummy Classifier
2023-01-15 18:07:05,627:INFO:Total runtime is 0.8471942543983461 minutes
2023-01-15 18:07:05,627:INFO:SubProcess create_model() called ==================================
2023-01-15 18:07:05,627:INFO:Initializing create_model()
2023-01-15 18:07:05,627:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001991DC93910>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000199797ADFF0>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:07:05,627:INFO:Checking exceptions
2023-01-15 18:07:05,627:INFO:Importing libraries
2023-01-15 18:07:05,627:INFO:Copying training dataset
2023-01-15 18:07:05,632:INFO:Defining folds
2023-01-15 18:07:05,632:INFO:Declaring metric variables
2023-01-15 18:07:05,632:INFO:Importing untrained model
2023-01-15 18:07:05,632:INFO:Dummy Classifier Imported successfully
2023-01-15 18:07:05,633:INFO:Starting cross validation
2023-01-15 18:07:05,634:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:07:06,917:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-15 18:07:06,917:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-15 18:07:06,921:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-15 18:07:06,933:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-15 18:07:06,944:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-15 18:07:06,965:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-15 18:07:06,977:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-15 18:07:06,995:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-15 18:07:07,637:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-15 18:07:07,646:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-15 18:07:07,650:INFO:Calculating mean and std
2023-01-15 18:07:07,651:INFO:Creating metrics dataframe
2023-01-15 18:07:07,655:INFO:Uploading results into container
2023-01-15 18:07:07,656:INFO:Uploading model into container now
2023-01-15 18:07:07,657:INFO:_master_model_container: 14
2023-01-15 18:07:07,657:INFO:_display_container: 2
2023-01-15 18:07:07,657:INFO:DummyClassifier(constant=None, random_state=42, strategy='prior')
2023-01-15 18:07:07,657:INFO:create_model() successfully completed......................................
2023-01-15 18:07:07,728:INFO:SubProcess create_model() end ==================================
2023-01-15 18:07:07,729:INFO:Creating metrics dataframe
2023-01-15 18:07:07,737:INFO:Initializing create_model()
2023-01-15 18:07:07,737:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001991DC93910>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:07:07,737:INFO:Checking exceptions
2023-01-15 18:07:07,738:INFO:Importing libraries
2023-01-15 18:07:07,738:INFO:Copying training dataset
2023-01-15 18:07:07,744:INFO:Defining folds
2023-01-15 18:07:07,745:INFO:Declaring metric variables
2023-01-15 18:07:07,745:INFO:Importing untrained model
2023-01-15 18:07:07,745:INFO:Declaring custom model
2023-01-15 18:07:07,746:INFO:Gradient Boosting Classifier Imported successfully
2023-01-15 18:07:07,748:INFO:Cross validation set to False
2023-01-15 18:07:07,748:INFO:Fitting Model
2023-01-15 18:07:09,845:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-01-15 18:07:09,845:INFO:create_model() successfully completed......................................
2023-01-15 18:07:09,916:INFO:Initializing create_model()
2023-01-15 18:07:09,917:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001991DC93910>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:07:09,917:INFO:Checking exceptions
2023-01-15 18:07:09,918:INFO:Importing libraries
2023-01-15 18:07:09,918:INFO:Copying training dataset
2023-01-15 18:07:09,924:INFO:Defining folds
2023-01-15 18:07:09,924:INFO:Declaring metric variables
2023-01-15 18:07:09,925:INFO:Importing untrained model
2023-01-15 18:07:09,925:INFO:Declaring custom model
2023-01-15 18:07:09,925:INFO:Logistic Regression Imported successfully
2023-01-15 18:07:09,927:INFO:Cross validation set to False
2023-01-15 18:07:09,927:INFO:Fitting Model
2023-01-15 18:07:11,482:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-01-15 18:07:11,482:INFO:create_model() successfully completed......................................
2023-01-15 18:07:11,552:INFO:Initializing create_model()
2023-01-15 18:07:11,552:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001991DC93910>, estimator=AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:07:11,552:INFO:Checking exceptions
2023-01-15 18:07:11,554:INFO:Importing libraries
2023-01-15 18:07:11,555:INFO:Copying training dataset
2023-01-15 18:07:11,559:INFO:Defining folds
2023-01-15 18:07:11,559:INFO:Declaring metric variables
2023-01-15 18:07:11,560:INFO:Importing untrained model
2023-01-15 18:07:11,560:INFO:Declaring custom model
2023-01-15 18:07:11,560:INFO:Ada Boost Classifier Imported successfully
2023-01-15 18:07:11,562:INFO:Cross validation set to False
2023-01-15 18:07:11,562:INFO:Fitting Model
2023-01-15 18:07:12,422:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2023-01-15 18:07:12,424:INFO:create_model() successfully completed......................................
2023-01-15 18:07:12,502:INFO:_master_model_container: 14
2023-01-15 18:07:12,502:INFO:_display_container: 2
2023-01-15 18:07:12,503:INFO:[GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)]
2023-01-15 18:07:12,503:INFO:compare_models() successfully completed......................................
2023-01-15 18:08:19,587:INFO:Initializing create_model()
2023-01-15 18:08:19,587:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001991DC93910>, estimator=lightgbm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:08:19,587:INFO:Checking exceptions
2023-01-15 18:08:19,621:INFO:Importing libraries
2023-01-15 18:08:19,621:INFO:Copying training dataset
2023-01-15 18:08:19,633:INFO:Defining folds
2023-01-15 18:08:19,633:INFO:Declaring metric variables
2023-01-15 18:08:19,639:INFO:Importing untrained model
2023-01-15 18:08:19,647:INFO:Light Gradient Boosting Machine Imported successfully
2023-01-15 18:08:19,659:INFO:Starting cross validation
2023-01-15 18:08:19,662:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:08:21,827:INFO:Calculating mean and std
2023-01-15 18:08:21,828:INFO:Creating metrics dataframe
2023-01-15 18:08:21,834:INFO:Finalizing model
2023-01-15 18:08:22,430:INFO:Uploading results into container
2023-01-15 18:08:22,432:INFO:Uploading model into container now
2023-01-15 18:08:22,453:INFO:_master_model_container: 15
2023-01-15 18:08:22,454:INFO:_display_container: 3
2023-01-15 18:08:22,455:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-01-15 18:08:22,455:INFO:create_model() successfully completed......................................
2023-01-15 18:08:33,835:INFO:Initializing create_model()
2023-01-15 18:08:33,835:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001991DC93910>, estimator=lightgbm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:08:33,835:INFO:Checking exceptions
2023-01-15 18:08:33,838:INFO:Importing libraries
2023-01-15 18:08:33,838:INFO:Copying training dataset
2023-01-15 18:08:33,843:INFO:Defining folds
2023-01-15 18:08:33,843:INFO:Declaring metric variables
2023-01-15 18:08:33,844:INFO:Importing untrained model
2023-01-15 18:08:33,845:INFO:Light Gradient Boosting Machine Imported successfully
2023-01-15 18:08:33,845:INFO:Starting cross validation
2023-01-15 18:08:33,848:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:08:35,966:INFO:Calculating mean and std
2023-01-15 18:08:35,967:INFO:Creating metrics dataframe
2023-01-15 18:08:35,969:INFO:Finalizing model
2023-01-15 18:08:36,541:INFO:Uploading results into container
2023-01-15 18:08:36,542:INFO:Uploading model into container now
2023-01-15 18:08:36,543:INFO:_master_model_container: 16
2023-01-15 18:08:36,543:INFO:_display_container: 4
2023-01-15 18:08:36,544:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-01-15 18:08:36,545:INFO:create_model() successfully completed......................................
2023-01-15 18:10:20,386:INFO:Initializing tune_model()
2023-01-15 18:10:20,386:INFO:tune_model(estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, n_iter=15, custom_grid=None, optimize=AUC, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=False, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001991DC93910>)
2023-01-15 18:10:20,387:INFO:Checking exceptions
2023-01-15 18:10:20,398:INFO:Copying training dataset
2023-01-15 18:10:20,405:INFO:Checking base model
2023-01-15 18:10:20,405:INFO:Base model : Light Gradient Boosting Machine
2023-01-15 18:10:20,406:INFO:Declaring metric variables
2023-01-15 18:10:20,406:INFO:Defining Hyperparameters
2023-01-15 18:10:20,499:INFO:Tuning with n_jobs=-1
2023-01-15 18:10:20,500:INFO:Initializing RandomizedSearchCV
2023-01-15 18:10:46,998:INFO:best_params: {'actual_estimator__reg_lambda': 4, 'actual_estimator__reg_alpha': 0.3, 'actual_estimator__num_leaves': 4, 'actual_estimator__n_estimators': 130, 'actual_estimator__min_split_gain': 0.6, 'actual_estimator__min_child_samples': 71, 'actual_estimator__learning_rate': 0.1, 'actual_estimator__feature_fraction': 1.0, 'actual_estimator__bagging_freq': 5, 'actual_estimator__bagging_fraction': 0.6}
2023-01-15 18:10:46,998:INFO:Hyperparameter search completed
2023-01-15 18:10:46,999:INFO:SubProcess create_model() called ==================================
2023-01-15 18:10:47,000:INFO:Initializing create_model()
2023-01-15 18:10:47,000:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001991DC93910>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001991ACD4A30>, model_only=True, return_train_score=False, kwargs={'reg_lambda': 4, 'reg_alpha': 0.3, 'num_leaves': 4, 'n_estimators': 130, 'min_split_gain': 0.6, 'min_child_samples': 71, 'learning_rate': 0.1, 'feature_fraction': 1.0, 'bagging_freq': 5, 'bagging_fraction': 0.6})
2023-01-15 18:10:47,000:INFO:Checking exceptions
2023-01-15 18:10:47,000:INFO:Importing libraries
2023-01-15 18:10:47,000:INFO:Copying training dataset
2023-01-15 18:10:47,006:INFO:Defining folds
2023-01-15 18:10:47,006:INFO:Declaring metric variables
2023-01-15 18:10:47,006:INFO:Importing untrained model
2023-01-15 18:10:47,007:INFO:Declaring custom model
2023-01-15 18:10:47,008:INFO:Light Gradient Boosting Machine Imported successfully
2023-01-15 18:10:47,008:INFO:Starting cross validation
2023-01-15 18:10:47,010:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:10:49,490:INFO:Calculating mean and std
2023-01-15 18:10:49,491:INFO:Creating metrics dataframe
2023-01-15 18:10:49,493:INFO:Finalizing model
2023-01-15 18:10:50,033:INFO:Uploading results into container
2023-01-15 18:10:50,035:INFO:Uploading model into container now
2023-01-15 18:10:50,036:INFO:_master_model_container: 17
2023-01-15 18:10:50,036:INFO:_display_container: 5
2023-01-15 18:10:50,038:INFO:LGBMClassifier(bagging_fraction=0.6, bagging_freq=5, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=71, min_child_weight=0.001, min_split_gain=0.6,
               n_estimators=130, n_jobs=-1, num_leaves=4, objective=None,
               random_state=42, reg_alpha=0.3, reg_lambda=4, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-01-15 18:10:50,038:INFO:create_model() successfully completed......................................
2023-01-15 18:10:50,146:INFO:SubProcess create_model() end ==================================
2023-01-15 18:10:50,146:INFO:choose_better activated
2023-01-15 18:10:50,146:INFO:SubProcess create_model() called ==================================
2023-01-15 18:10:50,146:INFO:Initializing create_model()
2023-01-15 18:10:50,146:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001991DC93910>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:10:50,146:INFO:Checking exceptions
2023-01-15 18:10:50,151:INFO:Importing libraries
2023-01-15 18:10:50,151:INFO:Copying training dataset
2023-01-15 18:10:50,156:INFO:Defining folds
2023-01-15 18:10:50,156:INFO:Declaring metric variables
2023-01-15 18:10:50,156:INFO:Importing untrained model
2023-01-15 18:10:50,156:INFO:Declaring custom model
2023-01-15 18:10:50,157:INFO:Light Gradient Boosting Machine Imported successfully
2023-01-15 18:10:50,158:INFO:Starting cross validation
2023-01-15 18:10:50,159:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:10:53,113:INFO:Calculating mean and std
2023-01-15 18:10:53,114:INFO:Creating metrics dataframe
2023-01-15 18:10:53,117:INFO:Finalizing model
2023-01-15 18:10:53,741:INFO:Uploading results into container
2023-01-15 18:10:53,743:INFO:Uploading model into container now
2023-01-15 18:10:53,743:INFO:_master_model_container: 18
2023-01-15 18:10:53,744:INFO:_display_container: 6
2023-01-15 18:10:53,745:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-01-15 18:10:53,745:INFO:create_model() successfully completed......................................
2023-01-15 18:10:53,852:INFO:SubProcess create_model() end ==================================
2023-01-15 18:10:53,853:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0) result for AUC is 0.8658
2023-01-15 18:10:53,854:INFO:LGBMClassifier(bagging_fraction=0.6, bagging_freq=5, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=71, min_child_weight=0.001, min_split_gain=0.6,
               n_estimators=130, n_jobs=-1, num_leaves=4, objective=None,
               random_state=42, reg_alpha=0.3, reg_lambda=4, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0) result for AUC is 0.8821
2023-01-15 18:10:53,855:INFO:LGBMClassifier(bagging_fraction=0.6, bagging_freq=5, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=71, min_child_weight=0.001, min_split_gain=0.6,
               n_estimators=130, n_jobs=-1, num_leaves=4, objective=None,
               random_state=42, reg_alpha=0.3, reg_lambda=4, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0) is best model
2023-01-15 18:10:53,855:INFO:choose_better completed
2023-01-15 18:10:53,856:INFO:_master_model_container: 18
2023-01-15 18:10:53,856:INFO:_display_container: 5
2023-01-15 18:10:53,857:INFO:LGBMClassifier(bagging_fraction=0.6, bagging_freq=5, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=71, min_child_weight=0.001, min_split_gain=0.6,
               n_estimators=130, n_jobs=-1, num_leaves=4, objective=None,
               random_state=42, reg_alpha=0.3, reg_lambda=4, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-01-15 18:10:53,857:INFO:tune_model() successfully completed......................................
2023-01-15 18:12:53,404:INFO:Initializing stack_models()
2023-01-15 18:12:53,405:INFO:stack_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001991DC93910>, estimator_list=[GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)], meta_model=None, meta_model_fold=5, fold=None, round=4, method=auto, restack=True, choose_better=False, optimize=Accuracy, fit_kwargs=None, groups=None, probability_threshold=None, verbose=False, return_train_score=False)
2023-01-15 18:12:53,405:INFO:Checking exceptions
2023-01-15 18:12:53,409:INFO:Defining meta model
2023-01-15 18:12:53,411:INFO:Getting model names
2023-01-15 18:12:53,412:INFO:[('Gradient Boosting Classifier', GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)), ('Logistic Regression', LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)), ('Ada Boost Classifier', AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42))]
2023-01-15 18:12:53,413:INFO:SubProcess create_model() called ==================================
2023-01-15 18:12:53,420:INFO:Initializing create_model()
2023-01-15 18:12:53,420:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001991DC93910>, estimator=StackingClassifier(cv=5,
                   estimators=[('Gradient Boosting Classifier',
                                GradientBoostingClassifier(ccp_alpha=0.0,
                                                           criterion='friedman_mse',
                                                           init=None,
                                                           learning_rate=0.1,
                                                           loss='log_loss',
                                                           max_depth=3,
                                                           max_features=None,
                                                           max_leaf_nodes=None,
                                                           min_impurity_decrease=0.0,
                                                           min_samples_leaf=1,
                                                           min_samples_split=2,
                                                           min_weight_fraction_leaf=0.0,
                                                           n_estimators=100,
                                                           n_iter_no_cha...
                                                   learning_rate=1.0,
                                                   n_estimators=50,
                                                   random_state=42))],
                   final_estimator=LogisticRegression(C=1.0, class_weight=None,
                                                      dual=False,
                                                      fit_intercept=True,
                                                      intercept_scaling=1,
                                                      l1_ratio=None,
                                                      max_iter=1000,
                                                      multi_class='auto',
                                                      n_jobs=None, penalty='l2',
                                                      random_state=42,
                                                      solver='lbfgs',
                                                      tol=0.0001, verbose=0,
                                                      warm_start=False),
                   n_jobs=-1, passthrough=True, stack_method='auto', verbose=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001991E157880>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:12:53,420:INFO:Checking exceptions
2023-01-15 18:12:53,420:INFO:Importing libraries
2023-01-15 18:12:53,420:INFO:Copying training dataset
2023-01-15 18:12:53,426:INFO:Defining folds
2023-01-15 18:12:53,426:INFO:Declaring metric variables
2023-01-15 18:12:53,427:INFO:Importing untrained model
2023-01-15 18:12:53,427:INFO:Declaring custom model
2023-01-15 18:12:53,430:INFO:Stacking Classifier Imported successfully
2023-01-15 18:12:53,430:INFO:Starting cross validation
2023-01-15 18:12:53,432:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:13:04,488:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-01-15 18:13:10,763:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-01-15 18:13:29,585:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-01-15 18:13:30,334:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-15 18:13:31,911:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-01-15 18:13:32,153:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-01-15 18:13:39,224:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-01-15 18:13:41,169:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-01-15 18:13:42,900:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-01-15 18:13:45,933:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-01-15 18:13:52,708:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-01-15 18:13:53,170:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-01-15 18:13:53,356:INFO:Calculating mean and std
2023-01-15 18:13:53,356:INFO:Creating metrics dataframe
2023-01-15 18:13:53,359:INFO:Finalizing model
2023-01-15 18:13:59,740:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-01-15 18:14:01,294:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-01-15 18:14:01,296:INFO:Uploading results into container
2023-01-15 18:14:01,297:INFO:Uploading model into container now
2023-01-15 18:14:01,297:INFO:_master_model_container: 19
2023-01-15 18:14:01,297:INFO:_display_container: 6
2023-01-15 18:14:01,303:INFO:StackingClassifier(cv=5,
                   estimators=[('Gradient Boosting Classifier',
                                GradientBoostingClassifier(ccp_alpha=0.0,
                                                           criterion='friedman_mse',
                                                           init=None,
                                                           learning_rate=0.1,
                                                           loss='log_loss',
                                                           max_depth=3,
                                                           max_features=None,
                                                           max_leaf_nodes=None,
                                                           min_impurity_decrease=0.0,
                                                           min_samples_leaf=1,
                                                           min_samples_split=2,
                                                           min_weight_fraction_leaf=0.0,
                                                           n_estimators=100,
                                                           n_iter_no_cha...
                                                   learning_rate=1.0,
                                                   n_estimators=50,
                                                   random_state=42))],
                   final_estimator=LogisticRegression(C=1.0, class_weight=None,
                                                      dual=False,
                                                      fit_intercept=True,
                                                      intercept_scaling=1,
                                                      l1_ratio=None,
                                                      max_iter=1000,
                                                      multi_class='auto',
                                                      n_jobs=None, penalty='l2',
                                                      random_state=42,
                                                      solver='lbfgs',
                                                      tol=0.0001, verbose=0,
                                                      warm_start=False),
                   n_jobs=-1, passthrough=True, stack_method='auto', verbose=0)
2023-01-15 18:14:01,303:INFO:create_model() successfully completed......................................
2023-01-15 18:14:01,374:INFO:SubProcess create_model() end ==================================
2023-01-15 18:14:01,374:INFO:_master_model_container: 19
2023-01-15 18:14:01,374:INFO:_display_container: 6
2023-01-15 18:14:01,380:INFO:StackingClassifier(cv=5,
                   estimators=[('Gradient Boosting Classifier',
                                GradientBoostingClassifier(ccp_alpha=0.0,
                                                           criterion='friedman_mse',
                                                           init=None,
                                                           learning_rate=0.1,
                                                           loss='log_loss',
                                                           max_depth=3,
                                                           max_features=None,
                                                           max_leaf_nodes=None,
                                                           min_impurity_decrease=0.0,
                                                           min_samples_leaf=1,
                                                           min_samples_split=2,
                                                           min_weight_fraction_leaf=0.0,
                                                           n_estimators=100,
                                                           n_iter_no_cha...
                                                   learning_rate=1.0,
                                                   n_estimators=50,
                                                   random_state=42))],
                   final_estimator=LogisticRegression(C=1.0, class_weight=None,
                                                      dual=False,
                                                      fit_intercept=True,
                                                      intercept_scaling=1,
                                                      l1_ratio=None,
                                                      max_iter=1000,
                                                      multi_class='auto',
                                                      n_jobs=None, penalty='l2',
                                                      random_state=42,
                                                      solver='lbfgs',
                                                      tol=0.0001, verbose=0,
                                                      warm_start=False),
                   n_jobs=-1, passthrough=True, stack_method='auto', verbose=0)
2023-01-15 18:14:01,380:INFO:stack_models() successfully completed......................................
2023-01-15 18:16:42,903:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-01-15 18:16:42,903:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-01-15 18:16:42,903:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-01-15 18:16:42,904:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-01-15 18:16:43,552:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-01-15 18:20:06,897:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-01-15 18:20:06,897:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-01-15 18:20:06,897:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-01-15 18:20:06,897:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-01-15 18:20:07,680:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-01-15 18:20:13,531:INFO:PyCaret ClassificationExperiment
2023-01-15 18:20:13,531:INFO:Logging name: stroke
2023-01-15 18:20:13,531:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-01-15 18:20:13,531:INFO:version 3.0.0.rc8
2023-01-15 18:20:13,531:INFO:Initializing setup()
2023-01-15 18:20:13,531:INFO:self.USI: 4d03
2023-01-15 18:20:13,531:INFO:self._variable_keys: {'memory', 'y', 'USI', 'log_plots_param', 'exp_name_log', 'fold_shuffle_param', 'fix_imbalance', 'X_train', 'X_test', '_ml_usecase', 'X', 'fold_generator', 'data', 'pipeline', '_available_plots', 'html_param', 'seed', 'y_train', 'target_param', 'logging_param', 'gpu_param', 'idx', 'gpu_n_jobs_param', 'is_multiclass', 'n_jobs_param', 'exp_id', 'y_test', 'fold_groups_param'}
2023-01-15 18:20:13,531:INFO:Checking environment
2023-01-15 18:20:13,531:INFO:python_version: 3.10.5
2023-01-15 18:20:13,531:INFO:python_build: ('tags/v3.10.5:f377153', 'Jun  6 2022 16:14:13')
2023-01-15 18:20:13,531:INFO:machine: AMD64
2023-01-15 18:20:13,531:INFO:platform: Windows-10-10.0.19045-SP0
2023-01-15 18:20:13,535:INFO:Memory: svmem(total=8494747648, available=2375852032, percent=72.0, used=6118895616, free=2375852032)
2023-01-15 18:20:13,535:INFO:Physical Core: 4
2023-01-15 18:20:13,535:INFO:Logical Core: 8
2023-01-15 18:20:13,536:INFO:Checking libraries
2023-01-15 18:20:13,536:INFO:System:
2023-01-15 18:20:13,536:INFO:    python: 3.10.5 (tags/v3.10.5:f377153, Jun  6 2022, 16:14:13) [MSC v.1929 64 bit (AMD64)]
2023-01-15 18:20:13,536:INFO:executable: c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\Scripts\python.exe
2023-01-15 18:20:13,536:INFO:   machine: Windows-10-10.0.19045-SP0
2023-01-15 18:20:13,536:INFO:PyCaret required dependencies:
2023-01-15 18:20:13,536:INFO:                 pip: 22.3.1
2023-01-15 18:20:13,536:INFO:          setuptools: 65.7.0
2023-01-15 18:20:13,537:INFO:             pycaret: 3.0.0rc8
2023-01-15 18:20:13,537:INFO:             IPython: 8.8.0
2023-01-15 18:20:13,537:INFO:          ipywidgets: 8.0.4
2023-01-15 18:20:13,537:INFO:                tqdm: 4.64.1
2023-01-15 18:20:13,537:INFO:               numpy: 1.23.5
2023-01-15 18:20:13,537:INFO:              pandas: 1.5.2
2023-01-15 18:20:13,537:INFO:              jinja2: 3.1.2
2023-01-15 18:20:13,538:INFO:               scipy: 1.10.0
2023-01-15 18:20:13,538:INFO:              joblib: 1.2.0
2023-01-15 18:20:13,538:INFO:             sklearn: 1.1.3
2023-01-15 18:20:13,538:INFO:                pyod: 1.0.7
2023-01-15 18:20:13,538:INFO:            imblearn: 0.10.1
2023-01-15 18:20:13,538:INFO:   category_encoders: 2.6.0
2023-01-15 18:20:13,538:INFO:            lightgbm: 3.3.4
2023-01-15 18:20:13,538:INFO:               numba: 0.56.4
2023-01-15 18:20:13,538:INFO:            requests: 2.28.2
2023-01-15 18:20:13,538:INFO:          matplotlib: 3.6.3
2023-01-15 18:20:13,538:INFO:          scikitplot: 0.3.7
2023-01-15 18:20:13,538:INFO:         yellowbrick: 1.5
2023-01-15 18:20:13,539:INFO:              plotly: 5.12.0
2023-01-15 18:20:13,539:INFO:             kaleido: 0.2.1
2023-01-15 18:20:13,539:INFO:         statsmodels: 0.13.5
2023-01-15 18:20:13,539:INFO:              sktime: 0.15.1
2023-01-15 18:20:13,539:INFO:               tbats: 1.1.2
2023-01-15 18:20:13,539:INFO:            pmdarima: 2.0.2
2023-01-15 18:20:13,539:INFO:              psutil: 5.9.4
2023-01-15 18:20:13,539:INFO:PyCaret optional dependencies:
2023-01-15 18:20:13,575:INFO:                shap: Not installed
2023-01-15 18:20:13,575:INFO:           interpret: Not installed
2023-01-15 18:20:13,575:INFO:                umap: Not installed
2023-01-15 18:20:13,575:INFO:    pandas_profiling: Not installed
2023-01-15 18:20:13,576:INFO:  explainerdashboard: Not installed
2023-01-15 18:20:13,576:INFO:             autoviz: Not installed
2023-01-15 18:20:13,576:INFO:           fairlearn: Not installed
2023-01-15 18:20:13,576:INFO:             xgboost: Not installed
2023-01-15 18:20:13,576:INFO:            catboost: Not installed
2023-01-15 18:20:13,576:INFO:              kmodes: Not installed
2023-01-15 18:20:13,576:INFO:             mlxtend: Not installed
2023-01-15 18:20:13,576:INFO:       statsforecast: Not installed
2023-01-15 18:20:13,576:INFO:        tune_sklearn: Not installed
2023-01-15 18:20:13,576:INFO:                 ray: Not installed
2023-01-15 18:20:13,576:INFO:            hyperopt: Not installed
2023-01-15 18:20:13,576:INFO:              optuna: Not installed
2023-01-15 18:20:13,576:INFO:               skopt: Not installed
2023-01-15 18:20:13,576:INFO:              mlflow: Not installed
2023-01-15 18:20:13,576:INFO:              gradio: Not installed
2023-01-15 18:20:13,576:INFO:             fastapi: Not installed
2023-01-15 18:20:13,577:INFO:             uvicorn: Not installed
2023-01-15 18:20:13,577:INFO:              m2cgen: Not installed
2023-01-15 18:20:13,577:INFO:           evidently: Not installed
2023-01-15 18:20:13,577:INFO:                nltk: Not installed
2023-01-15 18:20:13,577:INFO:            pyLDAvis: Not installed
2023-01-15 18:20:13,577:INFO:              gensim: Not installed
2023-01-15 18:20:13,577:INFO:               spacy: Not installed
2023-01-15 18:20:13,577:INFO:           wordcloud: Not installed
2023-01-15 18:20:13,577:INFO:            textblob: Not installed
2023-01-15 18:20:13,577:INFO:               fugue: Not installed
2023-01-15 18:20:13,577:INFO:           streamlit: Not installed
2023-01-15 18:20:13,577:INFO:             prophet: Not installed
2023-01-15 18:20:13,577:INFO:None
2023-01-15 18:20:13,577:INFO:Set up data.
2023-01-15 18:20:13,597:INFO:Set up train/test split.
2023-01-15 18:20:13,611:INFO:Set up index.
2023-01-15 18:20:13,611:INFO:Set up folding strategy.
2023-01-15 18:20:13,611:INFO:Assigning column types.
2023-01-15 18:20:13,615:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-01-15 18:20:13,671:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-01-15 18:20:13,673:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-15 18:20:13,711:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:20:13,728:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:20:13,782:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-01-15 18:20:13,783:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-15 18:20:13,818:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:20:13,818:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:20:13,819:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-01-15 18:20:13,873:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-15 18:20:13,906:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:20:13,907:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:20:13,962:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-15 18:20:13,994:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:20:13,995:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:20:13,995:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-01-15 18:20:14,084:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:20:14,084:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:20:14,181:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:20:14,182:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:20:14,183:INFO:Preparing preprocessing pipeline...
2023-01-15 18:20:14,185:INFO:Set up simple imputation.
2023-01-15 18:20:14,193:INFO:Set up encoding of ordinal features.
2023-01-15 18:20:14,198:INFO:Set up encoding of categorical features.
2023-01-15 18:20:14,198:INFO:Set up imbalanced handling.
2023-01-15 18:20:14,198:INFO:Set up column transformation.
2023-01-15 18:20:14,198:INFO:Set up feature normalization.
2023-01-15 18:20:15,877:INFO:Finished creating preprocessing pipeline.
2023-01-15 18:20:15,916:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\alepi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'hypertension',
                                             'heart_disease',
                                             'avg_glucose_level', 'bmi'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorica...
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=None,
                                                                              sampling_strategy='auto')))),
                ('transformation',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=PowerTransformer(copy=True,
                                                                 method='yeo-johnson',
                                                                 standardize=False))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2023-01-15 18:20:15,916:INFO:Creating final display dataframe.
2023-01-15 18:20:18,604:INFO:Setup _display_container:                     Description            Value
0                    Session id               42
1                        Target           stroke
2                   Target type           Binary
3           Original data shape      (15304, 11)
4        Transformed data shape      (25834, 20)
5   Transformed train set shape      (22008, 20)
6    Transformed test set shape       (3826, 20)
7              Ordinal features                2
8              Numeric features                5
9          Categorical features                5
10                   Preprocess             True
11              Imputation type           simple
12           Numeric imputation             mean
13       Categorical imputation             mode
14     Maximum one-hot encoding               25
15              Encoding method             None
16                Fix imbalance             True
17         Fix imbalance method            SMOTE
18               Transformation             True
19        Transformation method      yeo-johnson
20                    Normalize             True
21             Normalize method           zscore
22               Fold Generator  StratifiedKFold
23                  Fold Number                4
24                     CPU Jobs               -1
25                      Use GPU            False
26               Log Experiment            False
27              Experiment Name           stroke
28                          USI             4d03
2023-01-15 18:20:18,692:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:20:18,692:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:20:18,781:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:20:18,781:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:20:18,782:INFO:setup() successfully completed in 5.25s...............
2023-01-15 18:21:43,324:INFO:Initializing compare_models()
2023-01-15 18:21:43,324:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E7B52917B0>, include=None, fold=None, round=4, cross_validation=True, sort=AUC, n_select=3, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=False, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001E7B52917B0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'AUC', 'n_select': 3, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': False, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-01-15 18:21:43,324:INFO:Checking exceptions
2023-01-15 18:21:43,332:INFO:Preparing display monitor
2023-01-15 18:21:43,337:INFO:Initializing Logistic Regression
2023-01-15 18:21:43,337:INFO:Total runtime is 0.0 minutes
2023-01-15 18:21:43,337:INFO:SubProcess create_model() called ==================================
2023-01-15 18:21:43,338:INFO:Initializing create_model()
2023-01-15 18:21:43,338:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E7B52917B0>, estimator=lr, fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E7B55160E0>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:21:43,338:INFO:Checking exceptions
2023-01-15 18:21:43,338:INFO:Importing libraries
2023-01-15 18:21:43,338:INFO:Copying training dataset
2023-01-15 18:21:43,343:INFO:Defining folds
2023-01-15 18:21:43,344:INFO:Declaring metric variables
2023-01-15 18:21:43,344:INFO:Importing untrained model
2023-01-15 18:21:43,344:INFO:Logistic Regression Imported successfully
2023-01-15 18:21:43,345:INFO:Starting cross validation
2023-01-15 18:21:43,349:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:21:50,660:INFO:Calculating mean and std
2023-01-15 18:21:50,661:INFO:Creating metrics dataframe
2023-01-15 18:21:50,669:INFO:Uploading results into container
2023-01-15 18:21:50,671:INFO:Uploading model into container now
2023-01-15 18:21:50,672:INFO:_master_model_container: 1
2023-01-15 18:21:50,672:INFO:_display_container: 2
2023-01-15 18:21:50,673:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-01-15 18:21:50,673:INFO:create_model() successfully completed......................................
2023-01-15 18:21:50,792:INFO:SubProcess create_model() end ==================================
2023-01-15 18:21:50,792:INFO:Creating metrics dataframe
2023-01-15 18:21:50,800:INFO:Initializing K Neighbors Classifier
2023-01-15 18:21:50,800:INFO:Total runtime is 0.12438861926396688 minutes
2023-01-15 18:21:50,800:INFO:SubProcess create_model() called ==================================
2023-01-15 18:21:50,800:INFO:Initializing create_model()
2023-01-15 18:21:50,800:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E7B52917B0>, estimator=knn, fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E7B55160E0>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:21:50,800:INFO:Checking exceptions
2023-01-15 18:21:50,800:INFO:Importing libraries
2023-01-15 18:21:50,800:INFO:Copying training dataset
2023-01-15 18:21:50,805:INFO:Defining folds
2023-01-15 18:21:50,805:INFO:Declaring metric variables
2023-01-15 18:21:50,806:INFO:Importing untrained model
2023-01-15 18:21:50,806:INFO:K Neighbors Classifier Imported successfully
2023-01-15 18:21:50,806:INFO:Starting cross validation
2023-01-15 18:21:50,808:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:21:55,098:INFO:Calculating mean and std
2023-01-15 18:21:55,099:INFO:Creating metrics dataframe
2023-01-15 18:21:55,105:INFO:Uploading results into container
2023-01-15 18:21:55,106:INFO:Uploading model into container now
2023-01-15 18:21:55,107:INFO:_master_model_container: 2
2023-01-15 18:21:55,108:INFO:_display_container: 2
2023-01-15 18:21:55,109:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-01-15 18:21:55,109:INFO:create_model() successfully completed......................................
2023-01-15 18:21:55,203:INFO:SubProcess create_model() end ==================================
2023-01-15 18:21:55,203:INFO:Creating metrics dataframe
2023-01-15 18:21:55,209:INFO:Initializing Naive Bayes
2023-01-15 18:21:55,209:INFO:Total runtime is 0.19786981344223023 minutes
2023-01-15 18:21:55,209:INFO:SubProcess create_model() called ==================================
2023-01-15 18:21:55,210:INFO:Initializing create_model()
2023-01-15 18:21:55,210:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E7B52917B0>, estimator=nb, fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E7B55160E0>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:21:55,210:INFO:Checking exceptions
2023-01-15 18:21:55,210:INFO:Importing libraries
2023-01-15 18:21:55,210:INFO:Copying training dataset
2023-01-15 18:21:55,215:INFO:Defining folds
2023-01-15 18:21:55,215:INFO:Declaring metric variables
2023-01-15 18:21:55,215:INFO:Importing untrained model
2023-01-15 18:21:55,216:INFO:Naive Bayes Imported successfully
2023-01-15 18:21:55,216:INFO:Starting cross validation
2023-01-15 18:21:55,218:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:21:56,132:INFO:Calculating mean and std
2023-01-15 18:21:56,133:INFO:Creating metrics dataframe
2023-01-15 18:21:56,138:INFO:Uploading results into container
2023-01-15 18:21:56,138:INFO:Uploading model into container now
2023-01-15 18:21:56,139:INFO:_master_model_container: 3
2023-01-15 18:21:56,139:INFO:_display_container: 2
2023-01-15 18:21:56,139:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-01-15 18:21:56,139:INFO:create_model() successfully completed......................................
2023-01-15 18:21:56,222:INFO:SubProcess create_model() end ==================================
2023-01-15 18:21:56,222:INFO:Creating metrics dataframe
2023-01-15 18:21:56,228:INFO:Initializing Decision Tree Classifier
2023-01-15 18:21:56,228:INFO:Total runtime is 0.21486080090204876 minutes
2023-01-15 18:21:56,228:INFO:SubProcess create_model() called ==================================
2023-01-15 18:21:56,228:INFO:Initializing create_model()
2023-01-15 18:21:56,228:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E7B52917B0>, estimator=dt, fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E7B55160E0>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:21:56,229:INFO:Checking exceptions
2023-01-15 18:21:56,229:INFO:Importing libraries
2023-01-15 18:21:56,229:INFO:Copying training dataset
2023-01-15 18:21:56,236:INFO:Defining folds
2023-01-15 18:21:56,236:INFO:Declaring metric variables
2023-01-15 18:21:56,236:INFO:Importing untrained model
2023-01-15 18:21:56,237:INFO:Decision Tree Classifier Imported successfully
2023-01-15 18:21:56,237:INFO:Starting cross validation
2023-01-15 18:21:56,239:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:21:57,117:INFO:Calculating mean and std
2023-01-15 18:21:57,118:INFO:Creating metrics dataframe
2023-01-15 18:21:57,121:INFO:Uploading results into container
2023-01-15 18:21:57,122:INFO:Uploading model into container now
2023-01-15 18:21:57,122:INFO:_master_model_container: 4
2023-01-15 18:21:57,122:INFO:_display_container: 2
2023-01-15 18:21:57,123:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=42, splitter='best')
2023-01-15 18:21:57,123:INFO:create_model() successfully completed......................................
2023-01-15 18:21:57,191:INFO:SubProcess create_model() end ==================================
2023-01-15 18:21:57,191:INFO:Creating metrics dataframe
2023-01-15 18:21:57,197:INFO:Initializing SVM - Linear Kernel
2023-01-15 18:21:57,197:INFO:Total runtime is 0.23100992838541667 minutes
2023-01-15 18:21:57,197:INFO:SubProcess create_model() called ==================================
2023-01-15 18:21:57,198:INFO:Initializing create_model()
2023-01-15 18:21:57,198:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E7B52917B0>, estimator=svm, fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E7B55160E0>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:21:57,198:INFO:Checking exceptions
2023-01-15 18:21:57,198:INFO:Importing libraries
2023-01-15 18:21:57,198:INFO:Copying training dataset
2023-01-15 18:21:57,202:INFO:Defining folds
2023-01-15 18:21:57,202:INFO:Declaring metric variables
2023-01-15 18:21:57,202:INFO:Importing untrained model
2023-01-15 18:21:57,203:INFO:SVM - Linear Kernel Imported successfully
2023-01-15 18:21:57,203:INFO:Starting cross validation
2023-01-15 18:21:57,205:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:21:57,927:INFO:Calculating mean and std
2023-01-15 18:21:57,928:INFO:Creating metrics dataframe
2023-01-15 18:21:57,932:INFO:Uploading results into container
2023-01-15 18:21:57,933:INFO:Uploading model into container now
2023-01-15 18:21:57,933:INFO:_master_model_container: 5
2023-01-15 18:21:57,933:INFO:_display_container: 2
2023-01-15 18:21:57,934:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-01-15 18:21:57,934:INFO:create_model() successfully completed......................................
2023-01-15 18:21:58,001:INFO:SubProcess create_model() end ==================================
2023-01-15 18:21:58,001:INFO:Creating metrics dataframe
2023-01-15 18:21:58,006:INFO:Initializing Ridge Classifier
2023-01-15 18:21:58,007:INFO:Total runtime is 0.24450990358988445 minutes
2023-01-15 18:21:58,007:INFO:SubProcess create_model() called ==================================
2023-01-15 18:21:58,007:INFO:Initializing create_model()
2023-01-15 18:21:58,007:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E7B52917B0>, estimator=ridge, fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E7B55160E0>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:21:58,007:INFO:Checking exceptions
2023-01-15 18:21:58,007:INFO:Importing libraries
2023-01-15 18:21:58,007:INFO:Copying training dataset
2023-01-15 18:21:58,011:INFO:Defining folds
2023-01-15 18:21:58,012:INFO:Declaring metric variables
2023-01-15 18:21:58,012:INFO:Importing untrained model
2023-01-15 18:21:58,012:INFO:Ridge Classifier Imported successfully
2023-01-15 18:21:58,013:INFO:Starting cross validation
2023-01-15 18:21:58,015:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:21:58,684:INFO:Calculating mean and std
2023-01-15 18:21:58,684:INFO:Creating metrics dataframe
2023-01-15 18:21:58,688:INFO:Uploading results into container
2023-01-15 18:21:58,689:INFO:Uploading model into container now
2023-01-15 18:21:58,689:INFO:_master_model_container: 6
2023-01-15 18:21:58,689:INFO:_display_container: 2
2023-01-15 18:21:58,690:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize='deprecated', positive=False,
                random_state=42, solver='auto', tol=0.001)
2023-01-15 18:21:58,690:INFO:create_model() successfully completed......................................
2023-01-15 18:21:58,758:INFO:SubProcess create_model() end ==================================
2023-01-15 18:21:58,758:INFO:Creating metrics dataframe
2023-01-15 18:21:58,764:INFO:Initializing Random Forest Classifier
2023-01-15 18:21:58,764:INFO:Total runtime is 0.2571270744005839 minutes
2023-01-15 18:21:58,764:INFO:SubProcess create_model() called ==================================
2023-01-15 18:21:58,765:INFO:Initializing create_model()
2023-01-15 18:21:58,765:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E7B52917B0>, estimator=rf, fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E7B55160E0>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:21:58,765:INFO:Checking exceptions
2023-01-15 18:21:58,765:INFO:Importing libraries
2023-01-15 18:21:58,765:INFO:Copying training dataset
2023-01-15 18:21:58,770:INFO:Defining folds
2023-01-15 18:21:58,770:INFO:Declaring metric variables
2023-01-15 18:21:58,770:INFO:Importing untrained model
2023-01-15 18:21:58,770:INFO:Random Forest Classifier Imported successfully
2023-01-15 18:21:58,771:INFO:Starting cross validation
2023-01-15 18:21:58,773:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:22:01,123:INFO:Calculating mean and std
2023-01-15 18:22:01,124:INFO:Creating metrics dataframe
2023-01-15 18:22:01,127:INFO:Uploading results into container
2023-01-15 18:22:01,128:INFO:Uploading model into container now
2023-01-15 18:22:01,128:INFO:_master_model_container: 7
2023-01-15 18:22:01,128:INFO:_display_container: 2
2023-01-15 18:22:01,129:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=42, verbose=0, warm_start=False)
2023-01-15 18:22:01,129:INFO:create_model() successfully completed......................................
2023-01-15 18:22:01,220:INFO:SubProcess create_model() end ==================================
2023-01-15 18:22:01,220:INFO:Creating metrics dataframe
2023-01-15 18:22:01,226:INFO:Initializing Quadratic Discriminant Analysis
2023-01-15 18:22:01,226:INFO:Total runtime is 0.2981496254603068 minutes
2023-01-15 18:22:01,226:INFO:SubProcess create_model() called ==================================
2023-01-15 18:22:01,226:INFO:Initializing create_model()
2023-01-15 18:22:01,226:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E7B52917B0>, estimator=qda, fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E7B55160E0>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:22:01,227:INFO:Checking exceptions
2023-01-15 18:22:01,227:INFO:Importing libraries
2023-01-15 18:22:01,227:INFO:Copying training dataset
2023-01-15 18:22:01,231:INFO:Defining folds
2023-01-15 18:22:01,231:INFO:Declaring metric variables
2023-01-15 18:22:01,231:INFO:Importing untrained model
2023-01-15 18:22:01,231:INFO:Quadratic Discriminant Analysis Imported successfully
2023-01-15 18:22:01,232:INFO:Starting cross validation
2023-01-15 18:22:01,235:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:22:01,788:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-01-15 18:22:01,807:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-01-15 18:22:01,837:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-01-15 18:22:01,841:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-01-15 18:22:02,286:INFO:Calculating mean and std
2023-01-15 18:22:02,286:INFO:Creating metrics dataframe
2023-01-15 18:22:02,291:INFO:Uploading results into container
2023-01-15 18:22:02,292:INFO:Uploading model into container now
2023-01-15 18:22:02,292:INFO:_master_model_container: 8
2023-01-15 18:22:02,293:INFO:_display_container: 2
2023-01-15 18:22:02,293:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-01-15 18:22:02,293:INFO:create_model() successfully completed......................................
2023-01-15 18:22:02,366:INFO:SubProcess create_model() end ==================================
2023-01-15 18:22:02,367:INFO:Creating metrics dataframe
2023-01-15 18:22:02,374:INFO:Initializing Ada Boost Classifier
2023-01-15 18:22:02,374:INFO:Total runtime is 0.3172823270161947 minutes
2023-01-15 18:22:02,374:INFO:SubProcess create_model() called ==================================
2023-01-15 18:22:02,375:INFO:Initializing create_model()
2023-01-15 18:22:02,375:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E7B52917B0>, estimator=ada, fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E7B55160E0>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:22:02,375:INFO:Checking exceptions
2023-01-15 18:22:02,375:INFO:Importing libraries
2023-01-15 18:22:02,375:INFO:Copying training dataset
2023-01-15 18:22:02,380:INFO:Defining folds
2023-01-15 18:22:02,380:INFO:Declaring metric variables
2023-01-15 18:22:02,380:INFO:Importing untrained model
2023-01-15 18:22:02,381:INFO:Ada Boost Classifier Imported successfully
2023-01-15 18:22:02,381:INFO:Starting cross validation
2023-01-15 18:22:02,385:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:22:04,756:INFO:Calculating mean and std
2023-01-15 18:22:04,757:INFO:Creating metrics dataframe
2023-01-15 18:22:04,762:INFO:Uploading results into container
2023-01-15 18:22:04,763:INFO:Uploading model into container now
2023-01-15 18:22:04,763:INFO:_master_model_container: 9
2023-01-15 18:22:04,763:INFO:_display_container: 2
2023-01-15 18:22:04,764:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2023-01-15 18:22:04,764:INFO:create_model() successfully completed......................................
2023-01-15 18:22:04,840:INFO:SubProcess create_model() end ==================================
2023-01-15 18:22:04,840:INFO:Creating metrics dataframe
2023-01-15 18:22:04,847:INFO:Initializing Gradient Boosting Classifier
2023-01-15 18:22:04,847:INFO:Total runtime is 0.3585038344065349 minutes
2023-01-15 18:22:04,847:INFO:SubProcess create_model() called ==================================
2023-01-15 18:22:04,848:INFO:Initializing create_model()
2023-01-15 18:22:04,848:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E7B52917B0>, estimator=gbc, fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E7B55160E0>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:22:04,848:INFO:Checking exceptions
2023-01-15 18:22:04,848:INFO:Importing libraries
2023-01-15 18:22:04,848:INFO:Copying training dataset
2023-01-15 18:22:04,853:INFO:Defining folds
2023-01-15 18:22:04,854:INFO:Declaring metric variables
2023-01-15 18:22:04,854:INFO:Importing untrained model
2023-01-15 18:22:04,855:INFO:Gradient Boosting Classifier Imported successfully
2023-01-15 18:22:04,855:INFO:Starting cross validation
2023-01-15 18:22:04,857:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:22:10,266:INFO:Calculating mean and std
2023-01-15 18:22:10,267:INFO:Creating metrics dataframe
2023-01-15 18:22:10,272:INFO:Uploading results into container
2023-01-15 18:22:10,273:INFO:Uploading model into container now
2023-01-15 18:22:10,274:INFO:_master_model_container: 10
2023-01-15 18:22:10,274:INFO:_display_container: 2
2023-01-15 18:22:10,275:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-01-15 18:22:10,275:INFO:create_model() successfully completed......................................
2023-01-15 18:22:10,347:INFO:SubProcess create_model() end ==================================
2023-01-15 18:22:10,348:INFO:Creating metrics dataframe
2023-01-15 18:22:10,355:INFO:Initializing Linear Discriminant Analysis
2023-01-15 18:22:10,355:INFO:Total runtime is 0.4503129800160727 minutes
2023-01-15 18:22:10,355:INFO:SubProcess create_model() called ==================================
2023-01-15 18:22:10,355:INFO:Initializing create_model()
2023-01-15 18:22:10,355:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E7B52917B0>, estimator=lda, fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E7B55160E0>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:22:10,356:INFO:Checking exceptions
2023-01-15 18:22:10,356:INFO:Importing libraries
2023-01-15 18:22:10,356:INFO:Copying training dataset
2023-01-15 18:22:10,360:INFO:Defining folds
2023-01-15 18:22:10,361:INFO:Declaring metric variables
2023-01-15 18:22:10,361:INFO:Importing untrained model
2023-01-15 18:22:10,361:INFO:Linear Discriminant Analysis Imported successfully
2023-01-15 18:22:10,362:INFO:Starting cross validation
2023-01-15 18:22:10,364:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:22:11,433:INFO:Calculating mean and std
2023-01-15 18:22:11,434:INFO:Creating metrics dataframe
2023-01-15 18:22:11,440:INFO:Uploading results into container
2023-01-15 18:22:11,441:INFO:Uploading model into container now
2023-01-15 18:22:11,442:INFO:_master_model_container: 11
2023-01-15 18:22:11,442:INFO:_display_container: 2
2023-01-15 18:22:11,442:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-01-15 18:22:11,442:INFO:create_model() successfully completed......................................
2023-01-15 18:22:11,520:INFO:SubProcess create_model() end ==================================
2023-01-15 18:22:11,520:INFO:Creating metrics dataframe
2023-01-15 18:22:11,527:INFO:Initializing Extra Trees Classifier
2023-01-15 18:22:11,527:INFO:Total runtime is 0.4698463479677837 minutes
2023-01-15 18:22:11,527:INFO:SubProcess create_model() called ==================================
2023-01-15 18:22:11,528:INFO:Initializing create_model()
2023-01-15 18:22:11,528:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E7B52917B0>, estimator=et, fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E7B55160E0>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:22:11,528:INFO:Checking exceptions
2023-01-15 18:22:11,528:INFO:Importing libraries
2023-01-15 18:22:11,528:INFO:Copying training dataset
2023-01-15 18:22:11,534:INFO:Defining folds
2023-01-15 18:22:11,534:INFO:Declaring metric variables
2023-01-15 18:22:11,535:INFO:Importing untrained model
2023-01-15 18:22:11,535:INFO:Extra Trees Classifier Imported successfully
2023-01-15 18:22:11,536:INFO:Starting cross validation
2023-01-15 18:22:11,538:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:22:14,242:INFO:Calculating mean and std
2023-01-15 18:22:14,243:INFO:Creating metrics dataframe
2023-01-15 18:22:14,248:INFO:Uploading results into container
2023-01-15 18:22:14,248:INFO:Uploading model into container now
2023-01-15 18:22:14,249:INFO:_master_model_container: 12
2023-01-15 18:22:14,249:INFO:_display_container: 2
2023-01-15 18:22:14,249:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=42, verbose=0, warm_start=False)
2023-01-15 18:22:14,250:INFO:create_model() successfully completed......................................
2023-01-15 18:22:14,324:INFO:SubProcess create_model() end ==================================
2023-01-15 18:22:14,324:INFO:Creating metrics dataframe
2023-01-15 18:22:14,331:INFO:Initializing Light Gradient Boosting Machine
2023-01-15 18:22:14,331:INFO:Total runtime is 0.5165796240170798 minutes
2023-01-15 18:22:14,331:INFO:SubProcess create_model() called ==================================
2023-01-15 18:22:14,331:INFO:Initializing create_model()
2023-01-15 18:22:14,331:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E7B52917B0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E7B55160E0>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:22:14,331:INFO:Checking exceptions
2023-01-15 18:22:14,331:INFO:Importing libraries
2023-01-15 18:22:14,332:INFO:Copying training dataset
2023-01-15 18:22:14,338:INFO:Defining folds
2023-01-15 18:22:14,339:INFO:Declaring metric variables
2023-01-15 18:22:14,339:INFO:Importing untrained model
2023-01-15 18:22:14,339:INFO:Light Gradient Boosting Machine Imported successfully
2023-01-15 18:22:14,340:INFO:Starting cross validation
2023-01-15 18:22:14,342:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:22:16,010:INFO:Calculating mean and std
2023-01-15 18:22:16,011:INFO:Creating metrics dataframe
2023-01-15 18:22:16,016:INFO:Uploading results into container
2023-01-15 18:22:16,016:INFO:Uploading model into container now
2023-01-15 18:22:16,017:INFO:_master_model_container: 13
2023-01-15 18:22:16,017:INFO:_display_container: 2
2023-01-15 18:22:16,018:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-01-15 18:22:16,018:INFO:create_model() successfully completed......................................
2023-01-15 18:22:16,093:INFO:SubProcess create_model() end ==================================
2023-01-15 18:22:16,093:INFO:Creating metrics dataframe
2023-01-15 18:22:16,099:INFO:Initializing Dummy Classifier
2023-01-15 18:22:16,100:INFO:Total runtime is 0.5460629502932232 minutes
2023-01-15 18:22:16,100:INFO:SubProcess create_model() called ==================================
2023-01-15 18:22:16,100:INFO:Initializing create_model()
2023-01-15 18:22:16,100:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E7B52917B0>, estimator=dummy, fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E7B55160E0>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:22:16,100:INFO:Checking exceptions
2023-01-15 18:22:16,100:INFO:Importing libraries
2023-01-15 18:22:16,100:INFO:Copying training dataset
2023-01-15 18:22:16,107:INFO:Defining folds
2023-01-15 18:22:16,107:INFO:Declaring metric variables
2023-01-15 18:22:16,107:INFO:Importing untrained model
2023-01-15 18:22:16,108:INFO:Dummy Classifier Imported successfully
2023-01-15 18:22:16,108:INFO:Starting cross validation
2023-01-15 18:22:16,112:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:22:17,090:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-15 18:22:17,111:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-15 18:22:17,115:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-15 18:22:17,116:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-15 18:22:17,123:INFO:Calculating mean and std
2023-01-15 18:22:17,123:INFO:Creating metrics dataframe
2023-01-15 18:22:17,128:INFO:Uploading results into container
2023-01-15 18:22:17,129:INFO:Uploading model into container now
2023-01-15 18:22:17,129:INFO:_master_model_container: 14
2023-01-15 18:22:17,130:INFO:_display_container: 2
2023-01-15 18:22:17,130:INFO:DummyClassifier(constant=None, random_state=42, strategy='prior')
2023-01-15 18:22:17,130:INFO:create_model() successfully completed......................................
2023-01-15 18:22:17,207:INFO:SubProcess create_model() end ==================================
2023-01-15 18:22:17,207:INFO:Creating metrics dataframe
2023-01-15 18:22:17,216:INFO:Initializing create_model()
2023-01-15 18:22:17,216:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E7B52917B0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:22:17,216:INFO:Checking exceptions
2023-01-15 18:22:17,218:INFO:Importing libraries
2023-01-15 18:22:17,218:INFO:Copying training dataset
2023-01-15 18:22:17,224:INFO:Defining folds
2023-01-15 18:22:17,225:INFO:Declaring metric variables
2023-01-15 18:22:17,225:INFO:Importing untrained model
2023-01-15 18:22:17,225:INFO:Declaring custom model
2023-01-15 18:22:17,226:INFO:Logistic Regression Imported successfully
2023-01-15 18:22:17,228:INFO:Cross validation set to False
2023-01-15 18:22:17,228:INFO:Fitting Model
2023-01-15 18:22:17,969:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-01-15 18:22:17,969:INFO:create_model() successfully completed......................................
2023-01-15 18:22:18,039:INFO:Initializing create_model()
2023-01-15 18:22:18,039:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E7B52917B0>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:22:18,039:INFO:Checking exceptions
2023-01-15 18:22:18,041:INFO:Importing libraries
2023-01-15 18:22:18,041:INFO:Copying training dataset
2023-01-15 18:22:18,045:INFO:Defining folds
2023-01-15 18:22:18,045:INFO:Declaring metric variables
2023-01-15 18:22:18,046:INFO:Importing untrained model
2023-01-15 18:22:18,046:INFO:Declaring custom model
2023-01-15 18:22:18,046:INFO:Linear Discriminant Analysis Imported successfully
2023-01-15 18:22:18,048:INFO:Cross validation set to False
2023-01-15 18:22:18,048:INFO:Fitting Model
2023-01-15 18:22:18,608:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-01-15 18:22:18,608:INFO:create_model() successfully completed......................................
2023-01-15 18:22:18,678:INFO:Initializing create_model()
2023-01-15 18:22:18,678:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E7B52917B0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:22:18,678:INFO:Checking exceptions
2023-01-15 18:22:18,680:INFO:Importing libraries
2023-01-15 18:22:18,680:INFO:Copying training dataset
2023-01-15 18:22:18,684:INFO:Defining folds
2023-01-15 18:22:18,684:INFO:Declaring metric variables
2023-01-15 18:22:18,684:INFO:Importing untrained model
2023-01-15 18:22:18,684:INFO:Declaring custom model
2023-01-15 18:22:18,685:INFO:Light Gradient Boosting Machine Imported successfully
2023-01-15 18:22:18,688:INFO:Cross validation set to False
2023-01-15 18:22:18,688:INFO:Fitting Model
2023-01-15 18:22:19,437:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-01-15 18:22:19,438:INFO:create_model() successfully completed......................................
2023-01-15 18:22:19,559:INFO:_master_model_container: 14
2023-01-15 18:22:19,559:INFO:_display_container: 2
2023-01-15 18:22:19,560:INFO:[LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)]
2023-01-15 18:22:19,560:INFO:compare_models() successfully completed......................................
2023-01-15 18:22:19,658:INFO:Initializing create_model()
2023-01-15 18:22:19,659:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E7B52917B0>, estimator=lightgbm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:22:19,659:INFO:Checking exceptions
2023-01-15 18:22:19,661:INFO:Importing libraries
2023-01-15 18:22:19,662:INFO:Copying training dataset
2023-01-15 18:22:19,669:INFO:Defining folds
2023-01-15 18:22:19,670:INFO:Declaring metric variables
2023-01-15 18:22:19,670:INFO:Importing untrained model
2023-01-15 18:22:19,672:INFO:Light Gradient Boosting Machine Imported successfully
2023-01-15 18:22:19,674:INFO:Starting cross validation
2023-01-15 18:22:19,677:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:22:21,289:INFO:Calculating mean and std
2023-01-15 18:22:21,290:INFO:Creating metrics dataframe
2023-01-15 18:22:21,293:INFO:Finalizing model
2023-01-15 18:22:22,098:INFO:Uploading results into container
2023-01-15 18:22:22,100:INFO:Uploading model into container now
2023-01-15 18:22:22,101:INFO:_master_model_container: 15
2023-01-15 18:22:22,101:INFO:_display_container: 3
2023-01-15 18:22:22,102:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-01-15 18:22:22,102:INFO:create_model() successfully completed......................................
2023-01-15 18:22:22,283:INFO:Initializing tune_model()
2023-01-15 18:22:22,284:INFO:tune_model(estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, n_iter=15, custom_grid=None, optimize=AUC, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=False, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E7B52917B0>)
2023-01-15 18:22:22,284:INFO:Checking exceptions
2023-01-15 18:22:22,293:INFO:Copying training dataset
2023-01-15 18:22:22,300:INFO:Checking base model
2023-01-15 18:22:22,300:INFO:Base model : Light Gradient Boosting Machine
2023-01-15 18:22:22,301:INFO:Declaring metric variables
2023-01-15 18:22:22,301:INFO:Defining Hyperparameters
2023-01-15 18:22:22,387:INFO:Tuning with n_jobs=-1
2023-01-15 18:22:22,387:INFO:Initializing RandomizedSearchCV
2023-01-15 18:22:39,827:INFO:best_params: {'actual_estimator__reg_lambda': 2, 'actual_estimator__reg_alpha': 0.3, 'actual_estimator__num_leaves': 10, 'actual_estimator__n_estimators': 10, 'actual_estimator__min_split_gain': 0.1, 'actual_estimator__min_child_samples': 71, 'actual_estimator__learning_rate': 0.01, 'actual_estimator__feature_fraction': 0.6, 'actual_estimator__bagging_freq': 2, 'actual_estimator__bagging_fraction': 0.8}
2023-01-15 18:22:39,827:INFO:Hyperparameter search completed
2023-01-15 18:22:39,827:INFO:SubProcess create_model() called ==================================
2023-01-15 18:22:39,828:INFO:Initializing create_model()
2023-01-15 18:22:39,828:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E7B52917B0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E78C19D3C0>, model_only=True, return_train_score=False, kwargs={'reg_lambda': 2, 'reg_alpha': 0.3, 'num_leaves': 10, 'n_estimators': 10, 'min_split_gain': 0.1, 'min_child_samples': 71, 'learning_rate': 0.01, 'feature_fraction': 0.6, 'bagging_freq': 2, 'bagging_fraction': 0.8})
2023-01-15 18:22:39,828:INFO:Checking exceptions
2023-01-15 18:22:39,828:INFO:Importing libraries
2023-01-15 18:22:39,828:INFO:Copying training dataset
2023-01-15 18:22:39,833:INFO:Defining folds
2023-01-15 18:22:39,834:INFO:Declaring metric variables
2023-01-15 18:22:39,834:INFO:Importing untrained model
2023-01-15 18:22:39,834:INFO:Declaring custom model
2023-01-15 18:22:39,835:INFO:Light Gradient Boosting Machine Imported successfully
2023-01-15 18:22:39,836:INFO:Starting cross validation
2023-01-15 18:22:39,838:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:22:40,932:INFO:Calculating mean and std
2023-01-15 18:22:40,932:INFO:Creating metrics dataframe
2023-01-15 18:22:40,935:INFO:Finalizing model
2023-01-15 18:22:41,507:INFO:Uploading results into container
2023-01-15 18:22:41,508:INFO:Uploading model into container now
2023-01-15 18:22:41,509:INFO:_master_model_container: 16
2023-01-15 18:22:41,509:INFO:_display_container: 4
2023-01-15 18:22:41,510:INFO:LGBMClassifier(bagging_fraction=0.8, bagging_freq=2, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.6,
               importance_type='split', learning_rate=0.01, max_depth=-1,
               min_child_samples=71, min_child_weight=0.001, min_split_gain=0.1,
               n_estimators=10, n_jobs=-1, num_leaves=10, objective=None,
               random_state=42, reg_alpha=0.3, reg_lambda=2, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-01-15 18:22:41,511:INFO:create_model() successfully completed......................................
2023-01-15 18:22:41,619:INFO:SubProcess create_model() end ==================================
2023-01-15 18:22:41,620:INFO:choose_better activated
2023-01-15 18:22:41,620:INFO:SubProcess create_model() called ==================================
2023-01-15 18:22:41,621:INFO:Initializing create_model()
2023-01-15 18:22:41,621:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E7B52917B0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:22:41,621:INFO:Checking exceptions
2023-01-15 18:22:41,622:INFO:Importing libraries
2023-01-15 18:22:41,623:INFO:Copying training dataset
2023-01-15 18:22:41,628:INFO:Defining folds
2023-01-15 18:22:41,628:INFO:Declaring metric variables
2023-01-15 18:22:41,628:INFO:Importing untrained model
2023-01-15 18:22:41,628:INFO:Declaring custom model
2023-01-15 18:22:41,629:INFO:Light Gradient Boosting Machine Imported successfully
2023-01-15 18:22:41,629:INFO:Starting cross validation
2023-01-15 18:22:41,632:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:22:43,123:INFO:Calculating mean and std
2023-01-15 18:22:43,123:INFO:Creating metrics dataframe
2023-01-15 18:22:43,127:INFO:Finalizing model
2023-01-15 18:22:43,881:INFO:Uploading results into container
2023-01-15 18:22:43,883:INFO:Uploading model into container now
2023-01-15 18:22:43,884:INFO:_master_model_container: 17
2023-01-15 18:22:43,884:INFO:_display_container: 5
2023-01-15 18:22:43,885:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-01-15 18:22:43,885:INFO:create_model() successfully completed......................................
2023-01-15 18:22:43,994:INFO:SubProcess create_model() end ==================================
2023-01-15 18:22:43,995:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0) result for AUC is 0.8647
2023-01-15 18:22:43,996:INFO:LGBMClassifier(bagging_fraction=0.8, bagging_freq=2, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.6,
               importance_type='split', learning_rate=0.01, max_depth=-1,
               min_child_samples=71, min_child_weight=0.001, min_split_gain=0.1,
               n_estimators=10, n_jobs=-1, num_leaves=10, objective=None,
               random_state=42, reg_alpha=0.3, reg_lambda=2, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0) result for AUC is 0.8722
2023-01-15 18:22:43,996:INFO:LGBMClassifier(bagging_fraction=0.8, bagging_freq=2, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.6,
               importance_type='split', learning_rate=0.01, max_depth=-1,
               min_child_samples=71, min_child_weight=0.001, min_split_gain=0.1,
               n_estimators=10, n_jobs=-1, num_leaves=10, objective=None,
               random_state=42, reg_alpha=0.3, reg_lambda=2, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0) is best model
2023-01-15 18:22:43,996:INFO:choose_better completed
2023-01-15 18:22:43,997:INFO:_master_model_container: 17
2023-01-15 18:22:43,997:INFO:_display_container: 4
2023-01-15 18:22:43,998:INFO:LGBMClassifier(bagging_fraction=0.8, bagging_freq=2, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.6,
               importance_type='split', learning_rate=0.01, max_depth=-1,
               min_child_samples=71, min_child_weight=0.001, min_split_gain=0.1,
               n_estimators=10, n_jobs=-1, num_leaves=10, objective=None,
               random_state=42, reg_alpha=0.3, reg_lambda=2, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-01-15 18:22:43,998:INFO:tune_model() successfully completed......................................
2023-01-15 18:26:37,626:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-01-15 18:26:37,628:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-01-15 18:26:37,628:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-01-15 18:26:37,628:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-01-15 18:26:38,416:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-01-15 18:26:39,035:INFO:PyCaret ClassificationExperiment
2023-01-15 18:26:39,035:INFO:Logging name: stroke
2023-01-15 18:26:39,035:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-01-15 18:26:39,035:INFO:version 3.0.0.rc8
2023-01-15 18:26:39,035:INFO:Initializing setup()
2023-01-15 18:26:39,035:INFO:self.USI: 1dd1
2023-01-15 18:26:39,035:INFO:self._variable_keys: {'X_train', 'target_param', 'seed', 'n_jobs_param', 'html_param', '_available_plots', 'fold_shuffle_param', 'exp_id', 'fold_generator', 'fix_imbalance', 'memory', 'log_plots_param', 'y_train', 'data', 'pipeline', 'fold_groups_param', 'y', 'logging_param', 'X', 'is_multiclass', 'idx', 'X_test', 'gpu_param', '_ml_usecase', 'y_test', 'exp_name_log', 'gpu_n_jobs_param', 'USI'}
2023-01-15 18:26:39,035:INFO:Checking environment
2023-01-15 18:26:39,035:INFO:python_version: 3.10.5
2023-01-15 18:26:39,035:INFO:python_build: ('tags/v3.10.5:f377153', 'Jun  6 2022 16:14:13')
2023-01-15 18:26:39,036:INFO:machine: AMD64
2023-01-15 18:26:39,036:INFO:platform: Windows-10-10.0.19045-SP0
2023-01-15 18:26:39,040:INFO:Memory: svmem(total=8494747648, available=2623442944, percent=69.1, used=5871304704, free=2623442944)
2023-01-15 18:26:39,040:INFO:Physical Core: 4
2023-01-15 18:26:39,040:INFO:Logical Core: 8
2023-01-15 18:26:39,040:INFO:Checking libraries
2023-01-15 18:26:39,041:INFO:System:
2023-01-15 18:26:39,041:INFO:    python: 3.10.5 (tags/v3.10.5:f377153, Jun  6 2022, 16:14:13) [MSC v.1929 64 bit (AMD64)]
2023-01-15 18:26:39,042:INFO:executable: c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\Scripts\python.exe
2023-01-15 18:26:39,043:INFO:   machine: Windows-10-10.0.19045-SP0
2023-01-15 18:26:39,044:INFO:PyCaret required dependencies:
2023-01-15 18:26:39,044:INFO:                 pip: 22.3.1
2023-01-15 18:26:39,044:INFO:          setuptools: 65.7.0
2023-01-15 18:26:39,044:INFO:             pycaret: 3.0.0rc8
2023-01-15 18:26:39,044:INFO:             IPython: 8.8.0
2023-01-15 18:26:39,044:INFO:          ipywidgets: 8.0.4
2023-01-15 18:26:39,044:INFO:                tqdm: 4.64.1
2023-01-15 18:26:39,045:INFO:               numpy: 1.23.5
2023-01-15 18:26:39,045:INFO:              pandas: 1.5.2
2023-01-15 18:26:39,045:INFO:              jinja2: 3.1.2
2023-01-15 18:26:39,045:INFO:               scipy: 1.10.0
2023-01-15 18:26:39,045:INFO:              joblib: 1.2.0
2023-01-15 18:26:39,045:INFO:             sklearn: 1.1.3
2023-01-15 18:26:39,045:INFO:                pyod: 1.0.7
2023-01-15 18:26:39,045:INFO:            imblearn: 0.10.1
2023-01-15 18:26:39,045:INFO:   category_encoders: 2.6.0
2023-01-15 18:26:39,045:INFO:            lightgbm: 3.3.4
2023-01-15 18:26:39,045:INFO:               numba: 0.56.4
2023-01-15 18:26:39,045:INFO:            requests: 2.28.2
2023-01-15 18:26:39,045:INFO:          matplotlib: 3.6.3
2023-01-15 18:26:39,045:INFO:          scikitplot: 0.3.7
2023-01-15 18:26:39,045:INFO:         yellowbrick: 1.5
2023-01-15 18:26:39,046:INFO:              plotly: 5.12.0
2023-01-15 18:26:39,046:INFO:             kaleido: 0.2.1
2023-01-15 18:26:39,046:INFO:         statsmodels: 0.13.5
2023-01-15 18:26:39,046:INFO:              sktime: 0.15.1
2023-01-15 18:26:39,046:INFO:               tbats: 1.1.2
2023-01-15 18:26:39,046:INFO:            pmdarima: 2.0.2
2023-01-15 18:26:39,046:INFO:              psutil: 5.9.4
2023-01-15 18:26:39,046:INFO:PyCaret optional dependencies:
2023-01-15 18:26:39,084:INFO:                shap: Not installed
2023-01-15 18:26:39,084:INFO:           interpret: Not installed
2023-01-15 18:26:39,084:INFO:                umap: Not installed
2023-01-15 18:26:39,084:INFO:    pandas_profiling: Not installed
2023-01-15 18:26:39,084:INFO:  explainerdashboard: Not installed
2023-01-15 18:26:39,084:INFO:             autoviz: Not installed
2023-01-15 18:26:39,084:INFO:           fairlearn: Not installed
2023-01-15 18:26:39,084:INFO:             xgboost: Not installed
2023-01-15 18:26:39,084:INFO:            catboost: Not installed
2023-01-15 18:26:39,084:INFO:              kmodes: Not installed
2023-01-15 18:26:39,084:INFO:             mlxtend: Not installed
2023-01-15 18:26:39,084:INFO:       statsforecast: Not installed
2023-01-15 18:26:39,084:INFO:        tune_sklearn: Not installed
2023-01-15 18:26:39,084:INFO:                 ray: Not installed
2023-01-15 18:26:39,085:INFO:            hyperopt: Not installed
2023-01-15 18:26:39,085:INFO:              optuna: Not installed
2023-01-15 18:26:39,085:INFO:               skopt: Not installed
2023-01-15 18:26:39,085:INFO:              mlflow: Not installed
2023-01-15 18:26:39,085:INFO:              gradio: Not installed
2023-01-15 18:26:39,085:INFO:             fastapi: Not installed
2023-01-15 18:26:39,085:INFO:             uvicorn: Not installed
2023-01-15 18:26:39,085:INFO:              m2cgen: Not installed
2023-01-15 18:26:39,085:INFO:           evidently: Not installed
2023-01-15 18:26:39,085:INFO:                nltk: Not installed
2023-01-15 18:26:39,085:INFO:            pyLDAvis: Not installed
2023-01-15 18:26:39,085:INFO:              gensim: Not installed
2023-01-15 18:26:39,085:INFO:               spacy: Not installed
2023-01-15 18:26:39,085:INFO:           wordcloud: Not installed
2023-01-15 18:26:39,085:INFO:            textblob: Not installed
2023-01-15 18:26:39,086:INFO:               fugue: Not installed
2023-01-15 18:26:39,086:INFO:           streamlit: Not installed
2023-01-15 18:26:39,086:INFO:             prophet: Not installed
2023-01-15 18:26:39,086:INFO:None
2023-01-15 18:26:39,086:INFO:Set up data.
2023-01-15 18:26:39,106:INFO:Set up train/test split.
2023-01-15 18:26:39,127:INFO:Set up index.
2023-01-15 18:26:39,128:INFO:Set up folding strategy.
2023-01-15 18:26:39,128:INFO:Assigning column types.
2023-01-15 18:26:39,134:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-01-15 18:26:39,216:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-01-15 18:26:39,219:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-15 18:26:39,283:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:26:39,317:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:26:39,394:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-01-15 18:26:39,395:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-15 18:26:39,440:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:26:39,441:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:26:39,444:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-01-15 18:26:39,515:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-15 18:26:39,561:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:26:39,561:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:26:39,624:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-15 18:26:39,662:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:26:39,663:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:26:39,663:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-01-15 18:26:39,781:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:26:39,782:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:26:39,896:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:26:39,897:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:26:39,898:INFO:Preparing preprocessing pipeline...
2023-01-15 18:26:39,900:INFO:Set up simple imputation.
2023-01-15 18:26:39,911:INFO:Set up encoding of ordinal features.
2023-01-15 18:26:39,918:INFO:Set up encoding of categorical features.
2023-01-15 18:26:39,918:INFO:Set up imbalanced handling.
2023-01-15 18:26:39,918:INFO:Set up column transformation.
2023-01-15 18:26:39,919:INFO:Set up feature normalization.
2023-01-15 18:26:40,544:INFO:Finished creating preprocessing pipeline.
2023-01-15 18:26:40,596:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\alepi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'hypertension',
                                             'heart_disease',
                                             'avg_glucose_level', 'bmi'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorica...
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=None,
                                                                              sampling_strategy='auto')))),
                ('transformation',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=PowerTransformer(copy=True,
                                                                 method='yeo-johnson',
                                                                 standardize=False))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2023-01-15 18:26:40,596:INFO:Creating final display dataframe.
2023-01-15 18:26:43,235:INFO:Setup _display_container:                     Description            Value
0                    Session id               42
1                        Target           stroke
2                   Target type           Binary
3           Original data shape      (15304, 11)
4        Transformed data shape      (25834, 20)
5   Transformed train set shape      (22008, 20)
6    Transformed test set shape       (3826, 20)
7              Ordinal features                2
8              Numeric features                5
9          Categorical features                5
10                   Preprocess             True
11              Imputation type           simple
12           Numeric imputation             mean
13       Categorical imputation             mode
14     Maximum one-hot encoding               25
15              Encoding method             None
16                Fix imbalance             True
17         Fix imbalance method            SMOTE
18               Transformation             True
19        Transformation method      yeo-johnson
20                    Normalize             True
21             Normalize method           zscore
22               Fold Generator  StratifiedKFold
23                  Fold Number                4
24                     CPU Jobs               -1
25                      Use GPU            False
26               Log Experiment            False
27              Experiment Name           stroke
28                          USI             1dd1
2023-01-15 18:26:43,329:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:26:43,329:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:26:43,422:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:26:43,422:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:26:43,422:INFO:setup() successfully completed in 4.39s...............
2023-01-15 18:26:43,498:INFO:Initializing compare_models()
2023-01-15 18:26:43,499:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021F2A823700>, include=None, fold=None, round=4, cross_validation=True, sort=AUC, n_select=3, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=False, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000021F2A823700>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'AUC', 'n_select': 3, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': False, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-01-15 18:26:43,499:INFO:Checking exceptions
2023-01-15 18:26:43,505:INFO:Preparing display monitor
2023-01-15 18:26:43,513:INFO:Initializing Logistic Regression
2023-01-15 18:26:43,513:INFO:Total runtime is 0.0 minutes
2023-01-15 18:26:43,514:INFO:SubProcess create_model() called ==================================
2023-01-15 18:26:43,514:INFO:Initializing create_model()
2023-01-15 18:26:43,515:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021F2A823700>, estimator=lr, fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021F066DEE60>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:26:43,515:INFO:Checking exceptions
2023-01-15 18:26:43,515:INFO:Importing libraries
2023-01-15 18:26:43,515:INFO:Copying training dataset
2023-01-15 18:26:43,520:INFO:Defining folds
2023-01-15 18:26:43,520:INFO:Declaring metric variables
2023-01-15 18:26:43,520:INFO:Importing untrained model
2023-01-15 18:26:43,521:INFO:Logistic Regression Imported successfully
2023-01-15 18:26:43,521:INFO:Starting cross validation
2023-01-15 18:26:43,524:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:26:49,286:INFO:Calculating mean and std
2023-01-15 18:26:49,286:INFO:Creating metrics dataframe
2023-01-15 18:26:49,293:INFO:Uploading results into container
2023-01-15 18:26:49,295:INFO:Uploading model into container now
2023-01-15 18:26:49,295:INFO:_master_model_container: 1
2023-01-15 18:26:49,296:INFO:_display_container: 2
2023-01-15 18:26:49,296:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-01-15 18:26:49,296:INFO:create_model() successfully completed......................................
2023-01-15 18:26:49,388:INFO:SubProcess create_model() end ==================================
2023-01-15 18:26:49,388:INFO:Creating metrics dataframe
2023-01-15 18:26:49,394:INFO:Initializing K Neighbors Classifier
2023-01-15 18:26:49,394:INFO:Total runtime is 0.0980226993560791 minutes
2023-01-15 18:26:49,394:INFO:SubProcess create_model() called ==================================
2023-01-15 18:26:49,394:INFO:Initializing create_model()
2023-01-15 18:26:49,394:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021F2A823700>, estimator=knn, fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021F066DEE60>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:26:49,395:INFO:Checking exceptions
2023-01-15 18:26:49,395:INFO:Importing libraries
2023-01-15 18:26:49,395:INFO:Copying training dataset
2023-01-15 18:26:49,399:INFO:Defining folds
2023-01-15 18:26:49,399:INFO:Declaring metric variables
2023-01-15 18:26:49,399:INFO:Importing untrained model
2023-01-15 18:26:49,400:INFO:K Neighbors Classifier Imported successfully
2023-01-15 18:26:49,400:INFO:Starting cross validation
2023-01-15 18:26:49,402:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:26:53,500:INFO:Calculating mean and std
2023-01-15 18:26:53,501:INFO:Creating metrics dataframe
2023-01-15 18:26:53,515:INFO:Uploading results into container
2023-01-15 18:26:53,519:INFO:Uploading model into container now
2023-01-15 18:26:53,520:INFO:_master_model_container: 2
2023-01-15 18:26:53,521:INFO:_display_container: 2
2023-01-15 18:26:53,521:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-01-15 18:26:53,522:INFO:create_model() successfully completed......................................
2023-01-15 18:26:53,708:INFO:SubProcess create_model() end ==================================
2023-01-15 18:26:53,708:INFO:Creating metrics dataframe
2023-01-15 18:26:53,719:INFO:Initializing Naive Bayes
2023-01-15 18:26:53,719:INFO:Total runtime is 0.17011005083719888 minutes
2023-01-15 18:26:53,720:INFO:SubProcess create_model() called ==================================
2023-01-15 18:26:53,720:INFO:Initializing create_model()
2023-01-15 18:26:53,720:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021F2A823700>, estimator=nb, fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021F066DEE60>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:26:53,720:INFO:Checking exceptions
2023-01-15 18:26:53,720:INFO:Importing libraries
2023-01-15 18:26:53,720:INFO:Copying training dataset
2023-01-15 18:26:53,725:INFO:Defining folds
2023-01-15 18:26:53,725:INFO:Declaring metric variables
2023-01-15 18:26:53,725:INFO:Importing untrained model
2023-01-15 18:26:53,727:INFO:Naive Bayes Imported successfully
2023-01-15 18:26:53,727:INFO:Starting cross validation
2023-01-15 18:26:53,732:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:26:55,014:INFO:Calculating mean and std
2023-01-15 18:26:55,015:INFO:Creating metrics dataframe
2023-01-15 18:26:55,022:INFO:Uploading results into container
2023-01-15 18:26:55,023:INFO:Uploading model into container now
2023-01-15 18:26:55,024:INFO:_master_model_container: 3
2023-01-15 18:26:55,024:INFO:_display_container: 2
2023-01-15 18:26:55,024:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-01-15 18:26:55,024:INFO:create_model() successfully completed......................................
2023-01-15 18:26:55,134:INFO:SubProcess create_model() end ==================================
2023-01-15 18:26:55,135:INFO:Creating metrics dataframe
2023-01-15 18:26:55,144:INFO:Initializing Decision Tree Classifier
2023-01-15 18:26:55,144:INFO:Total runtime is 0.19384990135828653 minutes
2023-01-15 18:26:55,145:INFO:SubProcess create_model() called ==================================
2023-01-15 18:26:55,146:INFO:Initializing create_model()
2023-01-15 18:26:55,146:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021F2A823700>, estimator=dt, fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021F066DEE60>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:26:55,148:INFO:Checking exceptions
2023-01-15 18:26:55,148:INFO:Importing libraries
2023-01-15 18:26:55,149:INFO:Copying training dataset
2023-01-15 18:26:55,158:INFO:Defining folds
2023-01-15 18:26:55,158:INFO:Declaring metric variables
2023-01-15 18:26:55,158:INFO:Importing untrained model
2023-01-15 18:26:55,159:INFO:Decision Tree Classifier Imported successfully
2023-01-15 18:26:55,159:INFO:Starting cross validation
2023-01-15 18:26:55,164:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:26:56,757:INFO:Calculating mean and std
2023-01-15 18:26:56,758:INFO:Creating metrics dataframe
2023-01-15 18:26:56,763:INFO:Uploading results into container
2023-01-15 18:26:56,764:INFO:Uploading model into container now
2023-01-15 18:26:56,765:INFO:_master_model_container: 4
2023-01-15 18:26:56,765:INFO:_display_container: 2
2023-01-15 18:26:56,765:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=42, splitter='best')
2023-01-15 18:26:56,765:INFO:create_model() successfully completed......................................
2023-01-15 18:26:56,842:INFO:SubProcess create_model() end ==================================
2023-01-15 18:26:56,842:INFO:Creating metrics dataframe
2023-01-15 18:26:56,851:INFO:Initializing SVM - Linear Kernel
2023-01-15 18:26:56,851:INFO:Total runtime is 0.22229676246643065 minutes
2023-01-15 18:26:56,851:INFO:SubProcess create_model() called ==================================
2023-01-15 18:26:56,852:INFO:Initializing create_model()
2023-01-15 18:26:56,852:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021F2A823700>, estimator=svm, fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021F066DEE60>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:26:56,852:INFO:Checking exceptions
2023-01-15 18:26:56,852:INFO:Importing libraries
2023-01-15 18:26:56,852:INFO:Copying training dataset
2023-01-15 18:26:56,857:INFO:Defining folds
2023-01-15 18:26:56,857:INFO:Declaring metric variables
2023-01-15 18:26:56,857:INFO:Importing untrained model
2023-01-15 18:26:56,858:INFO:SVM - Linear Kernel Imported successfully
2023-01-15 18:26:56,858:INFO:Starting cross validation
2023-01-15 18:26:56,858:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:26:57,856:INFO:Calculating mean and std
2023-01-15 18:26:57,857:INFO:Creating metrics dataframe
2023-01-15 18:26:57,863:INFO:Uploading results into container
2023-01-15 18:26:57,865:INFO:Uploading model into container now
2023-01-15 18:26:57,865:INFO:_master_model_container: 5
2023-01-15 18:26:57,866:INFO:_display_container: 2
2023-01-15 18:26:57,866:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-01-15 18:26:57,866:INFO:create_model() successfully completed......................................
2023-01-15 18:26:57,942:INFO:SubProcess create_model() end ==================================
2023-01-15 18:26:57,942:INFO:Creating metrics dataframe
2023-01-15 18:26:57,952:INFO:Initializing Ridge Classifier
2023-01-15 18:26:57,952:INFO:Total runtime is 0.24065167506535848 minutes
2023-01-15 18:26:57,952:INFO:SubProcess create_model() called ==================================
2023-01-15 18:26:57,952:INFO:Initializing create_model()
2023-01-15 18:26:57,952:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021F2A823700>, estimator=ridge, fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021F066DEE60>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:26:57,952:INFO:Checking exceptions
2023-01-15 18:26:57,953:INFO:Importing libraries
2023-01-15 18:26:57,953:INFO:Copying training dataset
2023-01-15 18:26:57,958:INFO:Defining folds
2023-01-15 18:26:57,958:INFO:Declaring metric variables
2023-01-15 18:26:57,958:INFO:Importing untrained model
2023-01-15 18:26:57,958:INFO:Ridge Classifier Imported successfully
2023-01-15 18:26:57,959:INFO:Starting cross validation
2023-01-15 18:26:57,962:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:26:58,853:INFO:Calculating mean and std
2023-01-15 18:26:58,854:INFO:Creating metrics dataframe
2023-01-15 18:26:58,859:INFO:Uploading results into container
2023-01-15 18:26:58,860:INFO:Uploading model into container now
2023-01-15 18:26:58,860:INFO:_master_model_container: 6
2023-01-15 18:26:58,860:INFO:_display_container: 2
2023-01-15 18:26:58,860:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize='deprecated', positive=False,
                random_state=42, solver='auto', tol=0.001)
2023-01-15 18:26:58,860:INFO:create_model() successfully completed......................................
2023-01-15 18:26:58,938:INFO:SubProcess create_model() end ==================================
2023-01-15 18:26:58,938:INFO:Creating metrics dataframe
2023-01-15 18:26:58,946:INFO:Initializing Random Forest Classifier
2023-01-15 18:26:58,946:INFO:Total runtime is 0.2572225530942281 minutes
2023-01-15 18:26:58,947:INFO:SubProcess create_model() called ==================================
2023-01-15 18:26:58,947:INFO:Initializing create_model()
2023-01-15 18:26:58,947:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021F2A823700>, estimator=rf, fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021F066DEE60>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:26:58,947:INFO:Checking exceptions
2023-01-15 18:26:58,947:INFO:Importing libraries
2023-01-15 18:26:58,947:INFO:Copying training dataset
2023-01-15 18:26:58,952:INFO:Defining folds
2023-01-15 18:26:58,953:INFO:Declaring metric variables
2023-01-15 18:26:58,953:INFO:Importing untrained model
2023-01-15 18:26:58,953:INFO:Random Forest Classifier Imported successfully
2023-01-15 18:26:58,954:INFO:Starting cross validation
2023-01-15 18:26:58,956:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:27:02,298:INFO:Calculating mean and std
2023-01-15 18:27:02,299:INFO:Creating metrics dataframe
2023-01-15 18:27:02,304:INFO:Uploading results into container
2023-01-15 18:27:02,305:INFO:Uploading model into container now
2023-01-15 18:27:02,305:INFO:_master_model_container: 7
2023-01-15 18:27:02,306:INFO:_display_container: 2
2023-01-15 18:27:02,306:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=42, verbose=0, warm_start=False)
2023-01-15 18:27:02,306:INFO:create_model() successfully completed......................................
2023-01-15 18:27:02,385:INFO:SubProcess create_model() end ==================================
2023-01-15 18:27:02,386:INFO:Creating metrics dataframe
2023-01-15 18:27:02,392:INFO:Initializing Quadratic Discriminant Analysis
2023-01-15 18:27:02,392:INFO:Total runtime is 0.31466174125671387 minutes
2023-01-15 18:27:02,393:INFO:SubProcess create_model() called ==================================
2023-01-15 18:27:02,393:INFO:Initializing create_model()
2023-01-15 18:27:02,393:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021F2A823700>, estimator=qda, fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021F066DEE60>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:27:02,393:INFO:Checking exceptions
2023-01-15 18:27:02,393:INFO:Importing libraries
2023-01-15 18:27:02,393:INFO:Copying training dataset
2023-01-15 18:27:02,400:INFO:Defining folds
2023-01-15 18:27:02,401:INFO:Declaring metric variables
2023-01-15 18:27:02,401:INFO:Importing untrained model
2023-01-15 18:27:02,401:INFO:Quadratic Discriminant Analysis Imported successfully
2023-01-15 18:27:02,402:INFO:Starting cross validation
2023-01-15 18:27:02,404:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:27:03,020:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-01-15 18:27:03,023:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-01-15 18:27:03,037:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-01-15 18:27:03,517:INFO:Calculating mean and std
2023-01-15 18:27:03,518:INFO:Creating metrics dataframe
2023-01-15 18:27:03,523:INFO:Uploading results into container
2023-01-15 18:27:03,523:INFO:Uploading model into container now
2023-01-15 18:27:03,524:INFO:_master_model_container: 8
2023-01-15 18:27:03,524:INFO:_display_container: 2
2023-01-15 18:27:03,524:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-01-15 18:27:03,524:INFO:create_model() successfully completed......................................
2023-01-15 18:27:03,601:INFO:SubProcess create_model() end ==================================
2023-01-15 18:27:03,601:INFO:Creating metrics dataframe
2023-01-15 18:27:03,608:INFO:Initializing Ada Boost Classifier
2023-01-15 18:27:03,608:INFO:Total runtime is 0.334928301970164 minutes
2023-01-15 18:27:03,608:INFO:SubProcess create_model() called ==================================
2023-01-15 18:27:03,608:INFO:Initializing create_model()
2023-01-15 18:27:03,608:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021F2A823700>, estimator=ada, fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021F066DEE60>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:27:03,609:INFO:Checking exceptions
2023-01-15 18:27:03,609:INFO:Importing libraries
2023-01-15 18:27:03,609:INFO:Copying training dataset
2023-01-15 18:27:03,615:INFO:Defining folds
2023-01-15 18:27:03,615:INFO:Declaring metric variables
2023-01-15 18:27:03,615:INFO:Importing untrained model
2023-01-15 18:27:03,616:INFO:Ada Boost Classifier Imported successfully
2023-01-15 18:27:03,616:INFO:Starting cross validation
2023-01-15 18:27:03,619:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:27:06,367:INFO:Calculating mean and std
2023-01-15 18:27:06,368:INFO:Creating metrics dataframe
2023-01-15 18:27:06,373:INFO:Uploading results into container
2023-01-15 18:27:06,373:INFO:Uploading model into container now
2023-01-15 18:27:06,374:INFO:_master_model_container: 9
2023-01-15 18:27:06,374:INFO:_display_container: 2
2023-01-15 18:27:06,374:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2023-01-15 18:27:06,374:INFO:create_model() successfully completed......................................
2023-01-15 18:27:06,454:INFO:SubProcess create_model() end ==================================
2023-01-15 18:27:06,454:INFO:Creating metrics dataframe
2023-01-15 18:27:06,461:INFO:Initializing Gradient Boosting Classifier
2023-01-15 18:27:06,461:INFO:Total runtime is 0.382477871576945 minutes
2023-01-15 18:27:06,462:INFO:SubProcess create_model() called ==================================
2023-01-15 18:27:06,462:INFO:Initializing create_model()
2023-01-15 18:27:06,462:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021F2A823700>, estimator=gbc, fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021F066DEE60>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:27:06,462:INFO:Checking exceptions
2023-01-15 18:27:06,462:INFO:Importing libraries
2023-01-15 18:27:06,462:INFO:Copying training dataset
2023-01-15 18:27:06,468:INFO:Defining folds
2023-01-15 18:27:06,468:INFO:Declaring metric variables
2023-01-15 18:27:06,469:INFO:Importing untrained model
2023-01-15 18:27:06,469:INFO:Gradient Boosting Classifier Imported successfully
2023-01-15 18:27:06,470:INFO:Starting cross validation
2023-01-15 18:27:06,472:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:27:12,343:INFO:Calculating mean and std
2023-01-15 18:27:12,344:INFO:Creating metrics dataframe
2023-01-15 18:27:12,349:INFO:Uploading results into container
2023-01-15 18:27:12,350:INFO:Uploading model into container now
2023-01-15 18:27:12,350:INFO:_master_model_container: 10
2023-01-15 18:27:12,350:INFO:_display_container: 2
2023-01-15 18:27:12,351:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-01-15 18:27:12,351:INFO:create_model() successfully completed......................................
2023-01-15 18:27:12,424:INFO:SubProcess create_model() end ==================================
2023-01-15 18:27:12,424:INFO:Creating metrics dataframe
2023-01-15 18:27:12,431:INFO:Initializing Linear Discriminant Analysis
2023-01-15 18:27:12,431:INFO:Total runtime is 0.48197100559870404 minutes
2023-01-15 18:27:12,431:INFO:SubProcess create_model() called ==================================
2023-01-15 18:27:12,432:INFO:Initializing create_model()
2023-01-15 18:27:12,432:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021F2A823700>, estimator=lda, fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021F066DEE60>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:27:12,432:INFO:Checking exceptions
2023-01-15 18:27:12,432:INFO:Importing libraries
2023-01-15 18:27:12,432:INFO:Copying training dataset
2023-01-15 18:27:12,438:INFO:Defining folds
2023-01-15 18:27:12,438:INFO:Declaring metric variables
2023-01-15 18:27:12,438:INFO:Importing untrained model
2023-01-15 18:27:12,438:INFO:Linear Discriminant Analysis Imported successfully
2023-01-15 18:27:12,439:INFO:Starting cross validation
2023-01-15 18:27:12,441:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:27:13,628:INFO:Calculating mean and std
2023-01-15 18:27:13,628:INFO:Creating metrics dataframe
2023-01-15 18:27:13,636:INFO:Uploading results into container
2023-01-15 18:27:13,637:INFO:Uploading model into container now
2023-01-15 18:27:13,637:INFO:_master_model_container: 11
2023-01-15 18:27:13,637:INFO:_display_container: 2
2023-01-15 18:27:13,638:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-01-15 18:27:13,638:INFO:create_model() successfully completed......................................
2023-01-15 18:27:13,710:INFO:SubProcess create_model() end ==================================
2023-01-15 18:27:13,710:INFO:Creating metrics dataframe
2023-01-15 18:27:13,719:INFO:Initializing Extra Trees Classifier
2023-01-15 18:27:13,719:INFO:Total runtime is 0.5034339427947998 minutes
2023-01-15 18:27:13,719:INFO:SubProcess create_model() called ==================================
2023-01-15 18:27:13,719:INFO:Initializing create_model()
2023-01-15 18:27:13,720:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021F2A823700>, estimator=et, fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021F066DEE60>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:27:13,720:INFO:Checking exceptions
2023-01-15 18:27:13,720:INFO:Importing libraries
2023-01-15 18:27:13,720:INFO:Copying training dataset
2023-01-15 18:27:13,725:INFO:Defining folds
2023-01-15 18:27:13,725:INFO:Declaring metric variables
2023-01-15 18:27:13,725:INFO:Importing untrained model
2023-01-15 18:27:13,726:INFO:Extra Trees Classifier Imported successfully
2023-01-15 18:27:13,726:INFO:Starting cross validation
2023-01-15 18:27:13,727:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:27:16,528:INFO:Calculating mean and std
2023-01-15 18:27:16,529:INFO:Creating metrics dataframe
2023-01-15 18:27:16,534:INFO:Uploading results into container
2023-01-15 18:27:16,535:INFO:Uploading model into container now
2023-01-15 18:27:16,535:INFO:_master_model_container: 12
2023-01-15 18:27:16,536:INFO:_display_container: 2
2023-01-15 18:27:16,536:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=42, verbose=0, warm_start=False)
2023-01-15 18:27:16,536:INFO:create_model() successfully completed......................................
2023-01-15 18:27:16,609:INFO:SubProcess create_model() end ==================================
2023-01-15 18:27:16,609:INFO:Creating metrics dataframe
2023-01-15 18:27:16,615:INFO:Initializing Light Gradient Boosting Machine
2023-01-15 18:27:16,615:INFO:Total runtime is 0.5517034888267517 minutes
2023-01-15 18:27:16,615:INFO:SubProcess create_model() called ==================================
2023-01-15 18:27:16,617:INFO:Initializing create_model()
2023-01-15 18:27:16,617:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021F2A823700>, estimator=lightgbm, fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021F066DEE60>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:27:16,617:INFO:Checking exceptions
2023-01-15 18:27:16,617:INFO:Importing libraries
2023-01-15 18:27:16,617:INFO:Copying training dataset
2023-01-15 18:27:16,623:INFO:Defining folds
2023-01-15 18:27:16,623:INFO:Declaring metric variables
2023-01-15 18:27:16,623:INFO:Importing untrained model
2023-01-15 18:27:16,624:INFO:Light Gradient Boosting Machine Imported successfully
2023-01-15 18:27:16,624:INFO:Starting cross validation
2023-01-15 18:27:16,626:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:27:18,499:INFO:Calculating mean and std
2023-01-15 18:27:18,501:INFO:Creating metrics dataframe
2023-01-15 18:27:18,505:INFO:Uploading results into container
2023-01-15 18:27:18,506:INFO:Uploading model into container now
2023-01-15 18:27:18,506:INFO:_master_model_container: 13
2023-01-15 18:27:18,507:INFO:_display_container: 2
2023-01-15 18:27:18,507:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-01-15 18:27:18,507:INFO:create_model() successfully completed......................................
2023-01-15 18:27:18,580:INFO:SubProcess create_model() end ==================================
2023-01-15 18:27:18,580:INFO:Creating metrics dataframe
2023-01-15 18:27:18,587:INFO:Initializing Dummy Classifier
2023-01-15 18:27:18,587:INFO:Total runtime is 0.5845782399177551 minutes
2023-01-15 18:27:18,587:INFO:SubProcess create_model() called ==================================
2023-01-15 18:27:18,587:INFO:Initializing create_model()
2023-01-15 18:27:18,587:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021F2A823700>, estimator=dummy, fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021F066DEE60>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:27:18,587:INFO:Checking exceptions
2023-01-15 18:27:18,588:INFO:Importing libraries
2023-01-15 18:27:18,588:INFO:Copying training dataset
2023-01-15 18:27:18,592:INFO:Defining folds
2023-01-15 18:27:18,592:INFO:Declaring metric variables
2023-01-15 18:27:18,593:INFO:Importing untrained model
2023-01-15 18:27:18,593:INFO:Dummy Classifier Imported successfully
2023-01-15 18:27:18,593:INFO:Starting cross validation
2023-01-15 18:27:18,596:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:27:19,590:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-15 18:27:19,596:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-15 18:27:19,629:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-15 18:27:19,638:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-15 18:27:19,643:INFO:Calculating mean and std
2023-01-15 18:27:19,644:INFO:Creating metrics dataframe
2023-01-15 18:27:19,649:INFO:Uploading results into container
2023-01-15 18:27:19,649:INFO:Uploading model into container now
2023-01-15 18:27:19,649:INFO:_master_model_container: 14
2023-01-15 18:27:19,651:INFO:_display_container: 2
2023-01-15 18:27:19,651:INFO:DummyClassifier(constant=None, random_state=42, strategy='prior')
2023-01-15 18:27:19,651:INFO:create_model() successfully completed......................................
2023-01-15 18:27:19,726:INFO:SubProcess create_model() end ==================================
2023-01-15 18:27:19,727:INFO:Creating metrics dataframe
2023-01-15 18:27:19,737:INFO:Initializing create_model()
2023-01-15 18:27:19,737:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021F2A823700>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:27:19,737:INFO:Checking exceptions
2023-01-15 18:27:19,739:INFO:Importing libraries
2023-01-15 18:27:19,739:INFO:Copying training dataset
2023-01-15 18:27:19,744:INFO:Defining folds
2023-01-15 18:27:19,744:INFO:Declaring metric variables
2023-01-15 18:27:19,745:INFO:Importing untrained model
2023-01-15 18:27:19,745:INFO:Declaring custom model
2023-01-15 18:27:19,746:INFO:Logistic Regression Imported successfully
2023-01-15 18:27:19,748:INFO:Cross validation set to False
2023-01-15 18:27:19,748:INFO:Fitting Model
2023-01-15 18:27:20,403:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-01-15 18:27:20,403:INFO:create_model() successfully completed......................................
2023-01-15 18:27:20,473:INFO:Initializing create_model()
2023-01-15 18:27:20,474:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021F2A823700>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:27:20,474:INFO:Checking exceptions
2023-01-15 18:27:20,475:INFO:Importing libraries
2023-01-15 18:27:20,475:INFO:Copying training dataset
2023-01-15 18:27:20,480:INFO:Defining folds
2023-01-15 18:27:20,480:INFO:Declaring metric variables
2023-01-15 18:27:20,480:INFO:Importing untrained model
2023-01-15 18:27:20,480:INFO:Declaring custom model
2023-01-15 18:27:20,481:INFO:Linear Discriminant Analysis Imported successfully
2023-01-15 18:27:20,483:INFO:Cross validation set to False
2023-01-15 18:27:20,483:INFO:Fitting Model
2023-01-15 18:27:21,018:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-01-15 18:27:21,018:INFO:create_model() successfully completed......................................
2023-01-15 18:27:21,089:INFO:Initializing create_model()
2023-01-15 18:27:21,089:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021F2A823700>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:27:21,090:INFO:Checking exceptions
2023-01-15 18:27:21,091:INFO:Importing libraries
2023-01-15 18:27:21,091:INFO:Copying training dataset
2023-01-15 18:27:21,096:INFO:Defining folds
2023-01-15 18:27:21,096:INFO:Declaring metric variables
2023-01-15 18:27:21,096:INFO:Importing untrained model
2023-01-15 18:27:21,096:INFO:Declaring custom model
2023-01-15 18:27:21,097:INFO:Light Gradient Boosting Machine Imported successfully
2023-01-15 18:27:21,099:INFO:Cross validation set to False
2023-01-15 18:27:21,099:INFO:Fitting Model
2023-01-15 18:27:21,820:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-01-15 18:27:21,820:INFO:create_model() successfully completed......................................
2023-01-15 18:27:21,941:INFO:_master_model_container: 14
2023-01-15 18:27:21,941:INFO:_display_container: 2
2023-01-15 18:27:21,942:INFO:[LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)]
2023-01-15 18:27:21,942:INFO:compare_models() successfully completed......................................
2023-01-15 18:27:22,000:INFO:Initializing tune_model()
2023-01-15 18:27:22,000:INFO:tune_model(estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, n_iter=20, custom_grid=None, optimize=AUC, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021F2A823700>)
2023-01-15 18:27:22,000:INFO:Checking exceptions
2023-01-15 18:27:22,027:INFO:Copying training dataset
2023-01-15 18:27:22,033:INFO:Checking base model
2023-01-15 18:27:22,033:INFO:Base model : Logistic Regression
2023-01-15 18:27:22,040:INFO:Declaring metric variables
2023-01-15 18:27:22,044:INFO:Defining Hyperparameters
2023-01-15 18:27:22,127:INFO:Tuning with n_jobs=-1
2023-01-15 18:27:22,127:INFO:Initializing RandomizedSearchCV
2023-01-15 18:27:41,682:INFO:best_params: {'actual_estimator__class_weight': {}, 'actual_estimator__C': 0.385}
2023-01-15 18:27:41,683:INFO:Hyperparameter search completed
2023-01-15 18:27:41,683:INFO:SubProcess create_model() called ==================================
2023-01-15 18:27:41,684:INFO:Initializing create_model()
2023-01-15 18:27:41,684:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021F2A823700>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021F29E5D1E0>, model_only=True, return_train_score=False, kwargs={'class_weight': {}, 'C': 0.385})
2023-01-15 18:27:41,684:INFO:Checking exceptions
2023-01-15 18:27:41,684:INFO:Importing libraries
2023-01-15 18:27:41,684:INFO:Copying training dataset
2023-01-15 18:27:41,692:INFO:Defining folds
2023-01-15 18:27:41,692:INFO:Declaring metric variables
2023-01-15 18:27:41,698:INFO:Importing untrained model
2023-01-15 18:27:41,698:INFO:Declaring custom model
2023-01-15 18:27:41,703:INFO:Logistic Regression Imported successfully
2023-01-15 18:27:41,715:INFO:Starting cross validation
2023-01-15 18:27:41,719:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:27:43,046:INFO:Calculating mean and std
2023-01-15 18:27:43,048:INFO:Creating metrics dataframe
2023-01-15 18:27:43,056:INFO:Finalizing model
2023-01-15 18:27:43,862:INFO:Uploading results into container
2023-01-15 18:27:43,864:INFO:Uploading model into container now
2023-01-15 18:27:43,865:INFO:_master_model_container: 15
2023-01-15 18:27:43,865:INFO:_display_container: 3
2023-01-15 18:27:43,866:INFO:LogisticRegression(C=0.385, class_weight={}, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-01-15 18:27:43,866:INFO:create_model() successfully completed......................................
2023-01-15 18:27:43,951:INFO:SubProcess create_model() end ==================================
2023-01-15 18:27:43,951:INFO:choose_better activated
2023-01-15 18:27:43,955:INFO:SubProcess create_model() called ==================================
2023-01-15 18:27:43,956:INFO:Initializing create_model()
2023-01-15 18:27:43,956:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021F2A823700>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:27:43,956:INFO:Checking exceptions
2023-01-15 18:27:43,959:INFO:Importing libraries
2023-01-15 18:27:43,959:INFO:Copying training dataset
2023-01-15 18:27:43,965:INFO:Defining folds
2023-01-15 18:27:43,966:INFO:Declaring metric variables
2023-01-15 18:27:43,966:INFO:Importing untrained model
2023-01-15 18:27:43,966:INFO:Declaring custom model
2023-01-15 18:27:43,967:INFO:Logistic Regression Imported successfully
2023-01-15 18:27:43,967:INFO:Starting cross validation
2023-01-15 18:27:43,969:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:27:45,308:INFO:Calculating mean and std
2023-01-15 18:27:45,309:INFO:Creating metrics dataframe
2023-01-15 18:27:45,313:INFO:Finalizing model
2023-01-15 18:27:46,063:INFO:Uploading results into container
2023-01-15 18:27:46,063:INFO:Uploading model into container now
2023-01-15 18:27:46,064:INFO:_master_model_container: 16
2023-01-15 18:27:46,064:INFO:_display_container: 4
2023-01-15 18:27:46,064:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-01-15 18:27:46,064:INFO:create_model() successfully completed......................................
2023-01-15 18:27:46,136:INFO:SubProcess create_model() end ==================================
2023-01-15 18:27:46,136:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for AUC is 0.8741
2023-01-15 18:27:46,137:INFO:LogisticRegression(C=0.385, class_weight={}, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for AUC is 0.8745
2023-01-15 18:27:46,138:INFO:LogisticRegression(C=0.385, class_weight={}, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) is best model
2023-01-15 18:27:46,138:INFO:choose_better completed
2023-01-15 18:27:46,149:INFO:_master_model_container: 16
2023-01-15 18:27:46,149:INFO:_display_container: 3
2023-01-15 18:27:46,150:INFO:LogisticRegression(C=0.385, class_weight={}, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-01-15 18:27:46,150:INFO:tune_model() successfully completed......................................
2023-01-15 18:27:46,245:INFO:Initializing tune_model()
2023-01-15 18:27:46,246:INFO:tune_model(estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=None, round=4, n_iter=20, custom_grid=None, optimize=AUC, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021F2A823700>)
2023-01-15 18:27:46,246:INFO:Checking exceptions
2023-01-15 18:27:46,270:INFO:Copying training dataset
2023-01-15 18:27:46,278:INFO:Checking base model
2023-01-15 18:27:46,278:INFO:Base model : Linear Discriminant Analysis
2023-01-15 18:27:46,283:INFO:Declaring metric variables
2023-01-15 18:27:46,289:INFO:Defining Hyperparameters
2023-01-15 18:27:46,409:INFO:Tuning with n_jobs=-1
2023-01-15 18:27:46,411:INFO:Initializing RandomizedSearchCV
2023-01-15 18:28:02,358:INFO:best_params: {'actual_estimator__solver': 'lsqr', 'actual_estimator__shrinkage': 0.05}
2023-01-15 18:28:02,359:INFO:Hyperparameter search completed
2023-01-15 18:28:02,359:INFO:SubProcess create_model() called ==================================
2023-01-15 18:28:02,359:INFO:Initializing create_model()
2023-01-15 18:28:02,360:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021F2A823700>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021F2A822E00>, model_only=True, return_train_score=False, kwargs={'solver': 'lsqr', 'shrinkage': 0.05})
2023-01-15 18:28:02,360:INFO:Checking exceptions
2023-01-15 18:28:02,360:INFO:Importing libraries
2023-01-15 18:28:02,360:INFO:Copying training dataset
2023-01-15 18:28:02,367:INFO:Defining folds
2023-01-15 18:28:02,368:INFO:Declaring metric variables
2023-01-15 18:28:02,372:INFO:Importing untrained model
2023-01-15 18:28:02,372:INFO:Declaring custom model
2023-01-15 18:28:02,377:INFO:Linear Discriminant Analysis Imported successfully
2023-01-15 18:28:02,389:INFO:Starting cross validation
2023-01-15 18:28:02,392:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:28:03,756:INFO:Calculating mean and std
2023-01-15 18:28:03,758:INFO:Creating metrics dataframe
2023-01-15 18:28:03,773:INFO:Finalizing model
2023-01-15 18:28:04,540:INFO:Uploading results into container
2023-01-15 18:28:04,541:INFO:Uploading model into container now
2023-01-15 18:28:04,543:INFO:_master_model_container: 17
2023-01-15 18:28:04,543:INFO:_display_container: 4
2023-01-15 18:28:04,544:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=0.05, solver='lsqr',
                           store_covariance=False, tol=0.0001)
2023-01-15 18:28:04,544:INFO:create_model() successfully completed......................................
2023-01-15 18:28:04,643:INFO:SubProcess create_model() end ==================================
2023-01-15 18:28:04,643:INFO:choose_better activated
2023-01-15 18:28:04,649:INFO:SubProcess create_model() called ==================================
2023-01-15 18:28:04,650:INFO:Initializing create_model()
2023-01-15 18:28:04,650:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021F2A823700>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:28:04,650:INFO:Checking exceptions
2023-01-15 18:28:04,652:INFO:Importing libraries
2023-01-15 18:28:04,652:INFO:Copying training dataset
2023-01-15 18:28:04,658:INFO:Defining folds
2023-01-15 18:28:04,658:INFO:Declaring metric variables
2023-01-15 18:28:04,658:INFO:Importing untrained model
2023-01-15 18:28:04,658:INFO:Declaring custom model
2023-01-15 18:28:04,659:INFO:Linear Discriminant Analysis Imported successfully
2023-01-15 18:28:04,659:INFO:Starting cross validation
2023-01-15 18:28:04,661:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:28:06,119:INFO:Calculating mean and std
2023-01-15 18:28:06,120:INFO:Creating metrics dataframe
2023-01-15 18:28:06,123:INFO:Finalizing model
2023-01-15 18:28:06,734:INFO:Uploading results into container
2023-01-15 18:28:06,735:INFO:Uploading model into container now
2023-01-15 18:28:06,735:INFO:_master_model_container: 18
2023-01-15 18:28:06,735:INFO:_display_container: 5
2023-01-15 18:28:06,735:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-01-15 18:28:06,735:INFO:create_model() successfully completed......................................
2023-01-15 18:28:06,804:INFO:SubProcess create_model() end ==================================
2023-01-15 18:28:06,805:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001) result for AUC is 0.8724
2023-01-15 18:28:06,805:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=0.05, solver='lsqr',
                           store_covariance=False, tol=0.0001) result for AUC is 0.8742
2023-01-15 18:28:06,805:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=0.05, solver='lsqr',
                           store_covariance=False, tol=0.0001) is best model
2023-01-15 18:28:06,805:INFO:choose_better completed
2023-01-15 18:28:06,817:INFO:_master_model_container: 18
2023-01-15 18:28:06,817:INFO:_display_container: 4
2023-01-15 18:28:06,817:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=0.05, solver='lsqr',
                           store_covariance=False, tol=0.0001)
2023-01-15 18:28:06,817:INFO:tune_model() successfully completed......................................
2023-01-15 18:28:06,910:INFO:Initializing tune_model()
2023-01-15 18:28:06,910:INFO:tune_model(estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, n_iter=20, custom_grid=None, optimize=AUC, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021F2A823700>)
2023-01-15 18:28:06,910:INFO:Checking exceptions
2023-01-15 18:28:06,939:INFO:Copying training dataset
2023-01-15 18:28:06,945:INFO:Checking base model
2023-01-15 18:28:06,946:INFO:Base model : Light Gradient Boosting Machine
2023-01-15 18:28:06,953:INFO:Declaring metric variables
2023-01-15 18:28:06,959:INFO:Defining Hyperparameters
2023-01-15 18:28:07,065:INFO:Tuning with n_jobs=-1
2023-01-15 18:28:07,065:INFO:Initializing RandomizedSearchCV
2023-01-15 18:29:29,942:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-01-15 18:29:29,942:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-01-15 18:29:29,942:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-01-15 18:29:29,942:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-01-15 18:29:30,524:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-01-15 18:29:31,104:INFO:PyCaret ClassificationExperiment
2023-01-15 18:29:31,105:INFO:Logging name: stroke
2023-01-15 18:29:31,105:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-01-15 18:29:31,105:INFO:version 3.0.0.rc8
2023-01-15 18:29:31,105:INFO:Initializing setup()
2023-01-15 18:29:31,105:INFO:self.USI: c20d
2023-01-15 18:29:31,105:INFO:self._variable_keys: {'log_plots_param', 'pipeline', 'html_param', 'fold_shuffle_param', 'y', 'X', 'X_test', 'gpu_param', 'exp_id', 'USI', 'memory', 'seed', 'data', '_ml_usecase', 'X_train', 'y_test', 'fix_imbalance', 'y_train', 'n_jobs_param', 'gpu_n_jobs_param', 'target_param', 'is_multiclass', '_available_plots', 'idx', 'logging_param', 'fold_generator', 'fold_groups_param', 'exp_name_log'}
2023-01-15 18:29:31,106:INFO:Checking environment
2023-01-15 18:29:31,106:INFO:python_version: 3.10.5
2023-01-15 18:29:31,106:INFO:python_build: ('tags/v3.10.5:f377153', 'Jun  6 2022 16:14:13')
2023-01-15 18:29:31,106:INFO:machine: AMD64
2023-01-15 18:29:31,106:INFO:platform: Windows-10-10.0.19045-SP0
2023-01-15 18:29:31,110:INFO:Memory: svmem(total=8494747648, available=2624299008, percent=69.1, used=5870448640, free=2624299008)
2023-01-15 18:29:31,110:INFO:Physical Core: 4
2023-01-15 18:29:31,110:INFO:Logical Core: 8
2023-01-15 18:29:31,111:INFO:Checking libraries
2023-01-15 18:29:31,111:INFO:System:
2023-01-15 18:29:31,111:INFO:    python: 3.10.5 (tags/v3.10.5:f377153, Jun  6 2022, 16:14:13) [MSC v.1929 64 bit (AMD64)]
2023-01-15 18:29:31,111:INFO:executable: c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\Scripts\python.exe
2023-01-15 18:29:31,111:INFO:   machine: Windows-10-10.0.19045-SP0
2023-01-15 18:29:31,111:INFO:PyCaret required dependencies:
2023-01-15 18:29:31,111:INFO:                 pip: 22.3.1
2023-01-15 18:29:31,111:INFO:          setuptools: 65.7.0
2023-01-15 18:29:31,112:INFO:             pycaret: 3.0.0rc8
2023-01-15 18:29:31,112:INFO:             IPython: 8.8.0
2023-01-15 18:29:31,112:INFO:          ipywidgets: 8.0.4
2023-01-15 18:29:31,112:INFO:                tqdm: 4.64.1
2023-01-15 18:29:31,112:INFO:               numpy: 1.23.5
2023-01-15 18:29:31,112:INFO:              pandas: 1.5.2
2023-01-15 18:29:31,112:INFO:              jinja2: 3.1.2
2023-01-15 18:29:31,112:INFO:               scipy: 1.10.0
2023-01-15 18:29:31,112:INFO:              joblib: 1.2.0
2023-01-15 18:29:31,112:INFO:             sklearn: 1.1.3
2023-01-15 18:29:31,112:INFO:                pyod: 1.0.7
2023-01-15 18:29:31,112:INFO:            imblearn: 0.10.1
2023-01-15 18:29:31,112:INFO:   category_encoders: 2.6.0
2023-01-15 18:29:31,112:INFO:            lightgbm: 3.3.4
2023-01-15 18:29:31,113:INFO:               numba: 0.56.4
2023-01-15 18:29:31,113:INFO:            requests: 2.28.2
2023-01-15 18:29:31,113:INFO:          matplotlib: 3.6.3
2023-01-15 18:29:31,113:INFO:          scikitplot: 0.3.7
2023-01-15 18:29:31,113:INFO:         yellowbrick: 1.5
2023-01-15 18:29:31,113:INFO:              plotly: 5.12.0
2023-01-15 18:29:31,113:INFO:             kaleido: 0.2.1
2023-01-15 18:29:31,113:INFO:         statsmodels: 0.13.5
2023-01-15 18:29:31,113:INFO:              sktime: 0.15.1
2023-01-15 18:29:31,113:INFO:               tbats: 1.1.2
2023-01-15 18:29:31,113:INFO:            pmdarima: 2.0.2
2023-01-15 18:29:31,113:INFO:              psutil: 5.9.4
2023-01-15 18:29:31,113:INFO:PyCaret optional dependencies:
2023-01-15 18:29:31,149:INFO:                shap: Not installed
2023-01-15 18:29:31,149:INFO:           interpret: Not installed
2023-01-15 18:29:31,149:INFO:                umap: Not installed
2023-01-15 18:29:31,149:INFO:    pandas_profiling: Not installed
2023-01-15 18:29:31,149:INFO:  explainerdashboard: Not installed
2023-01-15 18:29:31,149:INFO:             autoviz: Not installed
2023-01-15 18:29:31,149:INFO:           fairlearn: Not installed
2023-01-15 18:29:31,149:INFO:             xgboost: Not installed
2023-01-15 18:29:31,150:INFO:            catboost: Not installed
2023-01-15 18:29:31,150:INFO:              kmodes: Not installed
2023-01-15 18:29:31,150:INFO:             mlxtend: Not installed
2023-01-15 18:29:31,150:INFO:       statsforecast: Not installed
2023-01-15 18:29:31,150:INFO:        tune_sklearn: Not installed
2023-01-15 18:29:31,150:INFO:                 ray: Not installed
2023-01-15 18:29:31,150:INFO:            hyperopt: Not installed
2023-01-15 18:29:31,150:INFO:              optuna: Not installed
2023-01-15 18:29:31,150:INFO:               skopt: Not installed
2023-01-15 18:29:31,150:INFO:              mlflow: Not installed
2023-01-15 18:29:31,150:INFO:              gradio: Not installed
2023-01-15 18:29:31,150:INFO:             fastapi: Not installed
2023-01-15 18:29:31,150:INFO:             uvicorn: Not installed
2023-01-15 18:29:31,150:INFO:              m2cgen: Not installed
2023-01-15 18:29:31,150:INFO:           evidently: Not installed
2023-01-15 18:29:31,150:INFO:                nltk: Not installed
2023-01-15 18:29:31,150:INFO:            pyLDAvis: Not installed
2023-01-15 18:29:31,151:INFO:              gensim: Not installed
2023-01-15 18:29:31,151:INFO:               spacy: Not installed
2023-01-15 18:29:31,151:INFO:           wordcloud: Not installed
2023-01-15 18:29:31,151:INFO:            textblob: Not installed
2023-01-15 18:29:31,151:INFO:               fugue: Not installed
2023-01-15 18:29:31,151:INFO:           streamlit: Not installed
2023-01-15 18:29:31,151:INFO:             prophet: Not installed
2023-01-15 18:29:31,151:INFO:None
2023-01-15 18:29:31,151:INFO:Set up data.
2023-01-15 18:29:31,167:INFO:Set up train/test split.
2023-01-15 18:29:31,179:INFO:Set up index.
2023-01-15 18:29:31,180:INFO:Set up folding strategy.
2023-01-15 18:29:31,180:INFO:Assigning column types.
2023-01-15 18:29:31,181:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-01-15 18:29:31,241:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-01-15 18:29:31,243:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-15 18:29:31,282:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:29:31,299:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:29:31,359:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-01-15 18:29:31,360:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-15 18:29:31,394:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:29:31,394:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:29:31,395:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-01-15 18:29:31,451:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-15 18:29:31,485:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:29:31,485:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:29:31,542:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-15 18:29:31,576:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:29:31,576:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:29:31,576:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-01-15 18:29:31,665:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:29:31,665:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:29:31,760:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:29:31,760:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:29:31,761:INFO:Preparing preprocessing pipeline...
2023-01-15 18:29:31,763:INFO:Set up simple imputation.
2023-01-15 18:29:31,768:INFO:Set up encoding of ordinal features.
2023-01-15 18:29:31,773:INFO:Set up encoding of categorical features.
2023-01-15 18:29:31,773:INFO:Set up imbalanced handling.
2023-01-15 18:29:31,773:INFO:Set up column transformation.
2023-01-15 18:29:31,773:INFO:Set up feature normalization.
2023-01-15 18:29:32,259:INFO:Finished creating preprocessing pipeline.
2023-01-15 18:29:32,303:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\alepi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'hypertension',
                                             'heart_disease',
                                             'avg_glucose_level', 'bmi'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorica...
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=None,
                                                                              sampling_strategy='auto')))),
                ('transformation',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=PowerTransformer(copy=True,
                                                                 method='yeo-johnson',
                                                                 standardize=False))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2023-01-15 18:29:32,303:INFO:Creating final display dataframe.
2023-01-15 18:29:35,094:INFO:Setup _display_container:                     Description            Value
0                    Session id               42
1                        Target           stroke
2                   Target type           Binary
3           Original data shape      (15304, 11)
4        Transformed data shape      (25834, 20)
5   Transformed train set shape      (22008, 20)
6    Transformed test set shape       (3826, 20)
7              Ordinal features                2
8              Numeric features                5
9          Categorical features                5
10                   Preprocess             True
11              Imputation type           simple
12           Numeric imputation             mean
13       Categorical imputation             mode
14     Maximum one-hot encoding               25
15              Encoding method             None
16                Fix imbalance             True
17         Fix imbalance method            SMOTE
18               Transformation             True
19        Transformation method      yeo-johnson
20                    Normalize             True
21             Normalize method           zscore
22               Fold Generator  StratifiedKFold
23                  Fold Number                4
24                     CPU Jobs               -1
25                      Use GPU            False
26               Log Experiment            False
27              Experiment Name           stroke
28                          USI             c20d
2023-01-15 18:29:35,185:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:29:35,185:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:29:35,277:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:29:35,278:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:29:35,278:INFO:setup() successfully completed in 4.18s...............
2023-01-15 18:29:35,332:INFO:Initializing compare_models()
2023-01-15 18:29:35,332:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023056512CE0>, include=None, fold=None, round=4, cross_validation=True, sort=AUC, n_select=3, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=False, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000023056512CE0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'AUC', 'n_select': 3, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': False, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-01-15 18:29:35,333:INFO:Checking exceptions
2023-01-15 18:29:35,341:INFO:Preparing display monitor
2023-01-15 18:29:35,347:INFO:Initializing Logistic Regression
2023-01-15 18:29:35,347:INFO:Total runtime is 0.0 minutes
2023-01-15 18:29:35,347:INFO:SubProcess create_model() called ==================================
2023-01-15 18:29:35,347:INFO:Initializing create_model()
2023-01-15 18:29:35,348:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023056512CE0>, estimator=lr, fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002303233E650>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:29:35,348:INFO:Checking exceptions
2023-01-15 18:29:35,348:INFO:Importing libraries
2023-01-15 18:29:35,348:INFO:Copying training dataset
2023-01-15 18:29:35,355:INFO:Defining folds
2023-01-15 18:29:35,356:INFO:Declaring metric variables
2023-01-15 18:29:35,356:INFO:Importing untrained model
2023-01-15 18:29:35,357:INFO:Logistic Regression Imported successfully
2023-01-15 18:29:35,357:INFO:Starting cross validation
2023-01-15 18:29:35,359:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:29:40,887:INFO:Calculating mean and std
2023-01-15 18:29:40,888:INFO:Creating metrics dataframe
2023-01-15 18:29:40,900:INFO:Uploading results into container
2023-01-15 18:29:40,902:INFO:Uploading model into container now
2023-01-15 18:29:40,902:INFO:_master_model_container: 1
2023-01-15 18:29:40,903:INFO:_display_container: 2
2023-01-15 18:29:40,903:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-01-15 18:29:40,903:INFO:create_model() successfully completed......................................
2023-01-15 18:29:41,066:INFO:SubProcess create_model() end ==================================
2023-01-15 18:29:41,066:INFO:Creating metrics dataframe
2023-01-15 18:29:41,071:INFO:Initializing K Neighbors Classifier
2023-01-15 18:29:41,071:INFO:Total runtime is 0.09539596239725749 minutes
2023-01-15 18:29:41,071:INFO:SubProcess create_model() called ==================================
2023-01-15 18:29:41,072:INFO:Initializing create_model()
2023-01-15 18:29:41,072:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023056512CE0>, estimator=knn, fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002303233E650>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:29:41,072:INFO:Checking exceptions
2023-01-15 18:29:41,072:INFO:Importing libraries
2023-01-15 18:29:41,073:INFO:Copying training dataset
2023-01-15 18:29:41,083:INFO:Defining folds
2023-01-15 18:29:41,083:INFO:Declaring metric variables
2023-01-15 18:29:41,083:INFO:Importing untrained model
2023-01-15 18:29:41,084:INFO:K Neighbors Classifier Imported successfully
2023-01-15 18:29:41,084:INFO:Starting cross validation
2023-01-15 18:29:41,086:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:29:45,412:INFO:Calculating mean and std
2023-01-15 18:29:45,413:INFO:Creating metrics dataframe
2023-01-15 18:29:45,422:INFO:Uploading results into container
2023-01-15 18:29:45,425:INFO:Uploading model into container now
2023-01-15 18:29:45,426:INFO:_master_model_container: 2
2023-01-15 18:29:45,427:INFO:_display_container: 2
2023-01-15 18:29:45,428:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-01-15 18:29:45,428:INFO:create_model() successfully completed......................................
2023-01-15 18:29:45,531:INFO:SubProcess create_model() end ==================================
2023-01-15 18:29:45,531:INFO:Creating metrics dataframe
2023-01-15 18:29:45,538:INFO:Initializing Naive Bayes
2023-01-15 18:29:45,538:INFO:Total runtime is 0.1698384165763855 minutes
2023-01-15 18:29:45,538:INFO:SubProcess create_model() called ==================================
2023-01-15 18:29:45,539:INFO:Initializing create_model()
2023-01-15 18:29:45,539:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023056512CE0>, estimator=nb, fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002303233E650>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:29:45,539:INFO:Checking exceptions
2023-01-15 18:29:45,539:INFO:Importing libraries
2023-01-15 18:29:45,539:INFO:Copying training dataset
2023-01-15 18:29:45,544:INFO:Defining folds
2023-01-15 18:29:45,544:INFO:Declaring metric variables
2023-01-15 18:29:45,545:INFO:Importing untrained model
2023-01-15 18:29:45,545:INFO:Naive Bayes Imported successfully
2023-01-15 18:29:45,545:INFO:Starting cross validation
2023-01-15 18:29:45,548:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:29:46,644:INFO:Calculating mean and std
2023-01-15 18:29:46,645:INFO:Creating metrics dataframe
2023-01-15 18:29:46,650:INFO:Uploading results into container
2023-01-15 18:29:46,650:INFO:Uploading model into container now
2023-01-15 18:29:46,651:INFO:_master_model_container: 3
2023-01-15 18:29:46,651:INFO:_display_container: 2
2023-01-15 18:29:46,651:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-01-15 18:29:46,651:INFO:create_model() successfully completed......................................
2023-01-15 18:29:46,726:INFO:SubProcess create_model() end ==================================
2023-01-15 18:29:46,726:INFO:Creating metrics dataframe
2023-01-15 18:29:46,733:INFO:Initializing Decision Tree Classifier
2023-01-15 18:29:46,733:INFO:Total runtime is 0.1897608717282613 minutes
2023-01-15 18:29:46,733:INFO:SubProcess create_model() called ==================================
2023-01-15 18:29:46,733:INFO:Initializing create_model()
2023-01-15 18:29:46,733:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023056512CE0>, estimator=dt, fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002303233E650>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:29:46,733:INFO:Checking exceptions
2023-01-15 18:29:46,734:INFO:Importing libraries
2023-01-15 18:29:46,734:INFO:Copying training dataset
2023-01-15 18:29:46,739:INFO:Defining folds
2023-01-15 18:29:46,739:INFO:Declaring metric variables
2023-01-15 18:29:46,739:INFO:Importing untrained model
2023-01-15 18:29:46,739:INFO:Decision Tree Classifier Imported successfully
2023-01-15 18:29:46,739:INFO:Starting cross validation
2023-01-15 18:29:46,744:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:29:47,922:INFO:Calculating mean and std
2023-01-15 18:29:47,923:INFO:Creating metrics dataframe
2023-01-15 18:29:47,928:INFO:Uploading results into container
2023-01-15 18:29:47,929:INFO:Uploading model into container now
2023-01-15 18:29:47,929:INFO:_master_model_container: 4
2023-01-15 18:29:47,929:INFO:_display_container: 2
2023-01-15 18:29:47,930:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=42, splitter='best')
2023-01-15 18:29:47,930:INFO:create_model() successfully completed......................................
2023-01-15 18:29:48,004:INFO:SubProcess create_model() end ==================================
2023-01-15 18:29:48,004:INFO:Creating metrics dataframe
2023-01-15 18:29:48,012:INFO:Initializing SVM - Linear Kernel
2023-01-15 18:29:48,012:INFO:Total runtime is 0.2110727071762085 minutes
2023-01-15 18:29:48,012:INFO:SubProcess create_model() called ==================================
2023-01-15 18:29:48,013:INFO:Initializing create_model()
2023-01-15 18:29:48,013:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023056512CE0>, estimator=svm, fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002303233E650>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:29:48,013:INFO:Checking exceptions
2023-01-15 18:29:48,013:INFO:Importing libraries
2023-01-15 18:29:48,013:INFO:Copying training dataset
2023-01-15 18:29:48,018:INFO:Defining folds
2023-01-15 18:29:48,018:INFO:Declaring metric variables
2023-01-15 18:29:48,018:INFO:Importing untrained model
2023-01-15 18:29:48,019:INFO:SVM - Linear Kernel Imported successfully
2023-01-15 18:29:48,020:INFO:Starting cross validation
2023-01-15 18:29:48,022:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:29:48,957:INFO:Calculating mean and std
2023-01-15 18:29:48,959:INFO:Creating metrics dataframe
2023-01-15 18:29:48,964:INFO:Uploading results into container
2023-01-15 18:29:48,965:INFO:Uploading model into container now
2023-01-15 18:29:48,965:INFO:_master_model_container: 5
2023-01-15 18:29:48,965:INFO:_display_container: 2
2023-01-15 18:29:48,966:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-01-15 18:29:48,966:INFO:create_model() successfully completed......................................
2023-01-15 18:29:49,040:INFO:SubProcess create_model() end ==================================
2023-01-15 18:29:49,040:INFO:Creating metrics dataframe
2023-01-15 18:29:49,046:INFO:Initializing Ridge Classifier
2023-01-15 18:29:49,046:INFO:Total runtime is 0.2283153812090556 minutes
2023-01-15 18:29:49,047:INFO:SubProcess create_model() called ==================================
2023-01-15 18:29:49,047:INFO:Initializing create_model()
2023-01-15 18:29:49,047:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023056512CE0>, estimator=ridge, fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002303233E650>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:29:49,047:INFO:Checking exceptions
2023-01-15 18:29:49,047:INFO:Importing libraries
2023-01-15 18:29:49,047:INFO:Copying training dataset
2023-01-15 18:29:49,052:INFO:Defining folds
2023-01-15 18:29:49,052:INFO:Declaring metric variables
2023-01-15 18:29:49,053:INFO:Importing untrained model
2023-01-15 18:29:49,053:INFO:Ridge Classifier Imported successfully
2023-01-15 18:29:49,054:INFO:Starting cross validation
2023-01-15 18:29:49,056:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:29:49,914:INFO:Calculating mean and std
2023-01-15 18:29:49,914:INFO:Creating metrics dataframe
2023-01-15 18:29:49,919:INFO:Uploading results into container
2023-01-15 18:29:49,920:INFO:Uploading model into container now
2023-01-15 18:29:49,920:INFO:_master_model_container: 6
2023-01-15 18:29:49,920:INFO:_display_container: 2
2023-01-15 18:29:49,921:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize='deprecated', positive=False,
                random_state=42, solver='auto', tol=0.001)
2023-01-15 18:29:49,921:INFO:create_model() successfully completed......................................
2023-01-15 18:29:49,996:INFO:SubProcess create_model() end ==================================
2023-01-15 18:29:49,996:INFO:Creating metrics dataframe
2023-01-15 18:29:50,003:INFO:Initializing Random Forest Classifier
2023-01-15 18:29:50,003:INFO:Total runtime is 0.24425374269485475 minutes
2023-01-15 18:29:50,003:INFO:SubProcess create_model() called ==================================
2023-01-15 18:29:50,003:INFO:Initializing create_model()
2023-01-15 18:29:50,003:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023056512CE0>, estimator=rf, fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002303233E650>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:29:50,004:INFO:Checking exceptions
2023-01-15 18:29:50,004:INFO:Importing libraries
2023-01-15 18:29:50,004:INFO:Copying training dataset
2023-01-15 18:29:50,008:INFO:Defining folds
2023-01-15 18:29:50,009:INFO:Declaring metric variables
2023-01-15 18:29:50,009:INFO:Importing untrained model
2023-01-15 18:29:50,010:INFO:Random Forest Classifier Imported successfully
2023-01-15 18:29:50,011:INFO:Starting cross validation
2023-01-15 18:29:50,013:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:29:53,036:INFO:Calculating mean and std
2023-01-15 18:29:53,037:INFO:Creating metrics dataframe
2023-01-15 18:29:53,037:INFO:Uploading results into container
2023-01-15 18:29:53,037:INFO:Uploading model into container now
2023-01-15 18:29:53,042:INFO:_master_model_container: 7
2023-01-15 18:29:53,042:INFO:_display_container: 2
2023-01-15 18:29:53,043:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=42, verbose=0, warm_start=False)
2023-01-15 18:29:53,043:INFO:create_model() successfully completed......................................
2023-01-15 18:29:53,115:INFO:SubProcess create_model() end ==================================
2023-01-15 18:29:53,115:INFO:Creating metrics dataframe
2023-01-15 18:29:53,120:INFO:Initializing Quadratic Discriminant Analysis
2023-01-15 18:29:53,120:INFO:Total runtime is 0.2962185660998027 minutes
2023-01-15 18:29:53,120:INFO:SubProcess create_model() called ==================================
2023-01-15 18:29:53,120:INFO:Initializing create_model()
2023-01-15 18:29:53,120:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023056512CE0>, estimator=qda, fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002303233E650>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:29:53,120:INFO:Checking exceptions
2023-01-15 18:29:53,120:INFO:Importing libraries
2023-01-15 18:29:53,120:INFO:Copying training dataset
2023-01-15 18:29:53,129:INFO:Defining folds
2023-01-15 18:29:53,129:INFO:Declaring metric variables
2023-01-15 18:29:53,129:INFO:Importing untrained model
2023-01-15 18:29:53,130:INFO:Quadratic Discriminant Analysis Imported successfully
2023-01-15 18:29:53,130:INFO:Starting cross validation
2023-01-15 18:29:53,133:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:29:53,714:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-01-15 18:29:53,718:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-01-15 18:29:53,747:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-01-15 18:29:53,752:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-01-15 18:29:54,210:INFO:Calculating mean and std
2023-01-15 18:29:54,210:INFO:Creating metrics dataframe
2023-01-15 18:29:54,216:INFO:Uploading results into container
2023-01-15 18:29:54,216:INFO:Uploading model into container now
2023-01-15 18:29:54,217:INFO:_master_model_container: 8
2023-01-15 18:29:54,217:INFO:_display_container: 2
2023-01-15 18:29:54,217:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-01-15 18:29:54,217:INFO:create_model() successfully completed......................................
2023-01-15 18:29:54,294:INFO:SubProcess create_model() end ==================================
2023-01-15 18:29:54,294:INFO:Creating metrics dataframe
2023-01-15 18:29:54,301:INFO:Initializing Ada Boost Classifier
2023-01-15 18:29:54,301:INFO:Total runtime is 0.31588949362436936 minutes
2023-01-15 18:29:54,301:INFO:SubProcess create_model() called ==================================
2023-01-15 18:29:54,302:INFO:Initializing create_model()
2023-01-15 18:29:54,302:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023056512CE0>, estimator=ada, fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002303233E650>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:29:54,302:INFO:Checking exceptions
2023-01-15 18:29:54,302:INFO:Importing libraries
2023-01-15 18:29:54,302:INFO:Copying training dataset
2023-01-15 18:29:54,307:INFO:Defining folds
2023-01-15 18:29:54,307:INFO:Declaring metric variables
2023-01-15 18:29:54,308:INFO:Importing untrained model
2023-01-15 18:29:54,308:INFO:Ada Boost Classifier Imported successfully
2023-01-15 18:29:54,308:INFO:Starting cross validation
2023-01-15 18:29:54,312:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:29:57,173:INFO:Calculating mean and std
2023-01-15 18:29:57,174:INFO:Creating metrics dataframe
2023-01-15 18:29:57,184:INFO:Uploading results into container
2023-01-15 18:29:57,186:INFO:Uploading model into container now
2023-01-15 18:29:57,186:INFO:_master_model_container: 9
2023-01-15 18:29:57,186:INFO:_display_container: 2
2023-01-15 18:29:57,187:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2023-01-15 18:29:57,187:INFO:create_model() successfully completed......................................
2023-01-15 18:29:57,307:INFO:SubProcess create_model() end ==================================
2023-01-15 18:29:57,307:INFO:Creating metrics dataframe
2023-01-15 18:29:57,320:INFO:Initializing Gradient Boosting Classifier
2023-01-15 18:29:57,320:INFO:Total runtime is 0.3662060976028443 minutes
2023-01-15 18:29:57,320:INFO:SubProcess create_model() called ==================================
2023-01-15 18:29:57,320:INFO:Initializing create_model()
2023-01-15 18:29:57,320:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023056512CE0>, estimator=gbc, fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002303233E650>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:29:57,321:INFO:Checking exceptions
2023-01-15 18:29:57,321:INFO:Importing libraries
2023-01-15 18:29:57,321:INFO:Copying training dataset
2023-01-15 18:29:57,326:INFO:Defining folds
2023-01-15 18:29:57,327:INFO:Declaring metric variables
2023-01-15 18:29:57,327:INFO:Importing untrained model
2023-01-15 18:29:57,329:INFO:Gradient Boosting Classifier Imported successfully
2023-01-15 18:29:57,331:INFO:Starting cross validation
2023-01-15 18:29:57,336:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:30:04,119:INFO:Calculating mean and std
2023-01-15 18:30:04,120:INFO:Creating metrics dataframe
2023-01-15 18:30:04,125:INFO:Uploading results into container
2023-01-15 18:30:04,125:INFO:Uploading model into container now
2023-01-15 18:30:04,126:INFO:_master_model_container: 10
2023-01-15 18:30:04,126:INFO:_display_container: 2
2023-01-15 18:30:04,126:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-01-15 18:30:04,126:INFO:create_model() successfully completed......................................
2023-01-15 18:30:04,207:INFO:SubProcess create_model() end ==================================
2023-01-15 18:30:04,207:INFO:Creating metrics dataframe
2023-01-15 18:30:04,215:INFO:Initializing Linear Discriminant Analysis
2023-01-15 18:30:04,215:INFO:Total runtime is 0.48112911780675255 minutes
2023-01-15 18:30:04,216:INFO:SubProcess create_model() called ==================================
2023-01-15 18:30:04,216:INFO:Initializing create_model()
2023-01-15 18:30:04,216:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023056512CE0>, estimator=lda, fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002303233E650>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:30:04,216:INFO:Checking exceptions
2023-01-15 18:30:04,216:INFO:Importing libraries
2023-01-15 18:30:04,216:INFO:Copying training dataset
2023-01-15 18:30:04,221:INFO:Defining folds
2023-01-15 18:30:04,221:INFO:Declaring metric variables
2023-01-15 18:30:04,222:INFO:Importing untrained model
2023-01-15 18:30:04,222:INFO:Linear Discriminant Analysis Imported successfully
2023-01-15 18:30:04,222:INFO:Starting cross validation
2023-01-15 18:30:04,225:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:30:05,467:INFO:Calculating mean and std
2023-01-15 18:30:05,468:INFO:Creating metrics dataframe
2023-01-15 18:30:05,477:INFO:Uploading results into container
2023-01-15 18:30:05,478:INFO:Uploading model into container now
2023-01-15 18:30:05,478:INFO:_master_model_container: 11
2023-01-15 18:30:05,479:INFO:_display_container: 2
2023-01-15 18:30:05,479:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-01-15 18:30:05,479:INFO:create_model() successfully completed......................................
2023-01-15 18:30:05,625:INFO:SubProcess create_model() end ==================================
2023-01-15 18:30:05,626:INFO:Creating metrics dataframe
2023-01-15 18:30:05,640:INFO:Initializing Extra Trees Classifier
2023-01-15 18:30:05,640:INFO:Total runtime is 0.5048829873402914 minutes
2023-01-15 18:30:05,640:INFO:SubProcess create_model() called ==================================
2023-01-15 18:30:05,640:INFO:Initializing create_model()
2023-01-15 18:30:05,640:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023056512CE0>, estimator=et, fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002303233E650>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:30:05,641:INFO:Checking exceptions
2023-01-15 18:30:05,641:INFO:Importing libraries
2023-01-15 18:30:05,641:INFO:Copying training dataset
2023-01-15 18:30:05,651:INFO:Defining folds
2023-01-15 18:30:05,651:INFO:Declaring metric variables
2023-01-15 18:30:05,652:INFO:Importing untrained model
2023-01-15 18:30:05,653:INFO:Extra Trees Classifier Imported successfully
2023-01-15 18:30:05,654:INFO:Starting cross validation
2023-01-15 18:30:05,657:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:30:08,766:INFO:Calculating mean and std
2023-01-15 18:30:08,766:INFO:Creating metrics dataframe
2023-01-15 18:30:08,771:INFO:Uploading results into container
2023-01-15 18:30:08,772:INFO:Uploading model into container now
2023-01-15 18:30:08,772:INFO:_master_model_container: 12
2023-01-15 18:30:08,773:INFO:_display_container: 2
2023-01-15 18:30:08,773:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=42, verbose=0, warm_start=False)
2023-01-15 18:30:08,773:INFO:create_model() successfully completed......................................
2023-01-15 18:30:08,855:INFO:SubProcess create_model() end ==================================
2023-01-15 18:30:08,855:INFO:Creating metrics dataframe
2023-01-15 18:30:08,861:INFO:Initializing Light Gradient Boosting Machine
2023-01-15 18:30:08,861:INFO:Total runtime is 0.5585654020309448 minutes
2023-01-15 18:30:08,863:INFO:SubProcess create_model() called ==================================
2023-01-15 18:30:08,863:INFO:Initializing create_model()
2023-01-15 18:30:08,863:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023056512CE0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002303233E650>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:30:08,864:INFO:Checking exceptions
2023-01-15 18:30:08,864:INFO:Importing libraries
2023-01-15 18:30:08,864:INFO:Copying training dataset
2023-01-15 18:30:08,870:INFO:Defining folds
2023-01-15 18:30:08,870:INFO:Declaring metric variables
2023-01-15 18:30:08,870:INFO:Importing untrained model
2023-01-15 18:30:08,871:INFO:Light Gradient Boosting Machine Imported successfully
2023-01-15 18:30:08,871:INFO:Starting cross validation
2023-01-15 18:30:08,874:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:30:10,589:INFO:Calculating mean and std
2023-01-15 18:30:10,590:INFO:Creating metrics dataframe
2023-01-15 18:30:10,596:INFO:Uploading results into container
2023-01-15 18:30:10,596:INFO:Uploading model into container now
2023-01-15 18:30:10,596:INFO:_master_model_container: 13
2023-01-15 18:30:10,597:INFO:_display_container: 2
2023-01-15 18:30:10,597:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-01-15 18:30:10,598:INFO:create_model() successfully completed......................................
2023-01-15 18:30:10,675:INFO:SubProcess create_model() end ==================================
2023-01-15 18:30:10,675:INFO:Creating metrics dataframe
2023-01-15 18:30:10,682:INFO:Initializing Dummy Classifier
2023-01-15 18:30:10,682:INFO:Total runtime is 0.5889191667238871 minutes
2023-01-15 18:30:10,682:INFO:SubProcess create_model() called ==================================
2023-01-15 18:30:10,682:INFO:Initializing create_model()
2023-01-15 18:30:10,683:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023056512CE0>, estimator=dummy, fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002303233E650>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:30:10,683:INFO:Checking exceptions
2023-01-15 18:30:10,683:INFO:Importing libraries
2023-01-15 18:30:10,683:INFO:Copying training dataset
2023-01-15 18:30:10,688:INFO:Defining folds
2023-01-15 18:30:10,688:INFO:Declaring metric variables
2023-01-15 18:30:10,688:INFO:Importing untrained model
2023-01-15 18:30:10,690:INFO:Dummy Classifier Imported successfully
2023-01-15 18:30:10,690:INFO:Starting cross validation
2023-01-15 18:30:10,692:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:30:11,998:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-15 18:30:12,021:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-15 18:30:12,034:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-15 18:30:12,087:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-15 18:30:12,095:INFO:Calculating mean and std
2023-01-15 18:30:12,096:INFO:Creating metrics dataframe
2023-01-15 18:30:12,105:INFO:Uploading results into container
2023-01-15 18:30:12,106:INFO:Uploading model into container now
2023-01-15 18:30:12,107:INFO:_master_model_container: 14
2023-01-15 18:30:12,107:INFO:_display_container: 2
2023-01-15 18:30:12,107:INFO:DummyClassifier(constant=None, random_state=42, strategy='prior')
2023-01-15 18:30:12,107:INFO:create_model() successfully completed......................................
2023-01-15 18:30:12,222:INFO:SubProcess create_model() end ==================================
2023-01-15 18:30:12,222:INFO:Creating metrics dataframe
2023-01-15 18:30:12,233:INFO:Initializing create_model()
2023-01-15 18:30:12,234:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023056512CE0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:30:12,234:INFO:Checking exceptions
2023-01-15 18:30:12,239:INFO:Importing libraries
2023-01-15 18:30:12,239:INFO:Copying training dataset
2023-01-15 18:30:12,245:INFO:Defining folds
2023-01-15 18:30:12,245:INFO:Declaring metric variables
2023-01-15 18:30:12,245:INFO:Importing untrained model
2023-01-15 18:30:12,245:INFO:Declaring custom model
2023-01-15 18:30:12,246:INFO:Logistic Regression Imported successfully
2023-01-15 18:30:12,250:INFO:Cross validation set to False
2023-01-15 18:30:12,251:INFO:Fitting Model
2023-01-15 18:30:13,121:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-01-15 18:30:13,121:INFO:create_model() successfully completed......................................
2023-01-15 18:30:13,206:INFO:Initializing create_model()
2023-01-15 18:30:13,206:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023056512CE0>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:30:13,206:INFO:Checking exceptions
2023-01-15 18:30:13,208:INFO:Importing libraries
2023-01-15 18:30:13,208:INFO:Copying training dataset
2023-01-15 18:30:13,213:INFO:Defining folds
2023-01-15 18:30:13,213:INFO:Declaring metric variables
2023-01-15 18:30:13,213:INFO:Importing untrained model
2023-01-15 18:30:13,213:INFO:Declaring custom model
2023-01-15 18:30:13,214:INFO:Linear Discriminant Analysis Imported successfully
2023-01-15 18:30:13,217:INFO:Cross validation set to False
2023-01-15 18:30:13,217:INFO:Fitting Model
2023-01-15 18:30:13,807:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-01-15 18:30:13,807:INFO:create_model() successfully completed......................................
2023-01-15 18:30:13,905:INFO:Initializing create_model()
2023-01-15 18:30:13,906:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023056512CE0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:30:13,906:INFO:Checking exceptions
2023-01-15 18:30:13,907:INFO:Importing libraries
2023-01-15 18:30:13,908:INFO:Copying training dataset
2023-01-15 18:30:13,914:INFO:Defining folds
2023-01-15 18:30:13,914:INFO:Declaring metric variables
2023-01-15 18:30:13,914:INFO:Importing untrained model
2023-01-15 18:30:13,914:INFO:Declaring custom model
2023-01-15 18:30:13,916:INFO:Light Gradient Boosting Machine Imported successfully
2023-01-15 18:30:13,920:INFO:Cross validation set to False
2023-01-15 18:30:13,920:INFO:Fitting Model
2023-01-15 18:30:14,926:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-01-15 18:30:14,926:INFO:create_model() successfully completed......................................
2023-01-15 18:30:15,053:INFO:_master_model_container: 14
2023-01-15 18:30:15,053:INFO:_display_container: 2
2023-01-15 18:30:15,055:INFO:[LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)]
2023-01-15 18:30:15,055:INFO:compare_models() successfully completed......................................
2023-01-15 18:30:53,211:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-01-15 18:30:53,211:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-01-15 18:30:53,211:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-01-15 18:30:53,211:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-01-15 18:30:53,769:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-01-15 18:30:54,220:INFO:PyCaret ClassificationExperiment
2023-01-15 18:30:54,220:INFO:Logging name: stroke
2023-01-15 18:30:54,220:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-01-15 18:30:54,220:INFO:version 3.0.0.rc8
2023-01-15 18:30:54,220:INFO:Initializing setup()
2023-01-15 18:30:54,220:INFO:self.USI: 8372
2023-01-15 18:30:54,220:INFO:self._variable_keys: {'USI', 'is_multiclass', 'y_train', 'exp_name_log', 'idx', 'gpu_n_jobs_param', 'target_param', '_available_plots', 'n_jobs_param', 'y_test', 'exp_id', 'fold_groups_param', 'X', 'fold_generator', 'memory', '_ml_usecase', 'seed', 'y', 'data', 'X_test', 'html_param', 'fold_shuffle_param', 'log_plots_param', 'X_train', 'fix_imbalance', 'pipeline', 'logging_param', 'gpu_param'}
2023-01-15 18:30:54,221:INFO:Checking environment
2023-01-15 18:30:54,221:INFO:python_version: 3.10.5
2023-01-15 18:30:54,221:INFO:python_build: ('tags/v3.10.5:f377153', 'Jun  6 2022 16:14:13')
2023-01-15 18:30:54,221:INFO:machine: AMD64
2023-01-15 18:30:54,221:INFO:platform: Windows-10-10.0.19045-SP0
2023-01-15 18:30:54,224:INFO:Memory: svmem(total=8494747648, available=2621218816, percent=69.1, used=5873528832, free=2621218816)
2023-01-15 18:30:54,224:INFO:Physical Core: 4
2023-01-15 18:30:54,224:INFO:Logical Core: 8
2023-01-15 18:30:54,224:INFO:Checking libraries
2023-01-15 18:30:54,224:INFO:System:
2023-01-15 18:30:54,224:INFO:    python: 3.10.5 (tags/v3.10.5:f377153, Jun  6 2022, 16:14:13) [MSC v.1929 64 bit (AMD64)]
2023-01-15 18:30:54,224:INFO:executable: c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\Scripts\python.exe
2023-01-15 18:30:54,224:INFO:   machine: Windows-10-10.0.19045-SP0
2023-01-15 18:30:54,224:INFO:PyCaret required dependencies:
2023-01-15 18:30:54,224:INFO:                 pip: 22.3.1
2023-01-15 18:30:54,224:INFO:          setuptools: 65.7.0
2023-01-15 18:30:54,224:INFO:             pycaret: 3.0.0rc8
2023-01-15 18:30:54,224:INFO:             IPython: 8.8.0
2023-01-15 18:30:54,224:INFO:          ipywidgets: 8.0.4
2023-01-15 18:30:54,227:INFO:                tqdm: 4.64.1
2023-01-15 18:30:54,227:INFO:               numpy: 1.23.5
2023-01-15 18:30:54,227:INFO:              pandas: 1.5.2
2023-01-15 18:30:54,227:INFO:              jinja2: 3.1.2
2023-01-15 18:30:54,227:INFO:               scipy: 1.10.0
2023-01-15 18:30:54,227:INFO:              joblib: 1.2.0
2023-01-15 18:30:54,227:INFO:             sklearn: 1.1.3
2023-01-15 18:30:54,227:INFO:                pyod: 1.0.7
2023-01-15 18:30:54,227:INFO:            imblearn: 0.10.1
2023-01-15 18:30:54,227:INFO:   category_encoders: 2.6.0
2023-01-15 18:30:54,228:INFO:            lightgbm: 3.3.4
2023-01-15 18:30:54,228:INFO:               numba: 0.56.4
2023-01-15 18:30:54,228:INFO:            requests: 2.28.2
2023-01-15 18:30:54,228:INFO:          matplotlib: 3.6.3
2023-01-15 18:30:54,229:INFO:          scikitplot: 0.3.7
2023-01-15 18:30:54,229:INFO:         yellowbrick: 1.5
2023-01-15 18:30:54,229:INFO:              plotly: 5.12.0
2023-01-15 18:30:54,229:INFO:             kaleido: 0.2.1
2023-01-15 18:30:54,229:INFO:         statsmodels: 0.13.5
2023-01-15 18:30:54,230:INFO:              sktime: 0.15.1
2023-01-15 18:30:54,230:INFO:               tbats: 1.1.2
2023-01-15 18:30:54,230:INFO:            pmdarima: 2.0.2
2023-01-15 18:30:54,230:INFO:              psutil: 5.9.4
2023-01-15 18:30:54,230:INFO:PyCaret optional dependencies:
2023-01-15 18:30:54,259:INFO:                shap: Not installed
2023-01-15 18:30:54,260:INFO:           interpret: Not installed
2023-01-15 18:30:54,260:INFO:                umap: Not installed
2023-01-15 18:30:54,260:INFO:    pandas_profiling: Not installed
2023-01-15 18:30:54,261:INFO:  explainerdashboard: Not installed
2023-01-15 18:30:54,261:INFO:             autoviz: Not installed
2023-01-15 18:30:54,261:INFO:           fairlearn: Not installed
2023-01-15 18:30:54,261:INFO:             xgboost: Not installed
2023-01-15 18:30:54,261:INFO:            catboost: Not installed
2023-01-15 18:30:54,261:INFO:              kmodes: Not installed
2023-01-15 18:30:54,261:INFO:             mlxtend: Not installed
2023-01-15 18:30:54,261:INFO:       statsforecast: Not installed
2023-01-15 18:30:54,262:INFO:        tune_sklearn: Not installed
2023-01-15 18:30:54,262:INFO:                 ray: Not installed
2023-01-15 18:30:54,262:INFO:            hyperopt: Not installed
2023-01-15 18:30:54,262:INFO:              optuna: Not installed
2023-01-15 18:30:54,262:INFO:               skopt: Not installed
2023-01-15 18:30:54,262:INFO:              mlflow: Not installed
2023-01-15 18:30:54,262:INFO:              gradio: Not installed
2023-01-15 18:30:54,262:INFO:             fastapi: Not installed
2023-01-15 18:30:54,262:INFO:             uvicorn: Not installed
2023-01-15 18:30:54,262:INFO:              m2cgen: Not installed
2023-01-15 18:30:54,262:INFO:           evidently: Not installed
2023-01-15 18:30:54,262:INFO:                nltk: Not installed
2023-01-15 18:30:54,262:INFO:            pyLDAvis: Not installed
2023-01-15 18:30:54,262:INFO:              gensim: Not installed
2023-01-15 18:30:54,262:INFO:               spacy: Not installed
2023-01-15 18:30:54,263:INFO:           wordcloud: Not installed
2023-01-15 18:30:54,263:INFO:            textblob: Not installed
2023-01-15 18:30:54,263:INFO:               fugue: Not installed
2023-01-15 18:30:54,263:INFO:           streamlit: Not installed
2023-01-15 18:30:54,263:INFO:             prophet: Not installed
2023-01-15 18:30:54,263:INFO:None
2023-01-15 18:30:54,263:INFO:Set up data.
2023-01-15 18:30:54,278:INFO:Set up train/test split.
2023-01-15 18:30:54,288:INFO:Set up index.
2023-01-15 18:30:54,289:INFO:Set up folding strategy.
2023-01-15 18:30:54,289:INFO:Assigning column types.
2023-01-15 18:30:54,293:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-01-15 18:30:54,350:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-01-15 18:30:54,352:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-15 18:30:54,392:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:30:54,409:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:30:54,468:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-01-15 18:30:54,469:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-15 18:30:54,504:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:30:54,505:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:30:54,505:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-01-15 18:30:54,562:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-15 18:30:54,597:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:30:54,598:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:30:54,655:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-15 18:30:54,689:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:30:54,691:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:30:54,691:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-01-15 18:30:54,783:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:30:54,784:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:30:54,878:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:30:54,878:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:30:54,879:INFO:Preparing preprocessing pipeline...
2023-01-15 18:30:54,881:INFO:Set up simple imputation.
2023-01-15 18:30:54,886:INFO:Set up encoding of ordinal features.
2023-01-15 18:30:54,890:INFO:Set up encoding of categorical features.
2023-01-15 18:30:54,890:INFO:Set up imbalanced handling.
2023-01-15 18:30:54,890:INFO:Set up column transformation.
2023-01-15 18:30:54,890:INFO:Set up feature normalization.
2023-01-15 18:30:55,374:INFO:Finished creating preprocessing pipeline.
2023-01-15 18:30:55,413:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\alepi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'hypertension',
                                             'heart_disease',
                                             'avg_glucose_level', 'bmi'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorica...
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=None,
                                                                              sampling_strategy='auto')))),
                ('transformation',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=PowerTransformer(copy=True,
                                                                 method='yeo-johnson',
                                                                 standardize=False))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2023-01-15 18:30:55,413:INFO:Creating final display dataframe.
2023-01-15 18:30:57,853:INFO:Setup _display_container:                     Description            Value
0                    Session id               42
1                        Target           stroke
2                   Target type           Binary
3           Original data shape      (15304, 11)
4        Transformed data shape      (25834, 20)
5   Transformed train set shape      (22008, 20)
6    Transformed test set shape       (3826, 20)
7              Ordinal features                2
8              Numeric features                5
9          Categorical features                5
10                   Preprocess             True
11              Imputation type           simple
12           Numeric imputation             mean
13       Categorical imputation             mode
14     Maximum one-hot encoding               25
15              Encoding method             None
16                Fix imbalance             True
17         Fix imbalance method            SMOTE
18               Transformation             True
19        Transformation method      yeo-johnson
20                    Normalize             True
21             Normalize method           zscore
22               Fold Generator  StratifiedKFold
23                  Fold Number                4
24                     CPU Jobs               -1
25                      Use GPU            False
26               Log Experiment            False
27              Experiment Name           stroke
28                          USI             8372
2023-01-15 18:30:57,947:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:30:57,947:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:30:58,039:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:30:58,039:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:30:58,040:INFO:setup() successfully completed in 3.82s...............
2023-01-15 18:30:58,131:INFO:Initializing compare_models()
2023-01-15 18:30:58,132:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DB89FD2CE0>, include=None, fold=None, round=4, cross_validation=True, sort=AUC, n_select=3, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=False, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002DB89FD2CE0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'AUC', 'n_select': 3, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': False, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-01-15 18:30:58,132:INFO:Checking exceptions
2023-01-15 18:30:58,140:INFO:Preparing display monitor
2023-01-15 18:30:58,146:INFO:Initializing Logistic Regression
2023-01-15 18:30:58,146:INFO:Total runtime is 0.0 minutes
2023-01-15 18:30:58,148:INFO:SubProcess create_model() called ==================================
2023-01-15 18:30:58,149:INFO:Initializing create_model()
2023-01-15 18:30:58,149:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DB89FD2CE0>, estimator=lr, fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DB89FD3280>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:30:58,150:INFO:Checking exceptions
2023-01-15 18:30:58,150:INFO:Importing libraries
2023-01-15 18:30:58,150:INFO:Copying training dataset
2023-01-15 18:30:58,156:INFO:Defining folds
2023-01-15 18:30:58,156:INFO:Declaring metric variables
2023-01-15 18:30:58,156:INFO:Importing untrained model
2023-01-15 18:30:58,157:INFO:Logistic Regression Imported successfully
2023-01-15 18:30:58,157:INFO:Starting cross validation
2023-01-15 18:30:58,159:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:31:03,377:INFO:Calculating mean and std
2023-01-15 18:31:03,377:INFO:Creating metrics dataframe
2023-01-15 18:31:03,385:INFO:Uploading results into container
2023-01-15 18:31:03,386:INFO:Uploading model into container now
2023-01-15 18:31:03,387:INFO:_master_model_container: 1
2023-01-15 18:31:03,387:INFO:_display_container: 2
2023-01-15 18:31:03,388:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-01-15 18:31:03,388:INFO:create_model() successfully completed......................................
2023-01-15 18:31:03,482:INFO:SubProcess create_model() end ==================================
2023-01-15 18:31:03,482:INFO:Creating metrics dataframe
2023-01-15 18:31:03,487:INFO:Initializing K Neighbors Classifier
2023-01-15 18:31:03,488:INFO:Total runtime is 0.08903471231460572 minutes
2023-01-15 18:31:03,488:INFO:SubProcess create_model() called ==================================
2023-01-15 18:31:03,488:INFO:Initializing create_model()
2023-01-15 18:31:03,488:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DB89FD2CE0>, estimator=knn, fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DB89FD3280>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:31:03,488:INFO:Checking exceptions
2023-01-15 18:31:03,488:INFO:Importing libraries
2023-01-15 18:31:03,488:INFO:Copying training dataset
2023-01-15 18:31:03,492:INFO:Defining folds
2023-01-15 18:31:03,493:INFO:Declaring metric variables
2023-01-15 18:31:03,493:INFO:Importing untrained model
2023-01-15 18:31:03,493:INFO:K Neighbors Classifier Imported successfully
2023-01-15 18:31:03,493:INFO:Starting cross validation
2023-01-15 18:31:03,496:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:31:07,477:INFO:Calculating mean and std
2023-01-15 18:31:07,478:INFO:Creating metrics dataframe
2023-01-15 18:31:07,485:INFO:Uploading results into container
2023-01-15 18:31:07,486:INFO:Uploading model into container now
2023-01-15 18:31:07,487:INFO:_master_model_container: 2
2023-01-15 18:31:07,487:INFO:_display_container: 2
2023-01-15 18:31:07,488:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-01-15 18:31:07,488:INFO:create_model() successfully completed......................................
2023-01-15 18:31:07,587:INFO:SubProcess create_model() end ==================================
2023-01-15 18:31:07,587:INFO:Creating metrics dataframe
2023-01-15 18:31:07,593:INFO:Initializing Naive Bayes
2023-01-15 18:31:07,593:INFO:Total runtime is 0.1574540416399638 minutes
2023-01-15 18:31:07,594:INFO:SubProcess create_model() called ==================================
2023-01-15 18:31:07,594:INFO:Initializing create_model()
2023-01-15 18:31:07,594:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DB89FD2CE0>, estimator=nb, fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DB89FD3280>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:31:07,594:INFO:Checking exceptions
2023-01-15 18:31:07,594:INFO:Importing libraries
2023-01-15 18:31:07,594:INFO:Copying training dataset
2023-01-15 18:31:07,600:INFO:Defining folds
2023-01-15 18:31:07,600:INFO:Declaring metric variables
2023-01-15 18:31:07,601:INFO:Importing untrained model
2023-01-15 18:31:07,601:INFO:Naive Bayes Imported successfully
2023-01-15 18:31:07,601:INFO:Starting cross validation
2023-01-15 18:31:07,604:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:31:08,673:INFO:Calculating mean and std
2023-01-15 18:31:08,674:INFO:Creating metrics dataframe
2023-01-15 18:31:08,678:INFO:Uploading results into container
2023-01-15 18:31:08,680:INFO:Uploading model into container now
2023-01-15 18:31:08,682:INFO:_master_model_container: 3
2023-01-15 18:31:08,682:INFO:_display_container: 2
2023-01-15 18:31:08,682:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-01-15 18:31:08,682:INFO:create_model() successfully completed......................................
2023-01-15 18:31:08,756:INFO:SubProcess create_model() end ==================================
2023-01-15 18:31:08,756:INFO:Creating metrics dataframe
2023-01-15 18:31:08,764:INFO:Initializing Decision Tree Classifier
2023-01-15 18:31:08,764:INFO:Total runtime is 0.17697358131408691 minutes
2023-01-15 18:31:08,764:INFO:SubProcess create_model() called ==================================
2023-01-15 18:31:08,764:INFO:Initializing create_model()
2023-01-15 18:31:08,765:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DB89FD2CE0>, estimator=dt, fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DB89FD3280>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:31:08,765:INFO:Checking exceptions
2023-01-15 18:31:08,765:INFO:Importing libraries
2023-01-15 18:31:08,765:INFO:Copying training dataset
2023-01-15 18:31:08,770:INFO:Defining folds
2023-01-15 18:31:08,770:INFO:Declaring metric variables
2023-01-15 18:31:08,770:INFO:Importing untrained model
2023-01-15 18:31:08,771:INFO:Decision Tree Classifier Imported successfully
2023-01-15 18:31:08,771:INFO:Starting cross validation
2023-01-15 18:31:08,774:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:31:09,948:INFO:Calculating mean and std
2023-01-15 18:31:09,949:INFO:Creating metrics dataframe
2023-01-15 18:31:09,954:INFO:Uploading results into container
2023-01-15 18:31:09,955:INFO:Uploading model into container now
2023-01-15 18:31:09,955:INFO:_master_model_container: 4
2023-01-15 18:31:09,955:INFO:_display_container: 2
2023-01-15 18:31:09,956:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=42, splitter='best')
2023-01-15 18:31:09,956:INFO:create_model() successfully completed......................................
2023-01-15 18:31:10,033:INFO:SubProcess create_model() end ==================================
2023-01-15 18:31:10,033:INFO:Creating metrics dataframe
2023-01-15 18:31:10,040:INFO:Initializing SVM - Linear Kernel
2023-01-15 18:31:10,040:INFO:Total runtime is 0.19824218352635703 minutes
2023-01-15 18:31:10,040:INFO:SubProcess create_model() called ==================================
2023-01-15 18:31:10,040:INFO:Initializing create_model()
2023-01-15 18:31:10,040:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DB89FD2CE0>, estimator=svm, fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DB89FD3280>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:31:10,040:INFO:Checking exceptions
2023-01-15 18:31:10,041:INFO:Importing libraries
2023-01-15 18:31:10,041:INFO:Copying training dataset
2023-01-15 18:31:10,046:INFO:Defining folds
2023-01-15 18:31:10,046:INFO:Declaring metric variables
2023-01-15 18:31:10,046:INFO:Importing untrained model
2023-01-15 18:31:10,049:INFO:SVM - Linear Kernel Imported successfully
2023-01-15 18:31:10,049:INFO:Starting cross validation
2023-01-15 18:31:10,052:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:31:10,987:INFO:Calculating mean and std
2023-01-15 18:31:10,987:INFO:Creating metrics dataframe
2023-01-15 18:31:10,992:INFO:Uploading results into container
2023-01-15 18:31:10,993:INFO:Uploading model into container now
2023-01-15 18:31:10,993:INFO:_master_model_container: 5
2023-01-15 18:31:10,993:INFO:_display_container: 2
2023-01-15 18:31:10,994:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-01-15 18:31:10,994:INFO:create_model() successfully completed......................................
2023-01-15 18:31:11,069:INFO:SubProcess create_model() end ==================================
2023-01-15 18:31:11,069:INFO:Creating metrics dataframe
2023-01-15 18:31:11,076:INFO:Initializing Ridge Classifier
2023-01-15 18:31:11,076:INFO:Total runtime is 0.21550935109456382 minutes
2023-01-15 18:31:11,077:INFO:SubProcess create_model() called ==================================
2023-01-15 18:31:11,077:INFO:Initializing create_model()
2023-01-15 18:31:11,077:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DB89FD2CE0>, estimator=ridge, fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DB89FD3280>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:31:11,077:INFO:Checking exceptions
2023-01-15 18:31:11,077:INFO:Importing libraries
2023-01-15 18:31:11,077:INFO:Copying training dataset
2023-01-15 18:31:11,085:INFO:Defining folds
2023-01-15 18:31:11,085:INFO:Declaring metric variables
2023-01-15 18:31:11,085:INFO:Importing untrained model
2023-01-15 18:31:11,086:INFO:Ridge Classifier Imported successfully
2023-01-15 18:31:11,086:INFO:Starting cross validation
2023-01-15 18:31:11,088:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:31:11,959:INFO:Calculating mean and std
2023-01-15 18:31:11,960:INFO:Creating metrics dataframe
2023-01-15 18:31:11,965:INFO:Uploading results into container
2023-01-15 18:31:11,967:INFO:Uploading model into container now
2023-01-15 18:31:11,967:INFO:_master_model_container: 6
2023-01-15 18:31:11,967:INFO:_display_container: 2
2023-01-15 18:31:11,968:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize='deprecated', positive=False,
                random_state=42, solver='auto', tol=0.001)
2023-01-15 18:31:11,968:INFO:create_model() successfully completed......................................
2023-01-15 18:31:12,041:INFO:SubProcess create_model() end ==================================
2023-01-15 18:31:12,041:INFO:Creating metrics dataframe
2023-01-15 18:31:12,046:INFO:Initializing Random Forest Classifier
2023-01-15 18:31:12,046:INFO:Total runtime is 0.23166886170705162 minutes
2023-01-15 18:31:12,048:INFO:SubProcess create_model() called ==================================
2023-01-15 18:31:12,048:INFO:Initializing create_model()
2023-01-15 18:31:12,048:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DB89FD2CE0>, estimator=rf, fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DB89FD3280>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:31:12,048:INFO:Checking exceptions
2023-01-15 18:31:12,048:INFO:Importing libraries
2023-01-15 18:31:12,048:INFO:Copying training dataset
2023-01-15 18:31:12,053:INFO:Defining folds
2023-01-15 18:31:12,053:INFO:Declaring metric variables
2023-01-15 18:31:12,054:INFO:Importing untrained model
2023-01-15 18:31:12,054:INFO:Random Forest Classifier Imported successfully
2023-01-15 18:31:12,055:INFO:Starting cross validation
2023-01-15 18:31:12,057:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:31:14,956:INFO:Calculating mean and std
2023-01-15 18:31:14,957:INFO:Creating metrics dataframe
2023-01-15 18:31:14,962:INFO:Uploading results into container
2023-01-15 18:31:14,962:INFO:Uploading model into container now
2023-01-15 18:31:14,963:INFO:_master_model_container: 7
2023-01-15 18:31:14,963:INFO:_display_container: 2
2023-01-15 18:31:14,964:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=42, verbose=0, warm_start=False)
2023-01-15 18:31:14,964:INFO:create_model() successfully completed......................................
2023-01-15 18:31:15,039:INFO:SubProcess create_model() end ==================================
2023-01-15 18:31:15,040:INFO:Creating metrics dataframe
2023-01-15 18:31:15,046:INFO:Initializing Quadratic Discriminant Analysis
2023-01-15 18:31:15,046:INFO:Total runtime is 0.28166888157526654 minutes
2023-01-15 18:31:15,046:INFO:SubProcess create_model() called ==================================
2023-01-15 18:31:15,046:INFO:Initializing create_model()
2023-01-15 18:31:15,046:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DB89FD2CE0>, estimator=qda, fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DB89FD3280>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:31:15,046:INFO:Checking exceptions
2023-01-15 18:31:15,046:INFO:Importing libraries
2023-01-15 18:31:15,046:INFO:Copying training dataset
2023-01-15 18:31:15,053:INFO:Defining folds
2023-01-15 18:31:15,053:INFO:Declaring metric variables
2023-01-15 18:31:15,053:INFO:Importing untrained model
2023-01-15 18:31:15,054:INFO:Quadratic Discriminant Analysis Imported successfully
2023-01-15 18:31:15,054:INFO:Starting cross validation
2023-01-15 18:31:15,057:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:31:15,638:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-01-15 18:31:15,652:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-01-15 18:31:15,654:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-01-15 18:31:15,723:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-01-15 18:31:16,150:INFO:Calculating mean and std
2023-01-15 18:31:16,151:INFO:Creating metrics dataframe
2023-01-15 18:31:16,156:INFO:Uploading results into container
2023-01-15 18:31:16,157:INFO:Uploading model into container now
2023-01-15 18:31:16,157:INFO:_master_model_container: 8
2023-01-15 18:31:16,157:INFO:_display_container: 2
2023-01-15 18:31:16,158:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-01-15 18:31:16,158:INFO:create_model() successfully completed......................................
2023-01-15 18:31:16,231:INFO:SubProcess create_model() end ==================================
2023-01-15 18:31:16,232:INFO:Creating metrics dataframe
2023-01-15 18:31:16,240:INFO:Initializing Ada Boost Classifier
2023-01-15 18:31:16,240:INFO:Total runtime is 0.3015632470448812 minutes
2023-01-15 18:31:16,240:INFO:SubProcess create_model() called ==================================
2023-01-15 18:31:16,240:INFO:Initializing create_model()
2023-01-15 18:31:16,240:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DB89FD2CE0>, estimator=ada, fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DB89FD3280>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:31:16,241:INFO:Checking exceptions
2023-01-15 18:31:16,241:INFO:Importing libraries
2023-01-15 18:31:16,241:INFO:Copying training dataset
2023-01-15 18:31:16,246:INFO:Defining folds
2023-01-15 18:31:16,246:INFO:Declaring metric variables
2023-01-15 18:31:16,246:INFO:Importing untrained model
2023-01-15 18:31:16,246:INFO:Ada Boost Classifier Imported successfully
2023-01-15 18:31:16,247:INFO:Starting cross validation
2023-01-15 18:31:16,250:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:31:18,743:INFO:Calculating mean and std
2023-01-15 18:31:18,744:INFO:Creating metrics dataframe
2023-01-15 18:31:18,747:INFO:Uploading results into container
2023-01-15 18:31:18,747:INFO:Uploading model into container now
2023-01-15 18:31:18,750:INFO:_master_model_container: 9
2023-01-15 18:31:18,750:INFO:_display_container: 2
2023-01-15 18:31:18,750:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2023-01-15 18:31:18,751:INFO:create_model() successfully completed......................................
2023-01-15 18:31:18,825:INFO:SubProcess create_model() end ==================================
2023-01-15 18:31:18,825:INFO:Creating metrics dataframe
2023-01-15 18:31:18,831:INFO:Initializing Gradient Boosting Classifier
2023-01-15 18:31:18,831:INFO:Total runtime is 0.3447467724482218 minutes
2023-01-15 18:31:18,831:INFO:SubProcess create_model() called ==================================
2023-01-15 18:31:18,831:INFO:Initializing create_model()
2023-01-15 18:31:18,831:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DB89FD2CE0>, estimator=gbc, fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DB89FD3280>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:31:18,831:INFO:Checking exceptions
2023-01-15 18:31:18,831:INFO:Importing libraries
2023-01-15 18:31:18,831:INFO:Copying training dataset
2023-01-15 18:31:18,838:INFO:Defining folds
2023-01-15 18:31:18,838:INFO:Declaring metric variables
2023-01-15 18:31:18,838:INFO:Importing untrained model
2023-01-15 18:31:18,839:INFO:Gradient Boosting Classifier Imported successfully
2023-01-15 18:31:18,839:INFO:Starting cross validation
2023-01-15 18:31:18,841:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:31:24,378:INFO:Calculating mean and std
2023-01-15 18:31:24,379:INFO:Creating metrics dataframe
2023-01-15 18:31:24,383:INFO:Uploading results into container
2023-01-15 18:31:24,385:INFO:Uploading model into container now
2023-01-15 18:31:24,385:INFO:_master_model_container: 10
2023-01-15 18:31:24,386:INFO:_display_container: 2
2023-01-15 18:31:24,386:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-01-15 18:31:24,386:INFO:create_model() successfully completed......................................
2023-01-15 18:31:24,459:INFO:SubProcess create_model() end ==================================
2023-01-15 18:31:24,459:INFO:Creating metrics dataframe
2023-01-15 18:31:24,466:INFO:Initializing Linear Discriminant Analysis
2023-01-15 18:31:24,466:INFO:Total runtime is 0.4386697212855021 minutes
2023-01-15 18:31:24,466:INFO:SubProcess create_model() called ==================================
2023-01-15 18:31:24,467:INFO:Initializing create_model()
2023-01-15 18:31:24,467:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DB89FD2CE0>, estimator=lda, fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DB89FD3280>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:31:24,467:INFO:Checking exceptions
2023-01-15 18:31:24,467:INFO:Importing libraries
2023-01-15 18:31:24,467:INFO:Copying training dataset
2023-01-15 18:31:24,472:INFO:Defining folds
2023-01-15 18:31:24,473:INFO:Declaring metric variables
2023-01-15 18:31:24,473:INFO:Importing untrained model
2023-01-15 18:31:24,473:INFO:Linear Discriminant Analysis Imported successfully
2023-01-15 18:31:24,474:INFO:Starting cross validation
2023-01-15 18:31:24,476:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:31:25,526:INFO:Calculating mean and std
2023-01-15 18:31:25,527:INFO:Creating metrics dataframe
2023-01-15 18:31:25,532:INFO:Uploading results into container
2023-01-15 18:31:25,532:INFO:Uploading model into container now
2023-01-15 18:31:25,533:INFO:_master_model_container: 11
2023-01-15 18:31:25,533:INFO:_display_container: 2
2023-01-15 18:31:25,533:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-01-15 18:31:25,534:INFO:create_model() successfully completed......................................
2023-01-15 18:31:25,609:INFO:SubProcess create_model() end ==================================
2023-01-15 18:31:25,609:INFO:Creating metrics dataframe
2023-01-15 18:31:25,616:INFO:Initializing Extra Trees Classifier
2023-01-15 18:31:25,616:INFO:Total runtime is 0.45784360170364374 minutes
2023-01-15 18:31:25,616:INFO:SubProcess create_model() called ==================================
2023-01-15 18:31:25,616:INFO:Initializing create_model()
2023-01-15 18:31:25,616:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DB89FD2CE0>, estimator=et, fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DB89FD3280>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:31:25,616:INFO:Checking exceptions
2023-01-15 18:31:25,617:INFO:Importing libraries
2023-01-15 18:31:25,617:INFO:Copying training dataset
2023-01-15 18:31:25,622:INFO:Defining folds
2023-01-15 18:31:25,622:INFO:Declaring metric variables
2023-01-15 18:31:25,623:INFO:Importing untrained model
2023-01-15 18:31:25,623:INFO:Extra Trees Classifier Imported successfully
2023-01-15 18:31:25,624:INFO:Starting cross validation
2023-01-15 18:31:25,626:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:31:28,256:INFO:Calculating mean and std
2023-01-15 18:31:28,257:INFO:Creating metrics dataframe
2023-01-15 18:31:28,264:INFO:Uploading results into container
2023-01-15 18:31:28,264:INFO:Uploading model into container now
2023-01-15 18:31:28,265:INFO:_master_model_container: 12
2023-01-15 18:31:28,265:INFO:_display_container: 2
2023-01-15 18:31:28,265:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=42, verbose=0, warm_start=False)
2023-01-15 18:31:28,266:INFO:create_model() successfully completed......................................
2023-01-15 18:31:28,342:INFO:SubProcess create_model() end ==================================
2023-01-15 18:31:28,342:INFO:Creating metrics dataframe
2023-01-15 18:31:28,349:INFO:Initializing Light Gradient Boosting Machine
2023-01-15 18:31:28,349:INFO:Total runtime is 0.5033782283465067 minutes
2023-01-15 18:31:28,349:INFO:SubProcess create_model() called ==================================
2023-01-15 18:31:28,350:INFO:Initializing create_model()
2023-01-15 18:31:28,350:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DB89FD2CE0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DB89FD3280>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:31:28,350:INFO:Checking exceptions
2023-01-15 18:31:28,350:INFO:Importing libraries
2023-01-15 18:31:28,350:INFO:Copying training dataset
2023-01-15 18:31:28,356:INFO:Defining folds
2023-01-15 18:31:28,356:INFO:Declaring metric variables
2023-01-15 18:31:28,356:INFO:Importing untrained model
2023-01-15 18:31:28,357:INFO:Light Gradient Boosting Machine Imported successfully
2023-01-15 18:31:28,357:INFO:Starting cross validation
2023-01-15 18:31:28,360:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:31:29,980:INFO:Calculating mean and std
2023-01-15 18:31:29,981:INFO:Creating metrics dataframe
2023-01-15 18:31:29,986:INFO:Uploading results into container
2023-01-15 18:31:29,987:INFO:Uploading model into container now
2023-01-15 18:31:29,987:INFO:_master_model_container: 13
2023-01-15 18:31:29,988:INFO:_display_container: 2
2023-01-15 18:31:29,988:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-01-15 18:31:29,988:INFO:create_model() successfully completed......................................
2023-01-15 18:31:30,062:INFO:SubProcess create_model() end ==================================
2023-01-15 18:31:30,063:INFO:Creating metrics dataframe
2023-01-15 18:31:30,069:INFO:Initializing Dummy Classifier
2023-01-15 18:31:30,069:INFO:Total runtime is 0.5320456226666768 minutes
2023-01-15 18:31:30,070:INFO:SubProcess create_model() called ==================================
2023-01-15 18:31:30,070:INFO:Initializing create_model()
2023-01-15 18:31:30,070:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DB89FD2CE0>, estimator=dummy, fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DB89FD3280>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:31:30,070:INFO:Checking exceptions
2023-01-15 18:31:30,071:INFO:Importing libraries
2023-01-15 18:31:30,071:INFO:Copying training dataset
2023-01-15 18:31:30,076:INFO:Defining folds
2023-01-15 18:31:30,076:INFO:Declaring metric variables
2023-01-15 18:31:30,076:INFO:Importing untrained model
2023-01-15 18:31:30,076:INFO:Dummy Classifier Imported successfully
2023-01-15 18:31:30,077:INFO:Starting cross validation
2023-01-15 18:31:30,079:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:31:31,031:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-15 18:31:31,057:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-15 18:31:31,071:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-15 18:31:31,110:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-15 18:31:31,115:INFO:Calculating mean and std
2023-01-15 18:31:31,116:INFO:Creating metrics dataframe
2023-01-15 18:31:31,121:INFO:Uploading results into container
2023-01-15 18:31:31,122:INFO:Uploading model into container now
2023-01-15 18:31:31,122:INFO:_master_model_container: 14
2023-01-15 18:31:31,122:INFO:_display_container: 2
2023-01-15 18:31:31,123:INFO:DummyClassifier(constant=None, random_state=42, strategy='prior')
2023-01-15 18:31:31,123:INFO:create_model() successfully completed......................................
2023-01-15 18:31:31,194:INFO:SubProcess create_model() end ==================================
2023-01-15 18:31:31,194:INFO:Creating metrics dataframe
2023-01-15 18:31:31,203:INFO:Initializing create_model()
2023-01-15 18:31:31,203:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DB89FD2CE0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:31:31,203:INFO:Checking exceptions
2023-01-15 18:31:31,205:INFO:Importing libraries
2023-01-15 18:31:31,205:INFO:Copying training dataset
2023-01-15 18:31:31,210:INFO:Defining folds
2023-01-15 18:31:31,210:INFO:Declaring metric variables
2023-01-15 18:31:31,211:INFO:Importing untrained model
2023-01-15 18:31:31,211:INFO:Declaring custom model
2023-01-15 18:31:31,212:INFO:Logistic Regression Imported successfully
2023-01-15 18:31:31,214:INFO:Cross validation set to False
2023-01-15 18:31:31,214:INFO:Fitting Model
2023-01-15 18:31:31,851:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-01-15 18:31:31,851:INFO:create_model() successfully completed......................................
2023-01-15 18:31:31,920:INFO:Initializing create_model()
2023-01-15 18:31:31,920:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DB89FD2CE0>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:31:31,920:INFO:Checking exceptions
2023-01-15 18:31:31,922:INFO:Importing libraries
2023-01-15 18:31:31,922:INFO:Copying training dataset
2023-01-15 18:31:31,927:INFO:Defining folds
2023-01-15 18:31:31,927:INFO:Declaring metric variables
2023-01-15 18:31:31,927:INFO:Importing untrained model
2023-01-15 18:31:31,927:INFO:Declaring custom model
2023-01-15 18:31:31,928:INFO:Linear Discriminant Analysis Imported successfully
2023-01-15 18:31:31,930:INFO:Cross validation set to False
2023-01-15 18:31:31,930:INFO:Fitting Model
2023-01-15 18:31:32,465:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-01-15 18:31:32,466:INFO:create_model() successfully completed......................................
2023-01-15 18:31:32,536:INFO:Initializing create_model()
2023-01-15 18:31:32,536:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DB89FD2CE0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:31:32,536:INFO:Checking exceptions
2023-01-15 18:31:32,538:INFO:Importing libraries
2023-01-15 18:31:32,538:INFO:Copying training dataset
2023-01-15 18:31:32,542:INFO:Defining folds
2023-01-15 18:31:32,542:INFO:Declaring metric variables
2023-01-15 18:31:32,542:INFO:Importing untrained model
2023-01-15 18:31:32,542:INFO:Declaring custom model
2023-01-15 18:31:32,543:INFO:Light Gradient Boosting Machine Imported successfully
2023-01-15 18:31:32,545:INFO:Cross validation set to False
2023-01-15 18:31:32,545:INFO:Fitting Model
2023-01-15 18:31:33,273:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-01-15 18:31:33,273:INFO:create_model() successfully completed......................................
2023-01-15 18:31:33,393:INFO:_master_model_container: 14
2023-01-15 18:31:33,393:INFO:_display_container: 2
2023-01-15 18:31:33,394:INFO:[LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)]
2023-01-15 18:31:33,394:INFO:compare_models() successfully completed......................................
2023-01-15 18:31:33,492:INFO:Initializing tune_model()
2023-01-15 18:31:33,492:INFO:tune_model(estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, n_iter=20, custom_grid=None, optimize=AUC, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DB89FD2CE0>)
2023-01-15 18:31:33,492:INFO:Checking exceptions
2023-01-15 18:31:33,527:INFO:Copying training dataset
2023-01-15 18:31:33,534:INFO:Checking base model
2023-01-15 18:31:33,534:INFO:Base model : Logistic Regression
2023-01-15 18:31:33,543:INFO:Declaring metric variables
2023-01-15 18:31:33,547:INFO:Defining Hyperparameters
2023-01-15 18:31:33,654:INFO:Tuning with n_jobs=-1
2023-01-15 18:31:33,655:INFO:Initializing RandomizedSearchCV
2023-01-15 18:31:51,894:INFO:best_params: {'actual_estimator__class_weight': {}, 'actual_estimator__C': 0.385}
2023-01-15 18:31:51,896:INFO:Hyperparameter search completed
2023-01-15 18:31:51,896:INFO:SubProcess create_model() called ==================================
2023-01-15 18:31:51,897:INFO:Initializing create_model()
2023-01-15 18:31:51,897:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DB89FD2CE0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DB86FE4580>, model_only=True, return_train_score=False, kwargs={'class_weight': {}, 'C': 0.385})
2023-01-15 18:31:51,897:INFO:Checking exceptions
2023-01-15 18:31:51,897:INFO:Importing libraries
2023-01-15 18:31:51,897:INFO:Copying training dataset
2023-01-15 18:31:51,903:INFO:Defining folds
2023-01-15 18:31:51,903:INFO:Declaring metric variables
2023-01-15 18:31:51,908:INFO:Importing untrained model
2023-01-15 18:31:51,908:INFO:Declaring custom model
2023-01-15 18:31:51,916:INFO:Logistic Regression Imported successfully
2023-01-15 18:31:51,931:INFO:Starting cross validation
2023-01-15 18:31:51,935:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:31:53,189:INFO:Calculating mean and std
2023-01-15 18:31:53,191:INFO:Creating metrics dataframe
2023-01-15 18:31:53,202:INFO:Finalizing model
2023-01-15 18:31:53,929:INFO:Uploading results into container
2023-01-15 18:31:53,930:INFO:Uploading model into container now
2023-01-15 18:31:53,930:INFO:_master_model_container: 15
2023-01-15 18:31:53,931:INFO:_display_container: 3
2023-01-15 18:31:53,931:INFO:LogisticRegression(C=0.385, class_weight={}, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-01-15 18:31:53,931:INFO:create_model() successfully completed......................................
2023-01-15 18:31:54,014:INFO:SubProcess create_model() end ==================================
2023-01-15 18:31:54,015:INFO:choose_better activated
2023-01-15 18:31:54,019:INFO:SubProcess create_model() called ==================================
2023-01-15 18:31:54,019:INFO:Initializing create_model()
2023-01-15 18:31:54,019:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DB89FD2CE0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:31:54,019:INFO:Checking exceptions
2023-01-15 18:31:54,021:INFO:Importing libraries
2023-01-15 18:31:54,021:INFO:Copying training dataset
2023-01-15 18:31:54,028:INFO:Defining folds
2023-01-15 18:31:54,028:INFO:Declaring metric variables
2023-01-15 18:31:54,028:INFO:Importing untrained model
2023-01-15 18:31:54,028:INFO:Declaring custom model
2023-01-15 18:31:54,029:INFO:Logistic Regression Imported successfully
2023-01-15 18:31:54,029:INFO:Starting cross validation
2023-01-15 18:31:54,032:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:31:55,292:INFO:Calculating mean and std
2023-01-15 18:31:55,293:INFO:Creating metrics dataframe
2023-01-15 18:31:55,296:INFO:Finalizing model
2023-01-15 18:31:55,982:INFO:Uploading results into container
2023-01-15 18:31:55,983:INFO:Uploading model into container now
2023-01-15 18:31:55,983:INFO:_master_model_container: 16
2023-01-15 18:31:55,984:INFO:_display_container: 4
2023-01-15 18:31:55,984:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-01-15 18:31:55,984:INFO:create_model() successfully completed......................................
2023-01-15 18:31:56,054:INFO:SubProcess create_model() end ==================================
2023-01-15 18:31:56,054:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for AUC is 0.8741
2023-01-15 18:31:56,055:INFO:LogisticRegression(C=0.385, class_weight={}, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for AUC is 0.8745
2023-01-15 18:31:56,055:INFO:LogisticRegression(C=0.385, class_weight={}, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) is best model
2023-01-15 18:31:56,055:INFO:choose_better completed
2023-01-15 18:31:56,067:INFO:_master_model_container: 16
2023-01-15 18:31:56,067:INFO:_display_container: 3
2023-01-15 18:31:56,067:INFO:LogisticRegression(C=0.385, class_weight={}, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-01-15 18:31:56,067:INFO:tune_model() successfully completed......................................
2023-01-15 18:31:56,147:INFO:Initializing tune_model()
2023-01-15 18:31:56,148:INFO:tune_model(estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=None, round=4, n_iter=20, custom_grid=None, optimize=AUC, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DB89FD2CE0>)
2023-01-15 18:31:56,148:INFO:Checking exceptions
2023-01-15 18:31:56,171:INFO:Copying training dataset
2023-01-15 18:31:56,179:INFO:Checking base model
2023-01-15 18:31:56,179:INFO:Base model : Linear Discriminant Analysis
2023-01-15 18:31:56,184:INFO:Declaring metric variables
2023-01-15 18:31:56,188:INFO:Defining Hyperparameters
2023-01-15 18:31:56,290:INFO:Tuning with n_jobs=-1
2023-01-15 18:31:56,290:INFO:Initializing RandomizedSearchCV
2023-01-15 18:32:10,221:INFO:best_params: {'actual_estimator__solver': 'lsqr', 'actual_estimator__shrinkage': 0.05}
2023-01-15 18:32:10,223:INFO:Hyperparameter search completed
2023-01-15 18:32:10,223:INFO:SubProcess create_model() called ==================================
2023-01-15 18:32:10,224:INFO:Initializing create_model()
2023-01-15 18:32:10,224:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DB89FD2CE0>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DB89B20A00>, model_only=True, return_train_score=False, kwargs={'solver': 'lsqr', 'shrinkage': 0.05})
2023-01-15 18:32:10,224:INFO:Checking exceptions
2023-01-15 18:32:10,225:INFO:Importing libraries
2023-01-15 18:32:10,225:INFO:Copying training dataset
2023-01-15 18:32:10,232:INFO:Defining folds
2023-01-15 18:32:10,232:INFO:Declaring metric variables
2023-01-15 18:32:10,238:INFO:Importing untrained model
2023-01-15 18:32:10,238:INFO:Declaring custom model
2023-01-15 18:32:10,244:INFO:Linear Discriminant Analysis Imported successfully
2023-01-15 18:32:10,257:INFO:Starting cross validation
2023-01-15 18:32:10,260:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:32:11,343:INFO:Calculating mean and std
2023-01-15 18:32:11,345:INFO:Creating metrics dataframe
2023-01-15 18:32:11,354:INFO:Finalizing model
2023-01-15 18:32:11,950:INFO:Uploading results into container
2023-01-15 18:32:11,951:INFO:Uploading model into container now
2023-01-15 18:32:11,952:INFO:_master_model_container: 17
2023-01-15 18:32:11,952:INFO:_display_container: 4
2023-01-15 18:32:11,952:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=0.05, solver='lsqr',
                           store_covariance=False, tol=0.0001)
2023-01-15 18:32:11,953:INFO:create_model() successfully completed......................................
2023-01-15 18:32:12,026:INFO:SubProcess create_model() end ==================================
2023-01-15 18:32:12,026:INFO:choose_better activated
2023-01-15 18:32:12,031:INFO:SubProcess create_model() called ==================================
2023-01-15 18:32:12,032:INFO:Initializing create_model()
2023-01-15 18:32:12,032:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DB89FD2CE0>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:32:12,032:INFO:Checking exceptions
2023-01-15 18:32:12,034:INFO:Importing libraries
2023-01-15 18:32:12,034:INFO:Copying training dataset
2023-01-15 18:32:12,039:INFO:Defining folds
2023-01-15 18:32:12,039:INFO:Declaring metric variables
2023-01-15 18:32:12,039:INFO:Importing untrained model
2023-01-15 18:32:12,039:INFO:Declaring custom model
2023-01-15 18:32:12,040:INFO:Linear Discriminant Analysis Imported successfully
2023-01-15 18:32:12,040:INFO:Starting cross validation
2023-01-15 18:32:12,042:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:32:13,120:INFO:Calculating mean and std
2023-01-15 18:32:13,120:INFO:Creating metrics dataframe
2023-01-15 18:32:13,123:INFO:Finalizing model
2023-01-15 18:32:13,738:INFO:Uploading results into container
2023-01-15 18:32:13,739:INFO:Uploading model into container now
2023-01-15 18:32:13,739:INFO:_master_model_container: 18
2023-01-15 18:32:13,739:INFO:_display_container: 5
2023-01-15 18:32:13,739:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-01-15 18:32:13,739:INFO:create_model() successfully completed......................................
2023-01-15 18:32:13,812:INFO:SubProcess create_model() end ==================================
2023-01-15 18:32:13,813:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001) result for AUC is 0.8724
2023-01-15 18:32:13,813:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=0.05, solver='lsqr',
                           store_covariance=False, tol=0.0001) result for AUC is 0.8742
2023-01-15 18:32:13,813:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=0.05, solver='lsqr',
                           store_covariance=False, tol=0.0001) is best model
2023-01-15 18:32:13,813:INFO:choose_better completed
2023-01-15 18:32:13,826:INFO:_master_model_container: 18
2023-01-15 18:32:13,826:INFO:_display_container: 4
2023-01-15 18:32:13,826:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=0.05, solver='lsqr',
                           store_covariance=False, tol=0.0001)
2023-01-15 18:32:13,826:INFO:tune_model() successfully completed......................................
2023-01-15 18:32:13,912:INFO:Initializing tune_model()
2023-01-15 18:32:13,912:INFO:tune_model(estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, n_iter=20, custom_grid=None, optimize=AUC, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DB89FD2CE0>)
2023-01-15 18:32:13,912:INFO:Checking exceptions
2023-01-15 18:32:13,937:INFO:Copying training dataset
2023-01-15 18:32:13,945:INFO:Checking base model
2023-01-15 18:32:13,945:INFO:Base model : Light Gradient Boosting Machine
2023-01-15 18:32:13,954:INFO:Declaring metric variables
2023-01-15 18:32:13,960:INFO:Defining Hyperparameters
2023-01-15 18:32:14,055:INFO:Tuning with n_jobs=-1
2023-01-15 18:32:14,055:INFO:Initializing RandomizedSearchCV
2023-01-15 18:32:39,977:INFO:best_params: {'actual_estimator__reg_lambda': 2, 'actual_estimator__reg_alpha': 0.3, 'actual_estimator__num_leaves': 10, 'actual_estimator__n_estimators': 10, 'actual_estimator__min_split_gain': 0.1, 'actual_estimator__min_child_samples': 71, 'actual_estimator__learning_rate': 0.01, 'actual_estimator__feature_fraction': 0.6, 'actual_estimator__bagging_freq': 2, 'actual_estimator__bagging_fraction': 0.8}
2023-01-15 18:32:39,979:INFO:Hyperparameter search completed
2023-01-15 18:32:39,979:INFO:SubProcess create_model() called ==================================
2023-01-15 18:32:39,981:INFO:Initializing create_model()
2023-01-15 18:32:39,981:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DB89FD2CE0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DB89B20880>, model_only=True, return_train_score=False, kwargs={'reg_lambda': 2, 'reg_alpha': 0.3, 'num_leaves': 10, 'n_estimators': 10, 'min_split_gain': 0.1, 'min_child_samples': 71, 'learning_rate': 0.01, 'feature_fraction': 0.6, 'bagging_freq': 2, 'bagging_fraction': 0.8})
2023-01-15 18:32:39,981:INFO:Checking exceptions
2023-01-15 18:32:39,981:INFO:Importing libraries
2023-01-15 18:32:39,981:INFO:Copying training dataset
2023-01-15 18:32:39,987:INFO:Defining folds
2023-01-15 18:32:39,988:INFO:Declaring metric variables
2023-01-15 18:32:39,994:INFO:Importing untrained model
2023-01-15 18:32:39,995:INFO:Declaring custom model
2023-01-15 18:32:40,001:INFO:Light Gradient Boosting Machine Imported successfully
2023-01-15 18:32:40,013:INFO:Starting cross validation
2023-01-15 18:32:40,016:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:32:41,220:INFO:Calculating mean and std
2023-01-15 18:32:41,224:INFO:Creating metrics dataframe
2023-01-15 18:32:41,232:INFO:Finalizing model
2023-01-15 18:32:41,850:INFO:Uploading results into container
2023-01-15 18:32:41,851:INFO:Uploading model into container now
2023-01-15 18:32:41,852:INFO:_master_model_container: 19
2023-01-15 18:32:41,852:INFO:_display_container: 5
2023-01-15 18:32:41,853:INFO:LGBMClassifier(bagging_fraction=0.8, bagging_freq=2, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.6,
               importance_type='split', learning_rate=0.01, max_depth=-1,
               min_child_samples=71, min_child_weight=0.001, min_split_gain=0.1,
               n_estimators=10, n_jobs=-1, num_leaves=10, objective=None,
               random_state=42, reg_alpha=0.3, reg_lambda=2, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-01-15 18:32:41,854:INFO:create_model() successfully completed......................................
2023-01-15 18:32:41,968:INFO:SubProcess create_model() end ==================================
2023-01-15 18:32:41,968:INFO:choose_better activated
2023-01-15 18:32:41,974:INFO:SubProcess create_model() called ==================================
2023-01-15 18:32:41,975:INFO:Initializing create_model()
2023-01-15 18:32:41,975:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DB89FD2CE0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:32:41,975:INFO:Checking exceptions
2023-01-15 18:32:41,977:INFO:Importing libraries
2023-01-15 18:32:41,977:INFO:Copying training dataset
2023-01-15 18:32:41,982:INFO:Defining folds
2023-01-15 18:32:41,982:INFO:Declaring metric variables
2023-01-15 18:32:41,983:INFO:Importing untrained model
2023-01-15 18:32:41,983:INFO:Declaring custom model
2023-01-15 18:32:41,984:INFO:Light Gradient Boosting Machine Imported successfully
2023-01-15 18:32:41,984:INFO:Starting cross validation
2023-01-15 18:32:41,987:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:32:43,648:INFO:Calculating mean and std
2023-01-15 18:32:43,648:INFO:Creating metrics dataframe
2023-01-15 18:32:43,651:INFO:Finalizing model
2023-01-15 18:32:44,472:INFO:Uploading results into container
2023-01-15 18:32:44,475:INFO:Uploading model into container now
2023-01-15 18:32:44,476:INFO:_master_model_container: 20
2023-01-15 18:32:44,477:INFO:_display_container: 6
2023-01-15 18:32:44,478:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-01-15 18:32:44,478:INFO:create_model() successfully completed......................................
2023-01-15 18:32:44,593:INFO:SubProcess create_model() end ==================================
2023-01-15 18:32:44,594:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0) result for AUC is 0.8647
2023-01-15 18:32:44,595:INFO:LGBMClassifier(bagging_fraction=0.8, bagging_freq=2, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.6,
               importance_type='split', learning_rate=0.01, max_depth=-1,
               min_child_samples=71, min_child_weight=0.001, min_split_gain=0.1,
               n_estimators=10, n_jobs=-1, num_leaves=10, objective=None,
               random_state=42, reg_alpha=0.3, reg_lambda=2, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0) result for AUC is 0.8722
2023-01-15 18:32:44,596:INFO:LGBMClassifier(bagging_fraction=0.8, bagging_freq=2, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.6,
               importance_type='split', learning_rate=0.01, max_depth=-1,
               min_child_samples=71, min_child_weight=0.001, min_split_gain=0.1,
               n_estimators=10, n_jobs=-1, num_leaves=10, objective=None,
               random_state=42, reg_alpha=0.3, reg_lambda=2, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0) is best model
2023-01-15 18:32:44,596:INFO:choose_better completed
2023-01-15 18:32:44,609:INFO:_master_model_container: 20
2023-01-15 18:32:44,609:INFO:_display_container: 5
2023-01-15 18:32:44,610:INFO:LGBMClassifier(bagging_fraction=0.8, bagging_freq=2, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.6,
               importance_type='split', learning_rate=0.01, max_depth=-1,
               min_child_samples=71, min_child_weight=0.001, min_split_gain=0.1,
               n_estimators=10, n_jobs=-1, num_leaves=10, objective=None,
               random_state=42, reg_alpha=0.3, reg_lambda=2, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-01-15 18:32:44,610:INFO:tune_model() successfully completed......................................
2023-01-15 18:34:00,727:INFO:Initializing stack_models()
2023-01-15 18:34:00,727:INFO:stack_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DB89FD2CE0>, estimator_list=[LogisticRegression(C=0.385, class_weight={}, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=0.05, solver='lsqr',
                           store_covariance=False, tol=0.0001), LGBMClassifier(bagging_fraction=0.8, bagging_freq=2, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.6,
               importance_type='split', learning_rate=0.01, max_depth=-1,
               min_child_samples=71, min_child_weight=0.001, min_split_gain=0.1,
               n_estimators=10, n_jobs=-1, num_leaves=10, objective=None,
               random_state=42, reg_alpha=0.3, reg_lambda=2, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)], meta_model=None, meta_model_fold=5, fold=None, round=4, method=auto, restack=True, choose_better=False, optimize=Accuracy, fit_kwargs=None, groups=None, probability_threshold=None, verbose=False, return_train_score=False)
2023-01-15 18:34:00,727:INFO:Checking exceptions
2023-01-15 18:34:00,735:INFO:Defining meta model
2023-01-15 18:34:00,737:INFO:Getting model names
2023-01-15 18:34:00,738:INFO:[('Logistic Regression', LogisticRegression(C=0.385, class_weight={}, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)), ('Linear Discriminant Analysis', LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=0.05, solver='lsqr',
                           store_covariance=False, tol=0.0001)), ('Light Gradient Boosting Machine', LGBMClassifier(bagging_fraction=0.8, bagging_freq=2, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.6,
               importance_type='split', learning_rate=0.01, max_depth=-1,
               min_child_samples=71, min_child_weight=0.001, min_split_gain=0.1,
               n_estimators=10, n_jobs=-1, num_leaves=10, objective=None,
               random_state=42, reg_alpha=0.3, reg_lambda=2, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0))]
2023-01-15 18:34:00,739:INFO:SubProcess create_model() called ==================================
2023-01-15 18:34:00,747:INFO:Initializing create_model()
2023-01-15 18:34:00,747:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DB89FD2CE0>, estimator=StackingClassifier(cv=5,
                   estimators=[('Logistic Regression',
                                LogisticRegression(C=0.385, class_weight={},
                                                   dual=False,
                                                   fit_intercept=True,
                                                   intercept_scaling=1,
                                                   l1_ratio=None, max_iter=1000,
                                                   multi_class='auto',
                                                   n_jobs=None, penalty='l2',
                                                   random_state=42,
                                                   solver='lbfgs', tol=0.0001,
                                                   verbose=0,
                                                   warm_start=False)),
                               ('Linear Discriminant Analysis',
                                LinearDiscriminantAnalysis...
                                               subsample_for_bin=200000,
                                               subsample_freq=0))],
                   final_estimator=LogisticRegression(C=1.0, class_weight=None,
                                                      dual=False,
                                                      fit_intercept=True,
                                                      intercept_scaling=1,
                                                      l1_ratio=None,
                                                      max_iter=1000,
                                                      multi_class='auto',
                                                      n_jobs=None, penalty='l2',
                                                      random_state=42,
                                                      solver='lbfgs',
                                                      tol=0.0001, verbose=0,
                                                      warm_start=False),
                   n_jobs=-1, passthrough=True, stack_method='auto', verbose=0), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DB8A4CF6A0>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:34:00,747:INFO:Checking exceptions
2023-01-15 18:34:00,747:INFO:Importing libraries
2023-01-15 18:34:00,747:INFO:Copying training dataset
2023-01-15 18:34:00,752:INFO:Defining folds
2023-01-15 18:34:00,752:INFO:Declaring metric variables
2023-01-15 18:34:00,752:INFO:Importing untrained model
2023-01-15 18:34:00,752:INFO:Declaring custom model
2023-01-15 18:34:00,755:INFO:Stacking Classifier Imported successfully
2023-01-15 18:34:00,755:INFO:Starting cross validation
2023-01-15 18:34:00,758:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:34:03,801:INFO:Calculating mean and std
2023-01-15 18:34:03,801:INFO:Creating metrics dataframe
2023-01-15 18:34:03,804:INFO:Finalizing model
2023-01-15 18:34:05,928:INFO:Uploading results into container
2023-01-15 18:34:05,930:INFO:Uploading model into container now
2023-01-15 18:34:05,930:INFO:_master_model_container: 21
2023-01-15 18:34:05,930:INFO:_display_container: 6
2023-01-15 18:34:05,936:INFO:StackingClassifier(cv=5,
                   estimators=[('Logistic Regression',
                                LogisticRegression(C=0.385, class_weight={},
                                                   dual=False,
                                                   fit_intercept=True,
                                                   intercept_scaling=1,
                                                   l1_ratio=None, max_iter=1000,
                                                   multi_class='auto',
                                                   n_jobs=None, penalty='l2',
                                                   random_state=42,
                                                   solver='lbfgs', tol=0.0001,
                                                   verbose=0,
                                                   warm_start=False)),
                               ('Linear Discriminant Analysis',
                                LinearDiscriminantAnalysis...
                                               subsample_for_bin=200000,
                                               subsample_freq=0))],
                   final_estimator=LogisticRegression(C=1.0, class_weight=None,
                                                      dual=False,
                                                      fit_intercept=True,
                                                      intercept_scaling=1,
                                                      l1_ratio=None,
                                                      max_iter=1000,
                                                      multi_class='auto',
                                                      n_jobs=None, penalty='l2',
                                                      random_state=42,
                                                      solver='lbfgs',
                                                      tol=0.0001, verbose=0,
                                                      warm_start=False),
                   n_jobs=-1, passthrough=True, stack_method='auto', verbose=0)
2023-01-15 18:34:05,937:INFO:create_model() successfully completed......................................
2023-01-15 18:34:06,013:INFO:SubProcess create_model() end ==================================
2023-01-15 18:34:06,013:INFO:_master_model_container: 21
2023-01-15 18:34:06,013:INFO:_display_container: 6
2023-01-15 18:34:06,019:INFO:StackingClassifier(cv=5,
                   estimators=[('Logistic Regression',
                                LogisticRegression(C=0.385, class_weight={},
                                                   dual=False,
                                                   fit_intercept=True,
                                                   intercept_scaling=1,
                                                   l1_ratio=None, max_iter=1000,
                                                   multi_class='auto',
                                                   n_jobs=None, penalty='l2',
                                                   random_state=42,
                                                   solver='lbfgs', tol=0.0001,
                                                   verbose=0,
                                                   warm_start=False)),
                               ('Linear Discriminant Analysis',
                                LinearDiscriminantAnalysis...
                                               subsample_for_bin=200000,
                                               subsample_freq=0))],
                   final_estimator=LogisticRegression(C=1.0, class_weight=None,
                                                      dual=False,
                                                      fit_intercept=True,
                                                      intercept_scaling=1,
                                                      l1_ratio=None,
                                                      max_iter=1000,
                                                      multi_class='auto',
                                                      n_jobs=None, penalty='l2',
                                                      random_state=42,
                                                      solver='lbfgs',
                                                      tol=0.0001, verbose=0,
                                                      warm_start=False),
                   n_jobs=-1, passthrough=True, stack_method='auto', verbose=0)
2023-01-15 18:34:06,020:INFO:stack_models() successfully completed......................................
2023-01-15 18:43:07,399:INFO:Initializing calibrate_model()
2023-01-15 18:43:07,399:INFO:calibrate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DB89FD2CE0>, estimator=StackingClassifier(cv=5,
                   estimators=[('Logistic Regression',
                                LogisticRegression(C=0.385, class_weight={},
                                                   dual=False,
                                                   fit_intercept=True,
                                                   intercept_scaling=1,
                                                   l1_ratio=None, max_iter=1000,
                                                   multi_class='auto',
                                                   n_jobs=None, penalty='l2',
                                                   random_state=42,
                                                   solver='lbfgs', tol=0.0001,
                                                   verbose=0,
                                                   warm_start=False)),
                               ('Linear Discriminant Analysis',
                                LinearDiscriminantAnalysis...
                                               subsample_for_bin=200000,
                                               subsample_freq=0))],
                   final_estimator=LogisticRegression(C=1.0, class_weight=None,
                                                      dual=False,
                                                      fit_intercept=True,
                                                      intercept_scaling=1,
                                                      l1_ratio=None,
                                                      max_iter=1000,
                                                      multi_class='auto',
                                                      n_jobs=None, penalty='l2',
                                                      random_state=42,
                                                      solver='lbfgs',
                                                      tol=0.0001, verbose=0,
                                                      warm_start=False),
                   n_jobs=-1, passthrough=True, stack_method='auto', verbose=0), method=sigmoid, calibrate_fold=5, fold=None, round=4, fit_kwargs=None, groups=None, verbose=False, return_train_score=False)
2023-01-15 18:43:07,399:INFO:Checking exceptions
2023-01-15 18:43:07,404:INFO:Preloading libraries
2023-01-15 18:43:07,404:INFO:Preparing display monitor
2023-01-15 18:43:07,407:INFO:Getting model name
2023-01-15 18:43:07,407:INFO:Base model : Stacking Classifier
2023-01-15 18:43:07,408:INFO:Importing untrained CalibratedClassifierCV
2023-01-15 18:43:07,408:INFO:SubProcess create_model() called ==================================
2023-01-15 18:43:07,425:INFO:Initializing create_model()
2023-01-15 18:43:07,425:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DB89FD2CE0>, estimator=CalibratedClassifierCV(base_estimator=StackingClassifier(cv=5,
                                                         estimators=[('Logistic '
                                                                      'Regression',
                                                                      LogisticRegression(C=0.385,
                                                                                         class_weight={},
                                                                                         dual=False,
                                                                                         fit_intercept=True,
                                                                                         intercept_scaling=1,
                                                                                         l1_ratio=None,
                                                                                         max_iter=1000,
                                                                                         multi_class='auto',
                                                                                         n_jobs=None,
                                                                                         penalty='l2',
                                                                                         random_state=42,
                                                                                         solver='lbfgs',
                                                                                         tol=0.0001,
                                                                                         verbose=0,
                                                                                         warm_start=False)),
                                                                     ('Linear '
                                                                      'Discri...
                                                         final_estimator=LogisticRegression(C=1.0,
                                                                                            class_weight=None,
                                                                                            dual=False,
                                                                                            fit_intercept=True,
                                                                                            intercept_scaling=1,
                                                                                            l1_ratio=None,
                                                                                            max_iter=1000,
                                                                                            multi_class='auto',
                                                                                            n_jobs=None,
                                                                                            penalty='l2',
                                                                                            random_state=42,
                                                                                            solver='lbfgs',
                                                                                            tol=0.0001,
                                                                                            verbose=0,
                                                                                            warm_start=False),
                                                         n_jobs=-1,
                                                         passthrough=True,
                                                         stack_method='auto',
                                                         verbose=0),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DB89B20910>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:43:07,425:INFO:Checking exceptions
2023-01-15 18:43:07,425:INFO:Importing libraries
2023-01-15 18:43:07,425:INFO:Copying training dataset
2023-01-15 18:43:07,431:INFO:Defining folds
2023-01-15 18:43:07,431:INFO:Declaring metric variables
2023-01-15 18:43:07,431:INFO:Importing untrained model
2023-01-15 18:43:07,431:INFO:Declaring custom model
2023-01-15 18:43:07,434:INFO:Stacking Classifier Imported successfully
2023-01-15 18:43:07,435:INFO:Starting cross validation
2023-01-15 18:43:07,437:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:43:21,600:INFO:Calculating mean and std
2023-01-15 18:43:21,600:INFO:Creating metrics dataframe
2023-01-15 18:43:21,603:INFO:Finalizing model
2023-01-15 18:43:30,704:INFO:Uploading results into container
2023-01-15 18:43:30,705:INFO:Uploading model into container now
2023-01-15 18:43:30,705:INFO:_master_model_container: 22
2023-01-15 18:43:30,706:INFO:_display_container: 7
2023-01-15 18:43:30,722:INFO:CalibratedClassifierCV(base_estimator=StackingClassifier(cv=5,
                                                         estimators=[('Logistic '
                                                                      'Regression',
                                                                      LogisticRegression(C=0.385,
                                                                                         class_weight={},
                                                                                         dual=False,
                                                                                         fit_intercept=True,
                                                                                         intercept_scaling=1,
                                                                                         l1_ratio=None,
                                                                                         max_iter=1000,
                                                                                         multi_class='auto',
                                                                                         n_jobs=None,
                                                                                         penalty='l2',
                                                                                         random_state=42,
                                                                                         solver='lbfgs',
                                                                                         tol=0.0001,
                                                                                         verbose=0,
                                                                                         warm_start=False)),
                                                                     ('Linear '
                                                                      'Discri...
                                                         final_estimator=LogisticRegression(C=1.0,
                                                                                            class_weight=None,
                                                                                            dual=False,
                                                                                            fit_intercept=True,
                                                                                            intercept_scaling=1,
                                                                                            l1_ratio=None,
                                                                                            max_iter=1000,
                                                                                            multi_class='auto',
                                                                                            n_jobs=None,
                                                                                            penalty='l2',
                                                                                            random_state=42,
                                                                                            solver='lbfgs',
                                                                                            tol=0.0001,
                                                                                            verbose=0,
                                                                                            warm_start=False),
                                                         n_jobs=-1,
                                                         passthrough=True,
                                                         stack_method='auto',
                                                         verbose=0),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None)
2023-01-15 18:43:30,722:INFO:create_model() successfully completed......................................
2023-01-15 18:43:30,802:INFO:SubProcess create_model() end ==================================
2023-01-15 18:43:30,805:INFO:_master_model_container: 22
2023-01-15 18:43:30,805:INFO:_display_container: 7
2023-01-15 18:43:30,820:INFO:CalibratedClassifierCV(base_estimator=StackingClassifier(cv=5,
                                                         estimators=[('Logistic '
                                                                      'Regression',
                                                                      LogisticRegression(C=0.385,
                                                                                         class_weight={},
                                                                                         dual=False,
                                                                                         fit_intercept=True,
                                                                                         intercept_scaling=1,
                                                                                         l1_ratio=None,
                                                                                         max_iter=1000,
                                                                                         multi_class='auto',
                                                                                         n_jobs=None,
                                                                                         penalty='l2',
                                                                                         random_state=42,
                                                                                         solver='lbfgs',
                                                                                         tol=0.0001,
                                                                                         verbose=0,
                                                                                         warm_start=False)),
                                                                     ('Linear '
                                                                      'Discri...
                                                         final_estimator=LogisticRegression(C=1.0,
                                                                                            class_weight=None,
                                                                                            dual=False,
                                                                                            fit_intercept=True,
                                                                                            intercept_scaling=1,
                                                                                            l1_ratio=None,
                                                                                            max_iter=1000,
                                                                                            multi_class='auto',
                                                                                            n_jobs=None,
                                                                                            penalty='l2',
                                                                                            random_state=42,
                                                                                            solver='lbfgs',
                                                                                            tol=0.0001,
                                                                                            verbose=0,
                                                                                            warm_start=False),
                                                         n_jobs=-1,
                                                         passthrough=True,
                                                         stack_method='auto',
                                                         verbose=0),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None)
2023-01-15 18:43:30,820:INFO:calibrate_model() successfully completed......................................
2023-01-15 18:43:40,414:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:5119: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  mean_scores["Index"] = i

2023-01-15 18:43:40,415:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:5120: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  mean_scores["Model Name"] = model_name

2023-01-15 18:43:40,423:INFO:Initializing create_model()
2023-01-15 18:43:40,423:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DB89FD2CE0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:43:40,423:INFO:Checking exceptions
2023-01-15 18:43:40,426:INFO:Importing libraries
2023-01-15 18:43:40,426:INFO:Copying training dataset
2023-01-15 18:43:40,433:INFO:Defining folds
2023-01-15 18:43:40,434:INFO:Declaring metric variables
2023-01-15 18:43:40,434:INFO:Importing untrained model
2023-01-15 18:43:40,434:INFO:Declaring custom model
2023-01-15 18:43:40,437:INFO:Logistic Regression Imported successfully
2023-01-15 18:43:40,438:INFO:Starting cross validation
2023-01-15 18:43:40,441:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:43:42,940:INFO:Calculating mean and std
2023-01-15 18:43:42,940:INFO:Creating metrics dataframe
2023-01-15 18:43:42,942:INFO:Finalizing model
2023-01-15 18:43:43,598:INFO:Uploading results into container
2023-01-15 18:43:43,600:INFO:_master_model_container: 22
2023-01-15 18:43:43,600:INFO:_display_container: 8
2023-01-15 18:43:43,600:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-01-15 18:43:43,600:INFO:create_model() successfully completed......................................
2023-01-15 18:43:43,676:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:5119: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  mean_scores["Index"] = i

2023-01-15 18:43:43,677:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:5120: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  mean_scores["Model Name"] = model_name

2023-01-15 18:43:43,682:INFO:Initializing create_model()
2023-01-15 18:43:43,682:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DB89FD2CE0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:43:43,682:INFO:Checking exceptions
2023-01-15 18:43:43,684:INFO:Importing libraries
2023-01-15 18:43:43,684:INFO:Copying training dataset
2023-01-15 18:43:43,691:INFO:Defining folds
2023-01-15 18:43:43,691:INFO:Declaring metric variables
2023-01-15 18:43:43,691:INFO:Importing untrained model
2023-01-15 18:43:43,692:INFO:Declaring custom model
2023-01-15 18:43:43,692:INFO:K Neighbors Classifier Imported successfully
2023-01-15 18:43:43,692:INFO:Starting cross validation
2023-01-15 18:43:43,695:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:43:46,295:INFO:Calculating mean and std
2023-01-15 18:43:46,296:INFO:Creating metrics dataframe
2023-01-15 18:43:46,298:INFO:Finalizing model
2023-01-15 18:43:46,810:INFO:Uploading results into container
2023-01-15 18:43:46,811:INFO:_master_model_container: 22
2023-01-15 18:43:46,811:INFO:_display_container: 9
2023-01-15 18:43:46,811:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-01-15 18:43:46,811:INFO:create_model() successfully completed......................................
2023-01-15 18:43:46,896:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:5119: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  mean_scores["Index"] = i

2023-01-15 18:43:46,897:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:5120: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  mean_scores["Model Name"] = model_name

2023-01-15 18:43:46,901:INFO:Initializing create_model()
2023-01-15 18:43:46,901:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DB89FD2CE0>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:43:46,901:INFO:Checking exceptions
2023-01-15 18:43:46,904:INFO:Importing libraries
2023-01-15 18:43:46,905:INFO:Copying training dataset
2023-01-15 18:43:46,910:INFO:Defining folds
2023-01-15 18:43:46,910:INFO:Declaring metric variables
2023-01-15 18:43:46,910:INFO:Importing untrained model
2023-01-15 18:43:46,910:INFO:Declaring custom model
2023-01-15 18:43:46,911:INFO:Naive Bayes Imported successfully
2023-01-15 18:43:46,911:INFO:Starting cross validation
2023-01-15 18:43:46,913:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:43:47,815:INFO:Calculating mean and std
2023-01-15 18:43:47,815:INFO:Creating metrics dataframe
2023-01-15 18:43:47,817:INFO:Finalizing model
2023-01-15 18:43:48,337:INFO:Uploading results into container
2023-01-15 18:43:48,338:INFO:_master_model_container: 22
2023-01-15 18:43:48,339:INFO:_display_container: 10
2023-01-15 18:43:48,339:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-01-15 18:43:48,339:INFO:create_model() successfully completed......................................
2023-01-15 18:43:48,418:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:5119: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  mean_scores["Index"] = i

2023-01-15 18:43:48,418:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:5120: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  mean_scores["Model Name"] = model_name

2023-01-15 18:43:48,425:INFO:Initializing create_model()
2023-01-15 18:43:48,425:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DB89FD2CE0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=42, splitter='best'), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:43:48,425:INFO:Checking exceptions
2023-01-15 18:43:48,427:INFO:Importing libraries
2023-01-15 18:43:48,428:INFO:Copying training dataset
2023-01-15 18:43:48,432:INFO:Defining folds
2023-01-15 18:43:48,432:INFO:Declaring metric variables
2023-01-15 18:43:48,433:INFO:Importing untrained model
2023-01-15 18:43:48,433:INFO:Declaring custom model
2023-01-15 18:43:48,433:INFO:Decision Tree Classifier Imported successfully
2023-01-15 18:43:48,433:INFO:Starting cross validation
2023-01-15 18:43:48,436:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:43:49,451:INFO:Calculating mean and std
2023-01-15 18:43:49,451:INFO:Creating metrics dataframe
2023-01-15 18:43:49,455:INFO:Finalizing model
2023-01-15 18:43:50,046:INFO:Uploading results into container
2023-01-15 18:43:50,047:INFO:_master_model_container: 22
2023-01-15 18:43:50,047:INFO:_display_container: 11
2023-01-15 18:43:50,047:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=42, splitter='best')
2023-01-15 18:43:50,048:INFO:create_model() successfully completed......................................
2023-01-15 18:43:50,123:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:5119: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  mean_scores["Index"] = i

2023-01-15 18:43:50,124:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:5120: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  mean_scores["Model Name"] = model_name

2023-01-15 18:43:50,129:INFO:Initializing create_model()
2023-01-15 18:43:50,129:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DB89FD2CE0>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:43:50,129:INFO:Checking exceptions
2023-01-15 18:43:50,131:INFO:Importing libraries
2023-01-15 18:43:50,131:INFO:Copying training dataset
2023-01-15 18:43:50,136:INFO:Defining folds
2023-01-15 18:43:50,136:INFO:Declaring metric variables
2023-01-15 18:43:50,136:INFO:Importing untrained model
2023-01-15 18:43:50,136:INFO:Declaring custom model
2023-01-15 18:43:50,138:INFO:SVM - Linear Kernel Imported successfully
2023-01-15 18:43:50,138:INFO:Starting cross validation
2023-01-15 18:43:50,141:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:43:51,228:INFO:Calculating mean and std
2023-01-15 18:43:51,229:INFO:Creating metrics dataframe
2023-01-15 18:43:51,232:INFO:Finalizing model
2023-01-15 18:43:51,859:INFO:Uploading results into container
2023-01-15 18:43:51,860:INFO:_master_model_container: 22
2023-01-15 18:43:51,860:INFO:_display_container: 12
2023-01-15 18:43:51,860:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-01-15 18:43:51,860:INFO:create_model() successfully completed......................................
2023-01-15 18:43:51,937:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:5119: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  mean_scores["Index"] = i

2023-01-15 18:43:51,938:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:5120: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  mean_scores["Model Name"] = model_name

2023-01-15 18:43:51,944:INFO:Initializing create_model()
2023-01-15 18:43:51,944:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DB89FD2CE0>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize='deprecated', positive=False,
                random_state=42, solver='auto', tol=0.001), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:43:51,944:INFO:Checking exceptions
2023-01-15 18:43:51,945:INFO:Importing libraries
2023-01-15 18:43:51,946:INFO:Copying training dataset
2023-01-15 18:43:51,951:INFO:Defining folds
2023-01-15 18:43:51,951:INFO:Declaring metric variables
2023-01-15 18:43:51,951:INFO:Importing untrained model
2023-01-15 18:43:51,951:INFO:Declaring custom model
2023-01-15 18:43:51,952:INFO:Ridge Classifier Imported successfully
2023-01-15 18:43:51,952:INFO:Starting cross validation
2023-01-15 18:43:51,954:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:43:53,078:INFO:Calculating mean and std
2023-01-15 18:43:53,079:INFO:Creating metrics dataframe
2023-01-15 18:43:53,082:INFO:Finalizing model
2023-01-15 18:43:53,817:INFO:Uploading results into container
2023-01-15 18:43:53,819:INFO:_master_model_container: 22
2023-01-15 18:43:53,819:INFO:_display_container: 13
2023-01-15 18:43:53,819:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize='deprecated', positive=False,
                random_state=42, solver='auto', tol=0.001)
2023-01-15 18:43:53,819:INFO:create_model() successfully completed......................................
2023-01-15 18:43:53,944:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:5119: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  mean_scores["Index"] = i

2023-01-15 18:43:53,946:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:5120: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  mean_scores["Model Name"] = model_name

2023-01-15 18:43:53,952:INFO:Initializing create_model()
2023-01-15 18:43:53,952:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DB89FD2CE0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=42, verbose=0, warm_start=False), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:43:53,952:INFO:Checking exceptions
2023-01-15 18:43:53,956:INFO:Importing libraries
2023-01-15 18:43:53,957:INFO:Copying training dataset
2023-01-15 18:43:53,965:INFO:Defining folds
2023-01-15 18:43:53,965:INFO:Declaring metric variables
2023-01-15 18:43:53,966:INFO:Importing untrained model
2023-01-15 18:43:53,966:INFO:Declaring custom model
2023-01-15 18:43:53,967:INFO:Random Forest Classifier Imported successfully
2023-01-15 18:43:53,967:INFO:Starting cross validation
2023-01-15 18:43:53,970:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:43:57,683:INFO:Calculating mean and std
2023-01-15 18:43:57,684:INFO:Creating metrics dataframe
2023-01-15 18:43:57,687:INFO:Finalizing model
2023-01-15 18:43:59,213:INFO:Uploading results into container
2023-01-15 18:43:59,215:INFO:_master_model_container: 22
2023-01-15 18:43:59,215:INFO:_display_container: 14
2023-01-15 18:43:59,216:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=42, verbose=0, warm_start=False)
2023-01-15 18:43:59,216:INFO:create_model() successfully completed......................................
2023-01-15 18:43:59,351:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:5119: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  mean_scores["Index"] = i

2023-01-15 18:43:59,352:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:5120: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  mean_scores["Model Name"] = model_name

2023-01-15 18:43:59,362:INFO:Initializing create_model()
2023-01-15 18:43:59,363:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DB89FD2CE0>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:43:59,363:INFO:Checking exceptions
2023-01-15 18:43:59,366:INFO:Importing libraries
2023-01-15 18:43:59,366:INFO:Copying training dataset
2023-01-15 18:43:59,380:INFO:Defining folds
2023-01-15 18:43:59,381:INFO:Declaring metric variables
2023-01-15 18:43:59,381:INFO:Importing untrained model
2023-01-15 18:43:59,381:INFO:Declaring custom model
2023-01-15 18:43:59,382:INFO:Quadratic Discriminant Analysis Imported successfully
2023-01-15 18:43:59,383:INFO:Starting cross validation
2023-01-15 18:43:59,387:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:44:00,121:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-01-15 18:44:00,146:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-01-15 18:44:00,154:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-01-15 18:44:00,168:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-01-15 18:44:00,811:INFO:Calculating mean and std
2023-01-15 18:44:00,812:INFO:Creating metrics dataframe
2023-01-15 18:44:00,817:INFO:Finalizing model
2023-01-15 18:44:01,682:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-01-15 18:44:01,702:INFO:Uploading results into container
2023-01-15 18:44:01,703:INFO:_master_model_container: 22
2023-01-15 18:44:01,703:INFO:_display_container: 15
2023-01-15 18:44:01,704:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-01-15 18:44:01,704:INFO:create_model() successfully completed......................................
2023-01-15 18:44:01,894:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:5119: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  mean_scores["Index"] = i

2023-01-15 18:44:01,897:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:5120: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  mean_scores["Model Name"] = model_name

2023-01-15 18:44:01,905:INFO:Initializing create_model()
2023-01-15 18:44:01,905:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DB89FD2CE0>, estimator=AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:44:01,905:INFO:Checking exceptions
2023-01-15 18:44:01,913:INFO:Importing libraries
2023-01-15 18:44:01,913:INFO:Copying training dataset
2023-01-15 18:44:01,920:INFO:Defining folds
2023-01-15 18:44:01,920:INFO:Declaring metric variables
2023-01-15 18:44:01,920:INFO:Importing untrained model
2023-01-15 18:44:01,921:INFO:Declaring custom model
2023-01-15 18:44:01,921:INFO:Ada Boost Classifier Imported successfully
2023-01-15 18:44:01,922:INFO:Starting cross validation
2023-01-15 18:44:01,931:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:44:04,705:INFO:Calculating mean and std
2023-01-15 18:44:04,706:INFO:Creating metrics dataframe
2023-01-15 18:44:04,709:INFO:Finalizing model
2023-01-15 18:44:06,535:INFO:Uploading results into container
2023-01-15 18:44:06,536:INFO:_master_model_container: 22
2023-01-15 18:44:06,536:INFO:_display_container: 16
2023-01-15 18:44:06,536:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2023-01-15 18:44:06,536:INFO:create_model() successfully completed......................................
2023-01-15 18:44:06,622:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:5119: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  mean_scores["Index"] = i

2023-01-15 18:44:06,625:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:5120: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  mean_scores["Model Name"] = model_name

2023-01-15 18:44:06,631:INFO:Initializing create_model()
2023-01-15 18:44:06,631:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DB89FD2CE0>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:44:06,632:INFO:Checking exceptions
2023-01-15 18:44:06,634:INFO:Importing libraries
2023-01-15 18:44:06,634:INFO:Copying training dataset
2023-01-15 18:44:06,639:INFO:Defining folds
2023-01-15 18:44:06,639:INFO:Declaring metric variables
2023-01-15 18:44:06,640:INFO:Importing untrained model
2023-01-15 18:44:06,640:INFO:Declaring custom model
2023-01-15 18:44:06,642:INFO:Gradient Boosting Classifier Imported successfully
2023-01-15 18:44:06,642:INFO:Starting cross validation
2023-01-15 18:44:06,644:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:44:12,205:INFO:Calculating mean and std
2023-01-15 18:44:12,205:INFO:Creating metrics dataframe
2023-01-15 18:44:12,208:INFO:Finalizing model
2023-01-15 18:44:16,874:INFO:Uploading results into container
2023-01-15 18:44:16,875:INFO:_master_model_container: 22
2023-01-15 18:44:16,875:INFO:_display_container: 17
2023-01-15 18:44:16,876:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-01-15 18:44:16,876:INFO:create_model() successfully completed......................................
2023-01-15 18:44:16,947:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:5119: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  mean_scores["Index"] = i

2023-01-15 18:44:16,948:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:5120: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  mean_scores["Model Name"] = model_name

2023-01-15 18:44:16,953:INFO:Initializing create_model()
2023-01-15 18:44:16,954:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DB89FD2CE0>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:44:16,954:INFO:Checking exceptions
2023-01-15 18:44:16,956:INFO:Importing libraries
2023-01-15 18:44:16,956:INFO:Copying training dataset
2023-01-15 18:44:16,961:INFO:Defining folds
2023-01-15 18:44:16,962:INFO:Declaring metric variables
2023-01-15 18:44:16,962:INFO:Importing untrained model
2023-01-15 18:44:16,962:INFO:Declaring custom model
2023-01-15 18:44:16,962:INFO:Linear Discriminant Analysis Imported successfully
2023-01-15 18:44:16,963:INFO:Starting cross validation
2023-01-15 18:44:16,965:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:44:17,808:INFO:Calculating mean and std
2023-01-15 18:44:17,808:INFO:Creating metrics dataframe
2023-01-15 18:44:17,812:INFO:Finalizing model
2023-01-15 18:44:18,429:INFO:Uploading results into container
2023-01-15 18:44:18,430:INFO:_master_model_container: 22
2023-01-15 18:44:18,430:INFO:_display_container: 18
2023-01-15 18:44:18,430:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-01-15 18:44:18,430:INFO:create_model() successfully completed......................................
2023-01-15 18:44:18,506:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:5119: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  mean_scores["Index"] = i

2023-01-15 18:44:18,507:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:5120: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  mean_scores["Model Name"] = model_name

2023-01-15 18:44:18,512:INFO:Initializing create_model()
2023-01-15 18:44:18,512:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DB89FD2CE0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=42, verbose=0, warm_start=False), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:44:18,512:INFO:Checking exceptions
2023-01-15 18:44:18,514:INFO:Importing libraries
2023-01-15 18:44:18,515:INFO:Copying training dataset
2023-01-15 18:44:18,520:INFO:Defining folds
2023-01-15 18:44:18,521:INFO:Declaring metric variables
2023-01-15 18:44:18,521:INFO:Importing untrained model
2023-01-15 18:44:18,522:INFO:Declaring custom model
2023-01-15 18:44:18,523:INFO:Extra Trees Classifier Imported successfully
2023-01-15 18:44:18,523:INFO:Starting cross validation
2023-01-15 18:44:18,525:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:44:21,298:INFO:Calculating mean and std
2023-01-15 18:44:21,298:INFO:Creating metrics dataframe
2023-01-15 18:44:21,301:INFO:Finalizing model
2023-01-15 18:44:22,437:INFO:Uploading results into container
2023-01-15 18:44:22,439:INFO:_master_model_container: 22
2023-01-15 18:44:22,439:INFO:_display_container: 19
2023-01-15 18:44:22,440:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=42, verbose=0, warm_start=False)
2023-01-15 18:44:22,440:INFO:create_model() successfully completed......................................
2023-01-15 18:44:22,549:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:5119: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  mean_scores["Index"] = i

2023-01-15 18:44:22,550:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:5120: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  mean_scores["Model Name"] = model_name

2023-01-15 18:44:22,557:INFO:Initializing create_model()
2023-01-15 18:44:22,557:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DB89FD2CE0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:44:22,557:INFO:Checking exceptions
2023-01-15 18:44:22,560:INFO:Importing libraries
2023-01-15 18:44:22,560:INFO:Copying training dataset
2023-01-15 18:44:22,568:INFO:Defining folds
2023-01-15 18:44:22,568:INFO:Declaring metric variables
2023-01-15 18:44:22,569:INFO:Importing untrained model
2023-01-15 18:44:22,569:INFO:Declaring custom model
2023-01-15 18:44:22,570:INFO:Light Gradient Boosting Machine Imported successfully
2023-01-15 18:44:22,570:INFO:Starting cross validation
2023-01-15 18:44:22,575:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:44:24,376:INFO:Calculating mean and std
2023-01-15 18:44:24,377:INFO:Creating metrics dataframe
2023-01-15 18:44:24,384:INFO:Finalizing model
2023-01-15 18:44:25,566:INFO:Uploading results into container
2023-01-15 18:44:25,570:INFO:_master_model_container: 22
2023-01-15 18:44:25,571:INFO:_display_container: 20
2023-01-15 18:44:25,572:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-01-15 18:44:25,573:INFO:create_model() successfully completed......................................
2023-01-15 18:44:25,726:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:5119: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  mean_scores["Index"] = i

2023-01-15 18:44:25,726:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:5120: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  mean_scores["Model Name"] = model_name

2023-01-15 18:44:25,733:INFO:Initializing create_model()
2023-01-15 18:44:25,734:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DB89FD2CE0>, estimator=DummyClassifier(constant=None, random_state=42, strategy='prior'), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:44:25,734:INFO:Checking exceptions
2023-01-15 18:44:25,737:INFO:Importing libraries
2023-01-15 18:44:25,737:INFO:Copying training dataset
2023-01-15 18:44:25,744:INFO:Defining folds
2023-01-15 18:44:25,744:INFO:Declaring metric variables
2023-01-15 18:44:25,744:INFO:Importing untrained model
2023-01-15 18:44:25,744:INFO:Declaring custom model
2023-01-15 18:44:25,745:INFO:Dummy Classifier Imported successfully
2023-01-15 18:44:25,746:INFO:Starting cross validation
2023-01-15 18:44:25,751:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:44:27,140:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-15 18:44:27,143:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-15 18:44:27,166:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-15 18:44:27,171:INFO:Calculating mean and std
2023-01-15 18:44:27,172:INFO:Creating metrics dataframe
2023-01-15 18:44:27,175:INFO:Finalizing model
2023-01-15 18:44:27,870:INFO:Uploading results into container
2023-01-15 18:44:27,871:INFO:_master_model_container: 22
2023-01-15 18:44:27,871:INFO:_display_container: 21
2023-01-15 18:44:27,871:INFO:DummyClassifier(constant=None, random_state=42, strategy='prior')
2023-01-15 18:44:27,871:INFO:create_model() successfully completed......................................
2023-01-15 18:44:27,953:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:5119: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  mean_scores["Index"] = i

2023-01-15 18:44:27,953:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:5120: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  mean_scores["Model Name"] = model_name

2023-01-15 18:44:27,960:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:5119: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  mean_scores["Index"] = i

2023-01-15 18:44:27,961:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:5120: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  mean_scores["Model Name"] = model_name

2023-01-15 18:44:27,969:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:5119: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  mean_scores["Index"] = i

2023-01-15 18:44:27,970:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:5120: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  mean_scores["Model Name"] = model_name

2023-01-15 18:44:27,977:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:5119: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  mean_scores["Index"] = i

2023-01-15 18:44:27,978:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:5120: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  mean_scores["Model Name"] = model_name

2023-01-15 18:44:27,984:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:5119: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  mean_scores["Index"] = i

2023-01-15 18:44:27,985:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:5120: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  mean_scores["Model Name"] = model_name

2023-01-15 18:44:27,996:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:5119: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  mean_scores["Index"] = i

2023-01-15 18:44:27,997:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:5120: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  mean_scores["Model Name"] = model_name

2023-01-15 18:44:28,019:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:5119: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  mean_scores["Index"] = i

2023-01-15 18:44:28,020:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:5120: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  mean_scores["Model Name"] = model_name

2023-01-15 18:44:28,038:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:5119: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  mean_scores["Index"] = i

2023-01-15 18:44:28,038:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:5120: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  mean_scores["Model Name"] = model_name

2023-01-15 18:49:08,249:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-01-15 18:49:08,250:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-01-15 18:49:08,250:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-01-15 18:49:08,250:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-01-15 18:49:08,829:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-01-15 18:49:09,388:INFO:PyCaret ClassificationExperiment
2023-01-15 18:49:09,388:INFO:Logging name: stroke
2023-01-15 18:49:09,388:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-01-15 18:49:09,388:INFO:version 3.0.0.rc8
2023-01-15 18:49:09,388:INFO:Initializing setup()
2023-01-15 18:49:09,388:INFO:self.USI: 408a
2023-01-15 18:49:09,388:INFO:self._variable_keys: {'USI', '_available_plots', 'data', 'y', 'X_test', 'gpu_param', 'seed', 'memory', 'n_jobs_param', 'y_train', 'fold_shuffle_param', 'gpu_n_jobs_param', 'fold_groups_param', 'fold_generator', 'fix_imbalance', 'exp_id', 'idx', 'target_param', 'is_multiclass', 'X_train', 'logging_param', 'log_plots_param', '_ml_usecase', 'pipeline', 'y_test', 'exp_name_log', 'X', 'html_param'}
2023-01-15 18:49:09,388:INFO:Checking environment
2023-01-15 18:49:09,388:INFO:python_version: 3.10.5
2023-01-15 18:49:09,388:INFO:python_build: ('tags/v3.10.5:f377153', 'Jun  6 2022 16:14:13')
2023-01-15 18:49:09,388:INFO:machine: AMD64
2023-01-15 18:49:09,388:INFO:platform: Windows-10-10.0.19045-SP0
2023-01-15 18:49:09,395:INFO:Memory: svmem(total=8494747648, available=2219048960, percent=73.9, used=6275698688, free=2219048960)
2023-01-15 18:49:09,395:INFO:Physical Core: 4
2023-01-15 18:49:09,395:INFO:Logical Core: 8
2023-01-15 18:49:09,395:INFO:Checking libraries
2023-01-15 18:49:09,395:INFO:System:
2023-01-15 18:49:09,395:INFO:    python: 3.10.5 (tags/v3.10.5:f377153, Jun  6 2022, 16:14:13) [MSC v.1929 64 bit (AMD64)]
2023-01-15 18:49:09,395:INFO:executable: c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\Scripts\python.exe
2023-01-15 18:49:09,395:INFO:   machine: Windows-10-10.0.19045-SP0
2023-01-15 18:49:09,395:INFO:PyCaret required dependencies:
2023-01-15 18:49:09,396:INFO:                 pip: 22.3.1
2023-01-15 18:49:09,396:INFO:          setuptools: 65.7.0
2023-01-15 18:49:09,396:INFO:             pycaret: 3.0.0rc8
2023-01-15 18:49:09,396:INFO:             IPython: 8.8.0
2023-01-15 18:49:09,396:INFO:          ipywidgets: 8.0.4
2023-01-15 18:49:09,396:INFO:                tqdm: 4.64.1
2023-01-15 18:49:09,396:INFO:               numpy: 1.23.5
2023-01-15 18:49:09,396:INFO:              pandas: 1.5.2
2023-01-15 18:49:09,396:INFO:              jinja2: 3.1.2
2023-01-15 18:49:09,396:INFO:               scipy: 1.10.0
2023-01-15 18:49:09,396:INFO:              joblib: 1.2.0
2023-01-15 18:49:09,396:INFO:             sklearn: 1.1.3
2023-01-15 18:49:09,397:INFO:                pyod: 1.0.7
2023-01-15 18:49:09,397:INFO:            imblearn: 0.10.1
2023-01-15 18:49:09,397:INFO:   category_encoders: 2.6.0
2023-01-15 18:49:09,397:INFO:            lightgbm: 3.3.4
2023-01-15 18:49:09,397:INFO:               numba: 0.56.4
2023-01-15 18:49:09,397:INFO:            requests: 2.28.2
2023-01-15 18:49:09,397:INFO:          matplotlib: 3.6.3
2023-01-15 18:49:09,397:INFO:          scikitplot: 0.3.7
2023-01-15 18:49:09,397:INFO:         yellowbrick: 1.5
2023-01-15 18:49:09,397:INFO:              plotly: 5.12.0
2023-01-15 18:49:09,397:INFO:             kaleido: 0.2.1
2023-01-15 18:49:09,397:INFO:         statsmodels: 0.13.5
2023-01-15 18:49:09,397:INFO:              sktime: 0.15.1
2023-01-15 18:49:09,397:INFO:               tbats: 1.1.2
2023-01-15 18:49:09,397:INFO:            pmdarima: 2.0.2
2023-01-15 18:49:09,398:INFO:              psutil: 5.9.4
2023-01-15 18:49:09,398:INFO:PyCaret optional dependencies:
2023-01-15 18:49:09,428:INFO:                shap: Not installed
2023-01-15 18:49:09,428:INFO:           interpret: Not installed
2023-01-15 18:49:09,428:INFO:                umap: Not installed
2023-01-15 18:49:09,428:INFO:    pandas_profiling: Not installed
2023-01-15 18:49:09,428:INFO:  explainerdashboard: Not installed
2023-01-15 18:49:09,428:INFO:             autoviz: Not installed
2023-01-15 18:49:09,428:INFO:           fairlearn: Not installed
2023-01-15 18:49:09,428:INFO:             xgboost: Not installed
2023-01-15 18:49:09,428:INFO:            catboost: Not installed
2023-01-15 18:49:09,428:INFO:              kmodes: Not installed
2023-01-15 18:49:09,428:INFO:             mlxtend: Not installed
2023-01-15 18:49:09,429:INFO:       statsforecast: Not installed
2023-01-15 18:49:09,429:INFO:        tune_sklearn: Not installed
2023-01-15 18:49:09,429:INFO:                 ray: Not installed
2023-01-15 18:49:09,429:INFO:            hyperopt: Not installed
2023-01-15 18:49:09,429:INFO:              optuna: Not installed
2023-01-15 18:49:09,429:INFO:               skopt: Not installed
2023-01-15 18:49:09,429:INFO:              mlflow: Not installed
2023-01-15 18:49:09,429:INFO:              gradio: Not installed
2023-01-15 18:49:09,429:INFO:             fastapi: Not installed
2023-01-15 18:49:09,429:INFO:             uvicorn: Not installed
2023-01-15 18:49:09,429:INFO:              m2cgen: Not installed
2023-01-15 18:49:09,429:INFO:           evidently: Not installed
2023-01-15 18:49:09,429:INFO:                nltk: Not installed
2023-01-15 18:49:09,429:INFO:            pyLDAvis: Not installed
2023-01-15 18:49:09,429:INFO:              gensim: Not installed
2023-01-15 18:49:09,429:INFO:               spacy: Not installed
2023-01-15 18:49:09,429:INFO:           wordcloud: Not installed
2023-01-15 18:49:09,430:INFO:            textblob: Not installed
2023-01-15 18:49:09,430:INFO:               fugue: Not installed
2023-01-15 18:49:09,430:INFO:           streamlit: Not installed
2023-01-15 18:49:09,430:INFO:             prophet: Not installed
2023-01-15 18:49:09,430:INFO:None
2023-01-15 18:49:09,430:INFO:Set up data.
2023-01-15 18:49:09,444:INFO:Set up train/test split.
2023-01-15 18:49:09,453:INFO:Set up index.
2023-01-15 18:49:09,455:INFO:Set up folding strategy.
2023-01-15 18:49:09,455:INFO:Assigning column types.
2023-01-15 18:49:09,461:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-01-15 18:49:09,515:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-01-15 18:49:09,517:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-15 18:49:09,555:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:49:09,573:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:49:09,629:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-01-15 18:49:09,630:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-15 18:49:09,664:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:49:09,665:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:49:09,665:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-01-15 18:49:09,720:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-15 18:49:09,755:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:49:09,755:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:49:09,812:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-15 18:49:09,847:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:49:09,848:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:49:09,848:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-01-15 18:49:09,968:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:49:09,969:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:49:10,104:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:49:10,104:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:49:10,109:INFO:Preparing preprocessing pipeline...
2023-01-15 18:49:10,118:INFO:Set up simple imputation.
2023-01-15 18:49:10,128:INFO:Set up encoding of ordinal features.
2023-01-15 18:49:10,136:INFO:Set up encoding of categorical features.
2023-01-15 18:49:10,136:INFO:Set up imbalanced handling.
2023-01-15 18:49:10,136:INFO:Set up column transformation.
2023-01-15 18:49:10,136:INFO:Set up feature normalization.
2023-01-15 18:49:10,671:INFO:Finished creating preprocessing pipeline.
2023-01-15 18:49:10,832:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\alepi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'hypertension',
                                             'heart_disease',
                                             'avg_glucose_level', 'bmi'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorica...
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=None,
                                                                              sampling_strategy='auto')))),
                ('transformation',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=PowerTransformer(copy=True,
                                                                 method='yeo-johnson',
                                                                 standardize=False))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2023-01-15 18:49:10,832:INFO:Creating final display dataframe.
2023-01-15 18:49:13,544:INFO:Setup _display_container:                     Description            Value
0                    Session id               42
1                        Target           stroke
2                   Target type           Binary
3           Original data shape      (15304, 11)
4        Transformed data shape      (25834, 20)
5   Transformed train set shape      (22008, 20)
6    Transformed test set shape       (3826, 20)
7              Ordinal features                2
8              Numeric features                5
9          Categorical features                5
10                   Preprocess             True
11              Imputation type           simple
12           Numeric imputation             mean
13       Categorical imputation             mode
14     Maximum one-hot encoding               25
15              Encoding method             None
16                Fix imbalance             True
17         Fix imbalance method            SMOTE
18               Transformation             True
19        Transformation method      yeo-johnson
20                    Normalize             True
21             Normalize method           zscore
22               Fold Generator  StratifiedKFold
23                  Fold Number                4
24                     CPU Jobs               -1
25                      Use GPU            False
26               Log Experiment            False
27              Experiment Name           stroke
28                          USI             408a
2023-01-15 18:49:13,638:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:49:13,638:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:49:13,734:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:49:13,734:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:49:13,735:INFO:setup() successfully completed in 4.35s...............
2023-01-15 18:49:13,795:INFO:Initializing compare_models()
2023-01-15 18:49:13,795:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017FD9292DD0>, include=None, fold=None, round=4, cross_validation=True, sort=AUC, n_select=3, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=False, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000017FD9292DD0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'AUC', 'n_select': 3, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': False, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-01-15 18:49:13,795:INFO:Checking exceptions
2023-01-15 18:49:13,809:INFO:Preparing display monitor
2023-01-15 18:49:13,817:INFO:Initializing Logistic Regression
2023-01-15 18:49:13,818:INFO:Total runtime is 1.6705195109049478e-05 minutes
2023-01-15 18:49:13,818:INFO:SubProcess create_model() called ==================================
2023-01-15 18:49:13,819:INFO:Initializing create_model()
2023-01-15 18:49:13,819:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017FD9292DD0>, estimator=lr, fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017FB4CAA0B0>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:49:13,819:INFO:Checking exceptions
2023-01-15 18:49:13,820:INFO:Importing libraries
2023-01-15 18:49:13,820:INFO:Copying training dataset
2023-01-15 18:49:13,834:INFO:Defining folds
2023-01-15 18:49:13,835:INFO:Declaring metric variables
2023-01-15 18:49:13,835:INFO:Importing untrained model
2023-01-15 18:49:13,836:INFO:Logistic Regression Imported successfully
2023-01-15 18:49:13,836:INFO:Starting cross validation
2023-01-15 18:49:13,845:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:49:19,269:INFO:Calculating mean and std
2023-01-15 18:49:19,270:INFO:Creating metrics dataframe
2023-01-15 18:49:19,279:INFO:Uploading results into container
2023-01-15 18:49:19,280:INFO:Uploading model into container now
2023-01-15 18:49:19,281:INFO:_master_model_container: 1
2023-01-15 18:49:19,282:INFO:_display_container: 2
2023-01-15 18:49:19,283:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-01-15 18:49:19,283:INFO:create_model() successfully completed......................................
2023-01-15 18:49:19,416:INFO:SubProcess create_model() end ==================================
2023-01-15 18:49:19,416:INFO:Creating metrics dataframe
2023-01-15 18:49:19,421:INFO:Initializing K Neighbors Classifier
2023-01-15 18:49:19,421:INFO:Total runtime is 0.09339581727981568 minutes
2023-01-15 18:49:19,421:INFO:SubProcess create_model() called ==================================
2023-01-15 18:49:19,422:INFO:Initializing create_model()
2023-01-15 18:49:19,422:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017FD9292DD0>, estimator=knn, fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017FB4CAA0B0>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:49:19,422:INFO:Checking exceptions
2023-01-15 18:49:19,422:INFO:Importing libraries
2023-01-15 18:49:19,422:INFO:Copying training dataset
2023-01-15 18:49:19,429:INFO:Defining folds
2023-01-15 18:49:19,429:INFO:Declaring metric variables
2023-01-15 18:49:19,430:INFO:Importing untrained model
2023-01-15 18:49:19,431:INFO:K Neighbors Classifier Imported successfully
2023-01-15 18:49:19,431:INFO:Starting cross validation
2023-01-15 18:49:19,433:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:49:23,872:INFO:Calculating mean and std
2023-01-15 18:49:23,872:INFO:Creating metrics dataframe
2023-01-15 18:49:23,880:INFO:Uploading results into container
2023-01-15 18:49:23,881:INFO:Uploading model into container now
2023-01-15 18:49:23,881:INFO:_master_model_container: 2
2023-01-15 18:49:23,882:INFO:_display_container: 2
2023-01-15 18:49:23,882:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-01-15 18:49:23,882:INFO:create_model() successfully completed......................................
2023-01-15 18:49:23,975:INFO:SubProcess create_model() end ==================================
2023-01-15 18:49:23,975:INFO:Creating metrics dataframe
2023-01-15 18:49:23,984:INFO:Initializing Naive Bayes
2023-01-15 18:49:23,985:INFO:Total runtime is 0.16945868333180747 minutes
2023-01-15 18:49:23,985:INFO:SubProcess create_model() called ==================================
2023-01-15 18:49:23,985:INFO:Initializing create_model()
2023-01-15 18:49:23,985:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017FD9292DD0>, estimator=nb, fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017FB4CAA0B0>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:49:23,985:INFO:Checking exceptions
2023-01-15 18:49:23,986:INFO:Importing libraries
2023-01-15 18:49:23,986:INFO:Copying training dataset
2023-01-15 18:49:23,991:INFO:Defining folds
2023-01-15 18:49:23,991:INFO:Declaring metric variables
2023-01-15 18:49:23,991:INFO:Importing untrained model
2023-01-15 18:49:23,992:INFO:Naive Bayes Imported successfully
2023-01-15 18:49:23,992:INFO:Starting cross validation
2023-01-15 18:49:23,995:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:49:25,331:INFO:Calculating mean and std
2023-01-15 18:49:25,332:INFO:Creating metrics dataframe
2023-01-15 18:49:25,337:INFO:Uploading results into container
2023-01-15 18:49:25,338:INFO:Uploading model into container now
2023-01-15 18:49:25,338:INFO:_master_model_container: 3
2023-01-15 18:49:25,338:INFO:_display_container: 2
2023-01-15 18:49:25,338:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-01-15 18:49:25,339:INFO:create_model() successfully completed......................................
2023-01-15 18:49:25,417:INFO:SubProcess create_model() end ==================================
2023-01-15 18:49:25,417:INFO:Creating metrics dataframe
2023-01-15 18:49:25,425:INFO:Initializing Decision Tree Classifier
2023-01-15 18:49:25,425:INFO:Total runtime is 0.1934694568316142 minutes
2023-01-15 18:49:25,425:INFO:SubProcess create_model() called ==================================
2023-01-15 18:49:25,425:INFO:Initializing create_model()
2023-01-15 18:49:25,425:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017FD9292DD0>, estimator=dt, fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017FB4CAA0B0>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:49:25,425:INFO:Checking exceptions
2023-01-15 18:49:25,426:INFO:Importing libraries
2023-01-15 18:49:25,426:INFO:Copying training dataset
2023-01-15 18:49:25,432:INFO:Defining folds
2023-01-15 18:49:25,432:INFO:Declaring metric variables
2023-01-15 18:49:25,432:INFO:Importing untrained model
2023-01-15 18:49:25,433:INFO:Decision Tree Classifier Imported successfully
2023-01-15 18:49:25,433:INFO:Starting cross validation
2023-01-15 18:49:25,436:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:49:26,629:INFO:Calculating mean and std
2023-01-15 18:49:26,630:INFO:Creating metrics dataframe
2023-01-15 18:49:26,635:INFO:Uploading results into container
2023-01-15 18:49:26,635:INFO:Uploading model into container now
2023-01-15 18:49:26,636:INFO:_master_model_container: 4
2023-01-15 18:49:26,636:INFO:_display_container: 2
2023-01-15 18:49:26,636:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=42, splitter='best')
2023-01-15 18:49:26,637:INFO:create_model() successfully completed......................................
2023-01-15 18:49:26,710:INFO:SubProcess create_model() end ==================================
2023-01-15 18:49:26,710:INFO:Creating metrics dataframe
2023-01-15 18:49:26,717:INFO:Initializing SVM - Linear Kernel
2023-01-15 18:49:26,717:INFO:Total runtime is 0.21500281095504764 minutes
2023-01-15 18:49:26,717:INFO:SubProcess create_model() called ==================================
2023-01-15 18:49:26,718:INFO:Initializing create_model()
2023-01-15 18:49:26,718:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017FD9292DD0>, estimator=svm, fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017FB4CAA0B0>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:49:26,718:INFO:Checking exceptions
2023-01-15 18:49:26,718:INFO:Importing libraries
2023-01-15 18:49:26,718:INFO:Copying training dataset
2023-01-15 18:49:26,723:INFO:Defining folds
2023-01-15 18:49:26,723:INFO:Declaring metric variables
2023-01-15 18:49:26,724:INFO:Importing untrained model
2023-01-15 18:49:26,724:INFO:SVM - Linear Kernel Imported successfully
2023-01-15 18:49:26,725:INFO:Starting cross validation
2023-01-15 18:49:26,727:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:49:27,724:INFO:Calculating mean and std
2023-01-15 18:49:27,725:INFO:Creating metrics dataframe
2023-01-15 18:49:27,731:INFO:Uploading results into container
2023-01-15 18:49:27,732:INFO:Uploading model into container now
2023-01-15 18:49:27,733:INFO:_master_model_container: 5
2023-01-15 18:49:27,733:INFO:_display_container: 2
2023-01-15 18:49:27,734:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-01-15 18:49:27,734:INFO:create_model() successfully completed......................................
2023-01-15 18:49:27,822:INFO:SubProcess create_model() end ==================================
2023-01-15 18:49:27,822:INFO:Creating metrics dataframe
2023-01-15 18:49:27,831:INFO:Initializing Ridge Classifier
2023-01-15 18:49:27,831:INFO:Total runtime is 0.233562970161438 minutes
2023-01-15 18:49:27,832:INFO:SubProcess create_model() called ==================================
2023-01-15 18:49:27,832:INFO:Initializing create_model()
2023-01-15 18:49:27,832:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017FD9292DD0>, estimator=ridge, fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017FB4CAA0B0>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:49:27,832:INFO:Checking exceptions
2023-01-15 18:49:27,833:INFO:Importing libraries
2023-01-15 18:49:27,833:INFO:Copying training dataset
2023-01-15 18:49:27,838:INFO:Defining folds
2023-01-15 18:49:27,838:INFO:Declaring metric variables
2023-01-15 18:49:27,839:INFO:Importing untrained model
2023-01-15 18:49:27,839:INFO:Ridge Classifier Imported successfully
2023-01-15 18:49:27,840:INFO:Starting cross validation
2023-01-15 18:49:27,842:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:49:28,735:INFO:Calculating mean and std
2023-01-15 18:49:28,736:INFO:Creating metrics dataframe
2023-01-15 18:49:28,740:INFO:Uploading results into container
2023-01-15 18:49:28,741:INFO:Uploading model into container now
2023-01-15 18:49:28,742:INFO:_master_model_container: 6
2023-01-15 18:49:28,742:INFO:_display_container: 2
2023-01-15 18:49:28,742:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize='deprecated', positive=False,
                random_state=42, solver='auto', tol=0.001)
2023-01-15 18:49:28,742:INFO:create_model() successfully completed......................................
2023-01-15 18:49:28,815:INFO:SubProcess create_model() end ==================================
2023-01-15 18:49:28,815:INFO:Creating metrics dataframe
2023-01-15 18:49:28,821:INFO:Initializing Random Forest Classifier
2023-01-15 18:49:28,822:INFO:Total runtime is 0.2500795880953471 minutes
2023-01-15 18:49:28,822:INFO:SubProcess create_model() called ==================================
2023-01-15 18:49:28,822:INFO:Initializing create_model()
2023-01-15 18:49:28,822:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017FD9292DD0>, estimator=rf, fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017FB4CAA0B0>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:49:28,822:INFO:Checking exceptions
2023-01-15 18:49:28,822:INFO:Importing libraries
2023-01-15 18:49:28,822:INFO:Copying training dataset
2023-01-15 18:49:28,827:INFO:Defining folds
2023-01-15 18:49:28,827:INFO:Declaring metric variables
2023-01-15 18:49:28,828:INFO:Importing untrained model
2023-01-15 18:49:28,829:INFO:Random Forest Classifier Imported successfully
2023-01-15 18:49:28,829:INFO:Starting cross validation
2023-01-15 18:49:28,832:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:49:31,945:INFO:Calculating mean and std
2023-01-15 18:49:31,946:INFO:Creating metrics dataframe
2023-01-15 18:49:31,956:INFO:Uploading results into container
2023-01-15 18:49:31,958:INFO:Uploading model into container now
2023-01-15 18:49:31,959:INFO:_master_model_container: 7
2023-01-15 18:49:31,959:INFO:_display_container: 2
2023-01-15 18:49:31,960:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=42, verbose=0, warm_start=False)
2023-01-15 18:49:31,960:INFO:create_model() successfully completed......................................
2023-01-15 18:49:32,092:INFO:SubProcess create_model() end ==================================
2023-01-15 18:49:32,092:INFO:Creating metrics dataframe
2023-01-15 18:49:32,108:INFO:Initializing Quadratic Discriminant Analysis
2023-01-15 18:49:32,108:INFO:Total runtime is 0.3048532962799072 minutes
2023-01-15 18:49:32,109:INFO:SubProcess create_model() called ==================================
2023-01-15 18:49:32,110:INFO:Initializing create_model()
2023-01-15 18:49:32,110:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017FD9292DD0>, estimator=qda, fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017FB4CAA0B0>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:49:32,110:INFO:Checking exceptions
2023-01-15 18:49:32,110:INFO:Importing libraries
2023-01-15 18:49:32,111:INFO:Copying training dataset
2023-01-15 18:49:32,121:INFO:Defining folds
2023-01-15 18:49:32,121:INFO:Declaring metric variables
2023-01-15 18:49:32,121:INFO:Importing untrained model
2023-01-15 18:49:32,122:INFO:Quadratic Discriminant Analysis Imported successfully
2023-01-15 18:49:32,122:INFO:Starting cross validation
2023-01-15 18:49:32,125:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:49:32,942:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-01-15 18:49:32,973:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-01-15 18:49:32,977:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-01-15 18:49:32,977:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-01-15 18:49:33,586:INFO:Calculating mean and std
2023-01-15 18:49:33,587:INFO:Creating metrics dataframe
2023-01-15 18:49:33,592:INFO:Uploading results into container
2023-01-15 18:49:33,593:INFO:Uploading model into container now
2023-01-15 18:49:33,593:INFO:_master_model_container: 8
2023-01-15 18:49:33,593:INFO:_display_container: 2
2023-01-15 18:49:33,593:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-01-15 18:49:33,593:INFO:create_model() successfully completed......................................
2023-01-15 18:49:33,676:INFO:SubProcess create_model() end ==================================
2023-01-15 18:49:33,676:INFO:Creating metrics dataframe
2023-01-15 18:49:33,684:INFO:Initializing Ada Boost Classifier
2023-01-15 18:49:33,684:INFO:Total runtime is 0.33110474745432533 minutes
2023-01-15 18:49:33,685:INFO:SubProcess create_model() called ==================================
2023-01-15 18:49:33,685:INFO:Initializing create_model()
2023-01-15 18:49:33,685:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017FD9292DD0>, estimator=ada, fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017FB4CAA0B0>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:49:33,685:INFO:Checking exceptions
2023-01-15 18:49:33,685:INFO:Importing libraries
2023-01-15 18:49:33,685:INFO:Copying training dataset
2023-01-15 18:49:33,690:INFO:Defining folds
2023-01-15 18:49:33,691:INFO:Declaring metric variables
2023-01-15 18:49:33,691:INFO:Importing untrained model
2023-01-15 18:49:33,691:INFO:Ada Boost Classifier Imported successfully
2023-01-15 18:49:33,692:INFO:Starting cross validation
2023-01-15 18:49:33,694:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:49:36,288:INFO:Calculating mean and std
2023-01-15 18:49:36,288:INFO:Creating metrics dataframe
2023-01-15 18:49:36,293:INFO:Uploading results into container
2023-01-15 18:49:36,294:INFO:Uploading model into container now
2023-01-15 18:49:36,295:INFO:_master_model_container: 9
2023-01-15 18:49:36,295:INFO:_display_container: 2
2023-01-15 18:49:36,295:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2023-01-15 18:49:36,295:INFO:create_model() successfully completed......................................
2023-01-15 18:49:36,383:INFO:SubProcess create_model() end ==================================
2023-01-15 18:49:36,383:INFO:Creating metrics dataframe
2023-01-15 18:49:36,391:INFO:Initializing Gradient Boosting Classifier
2023-01-15 18:49:36,392:INFO:Total runtime is 0.3762463927268982 minutes
2023-01-15 18:49:36,392:INFO:SubProcess create_model() called ==================================
2023-01-15 18:49:36,392:INFO:Initializing create_model()
2023-01-15 18:49:36,392:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017FD9292DD0>, estimator=gbc, fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017FB4CAA0B0>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:49:36,392:INFO:Checking exceptions
2023-01-15 18:49:36,393:INFO:Importing libraries
2023-01-15 18:49:36,393:INFO:Copying training dataset
2023-01-15 18:49:36,400:INFO:Defining folds
2023-01-15 18:49:36,400:INFO:Declaring metric variables
2023-01-15 18:49:36,400:INFO:Importing untrained model
2023-01-15 18:49:36,401:INFO:Gradient Boosting Classifier Imported successfully
2023-01-15 18:49:36,402:INFO:Starting cross validation
2023-01-15 18:49:36,405:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:49:42,493:INFO:Calculating mean and std
2023-01-15 18:49:42,494:INFO:Creating metrics dataframe
2023-01-15 18:49:42,498:INFO:Uploading results into container
2023-01-15 18:49:42,500:INFO:Uploading model into container now
2023-01-15 18:49:42,500:INFO:_master_model_container: 10
2023-01-15 18:49:42,500:INFO:_display_container: 2
2023-01-15 18:49:42,501:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-01-15 18:49:42,501:INFO:create_model() successfully completed......................................
2023-01-15 18:49:42,577:INFO:SubProcess create_model() end ==================================
2023-01-15 18:49:42,577:INFO:Creating metrics dataframe
2023-01-15 18:49:42,586:INFO:Initializing Linear Discriminant Analysis
2023-01-15 18:49:42,586:INFO:Total runtime is 0.47948111295700074 minutes
2023-01-15 18:49:42,586:INFO:SubProcess create_model() called ==================================
2023-01-15 18:49:42,587:INFO:Initializing create_model()
2023-01-15 18:49:42,587:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017FD9292DD0>, estimator=lda, fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017FB4CAA0B0>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:49:42,587:INFO:Checking exceptions
2023-01-15 18:49:42,587:INFO:Importing libraries
2023-01-15 18:49:42,587:INFO:Copying training dataset
2023-01-15 18:49:42,592:INFO:Defining folds
2023-01-15 18:49:42,593:INFO:Declaring metric variables
2023-01-15 18:49:42,593:INFO:Importing untrained model
2023-01-15 18:49:42,593:INFO:Linear Discriminant Analysis Imported successfully
2023-01-15 18:49:42,594:INFO:Starting cross validation
2023-01-15 18:49:42,596:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:49:43,850:INFO:Calculating mean and std
2023-01-15 18:49:43,851:INFO:Creating metrics dataframe
2023-01-15 18:49:43,857:INFO:Uploading results into container
2023-01-15 18:49:43,858:INFO:Uploading model into container now
2023-01-15 18:49:43,858:INFO:_master_model_container: 11
2023-01-15 18:49:43,858:INFO:_display_container: 2
2023-01-15 18:49:43,859:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-01-15 18:49:43,859:INFO:create_model() successfully completed......................................
2023-01-15 18:49:43,946:INFO:SubProcess create_model() end ==================================
2023-01-15 18:49:43,946:INFO:Creating metrics dataframe
2023-01-15 18:49:43,955:INFO:Initializing Extra Trees Classifier
2023-01-15 18:49:43,956:INFO:Total runtime is 0.5023189465204875 minutes
2023-01-15 18:49:43,956:INFO:SubProcess create_model() called ==================================
2023-01-15 18:49:43,956:INFO:Initializing create_model()
2023-01-15 18:49:43,956:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017FD9292DD0>, estimator=et, fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017FB4CAA0B0>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:49:43,956:INFO:Checking exceptions
2023-01-15 18:49:43,957:INFO:Importing libraries
2023-01-15 18:49:43,957:INFO:Copying training dataset
2023-01-15 18:49:43,962:INFO:Defining folds
2023-01-15 18:49:43,962:INFO:Declaring metric variables
2023-01-15 18:49:43,962:INFO:Importing untrained model
2023-01-15 18:49:43,963:INFO:Extra Trees Classifier Imported successfully
2023-01-15 18:49:43,963:INFO:Starting cross validation
2023-01-15 18:49:43,967:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:49:47,251:INFO:Calculating mean and std
2023-01-15 18:49:47,252:INFO:Creating metrics dataframe
2023-01-15 18:49:47,258:INFO:Uploading results into container
2023-01-15 18:49:47,258:INFO:Uploading model into container now
2023-01-15 18:49:47,259:INFO:_master_model_container: 12
2023-01-15 18:49:47,259:INFO:_display_container: 2
2023-01-15 18:49:47,260:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=42, verbose=0, warm_start=False)
2023-01-15 18:49:47,260:INFO:create_model() successfully completed......................................
2023-01-15 18:49:47,345:INFO:SubProcess create_model() end ==================================
2023-01-15 18:49:47,346:INFO:Creating metrics dataframe
2023-01-15 18:49:47,354:INFO:Initializing Light Gradient Boosting Machine
2023-01-15 18:49:47,354:INFO:Total runtime is 0.5589532375335693 minutes
2023-01-15 18:49:47,354:INFO:SubProcess create_model() called ==================================
2023-01-15 18:49:47,355:INFO:Initializing create_model()
2023-01-15 18:49:47,355:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017FD9292DD0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017FB4CAA0B0>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:49:47,355:INFO:Checking exceptions
2023-01-15 18:49:47,355:INFO:Importing libraries
2023-01-15 18:49:47,355:INFO:Copying training dataset
2023-01-15 18:49:47,360:INFO:Defining folds
2023-01-15 18:49:47,360:INFO:Declaring metric variables
2023-01-15 18:49:47,361:INFO:Importing untrained model
2023-01-15 18:49:47,361:INFO:Light Gradient Boosting Machine Imported successfully
2023-01-15 18:49:47,362:INFO:Starting cross validation
2023-01-15 18:49:47,364:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:49:49,292:INFO:Calculating mean and std
2023-01-15 18:49:49,293:INFO:Creating metrics dataframe
2023-01-15 18:49:49,298:INFO:Uploading results into container
2023-01-15 18:49:49,298:INFO:Uploading model into container now
2023-01-15 18:49:49,299:INFO:_master_model_container: 13
2023-01-15 18:49:49,299:INFO:_display_container: 2
2023-01-15 18:49:49,300:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-01-15 18:49:49,300:INFO:create_model() successfully completed......................................
2023-01-15 18:49:49,379:INFO:SubProcess create_model() end ==================================
2023-01-15 18:49:49,379:INFO:Creating metrics dataframe
2023-01-15 18:49:49,387:INFO:Initializing Dummy Classifier
2023-01-15 18:49:49,387:INFO:Total runtime is 0.592836586634318 minutes
2023-01-15 18:49:49,387:INFO:SubProcess create_model() called ==================================
2023-01-15 18:49:49,387:INFO:Initializing create_model()
2023-01-15 18:49:49,387:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017FD9292DD0>, estimator=dummy, fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017FB4CAA0B0>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:49:49,388:INFO:Checking exceptions
2023-01-15 18:49:49,388:INFO:Importing libraries
2023-01-15 18:49:49,388:INFO:Copying training dataset
2023-01-15 18:49:49,393:INFO:Defining folds
2023-01-15 18:49:49,393:INFO:Declaring metric variables
2023-01-15 18:49:49,393:INFO:Importing untrained model
2023-01-15 18:49:49,394:INFO:Dummy Classifier Imported successfully
2023-01-15 18:49:49,394:INFO:Starting cross validation
2023-01-15 18:49:49,397:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:49:50,455:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-15 18:49:50,460:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-15 18:49:50,466:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-15 18:49:50,472:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-15 18:49:50,478:INFO:Calculating mean and std
2023-01-15 18:49:50,478:INFO:Creating metrics dataframe
2023-01-15 18:49:50,483:INFO:Uploading results into container
2023-01-15 18:49:50,484:INFO:Uploading model into container now
2023-01-15 18:49:50,484:INFO:_master_model_container: 14
2023-01-15 18:49:50,485:INFO:_display_container: 2
2023-01-15 18:49:50,485:INFO:DummyClassifier(constant=None, random_state=42, strategy='prior')
2023-01-15 18:49:50,485:INFO:create_model() successfully completed......................................
2023-01-15 18:49:50,559:INFO:SubProcess create_model() end ==================================
2023-01-15 18:49:50,559:INFO:Creating metrics dataframe
2023-01-15 18:49:50,568:INFO:Initializing create_model()
2023-01-15 18:49:50,568:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017FD9292DD0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:49:50,569:INFO:Checking exceptions
2023-01-15 18:49:50,571:INFO:Importing libraries
2023-01-15 18:49:50,571:INFO:Copying training dataset
2023-01-15 18:49:50,576:INFO:Defining folds
2023-01-15 18:49:50,576:INFO:Declaring metric variables
2023-01-15 18:49:50,576:INFO:Importing untrained model
2023-01-15 18:49:50,576:INFO:Declaring custom model
2023-01-15 18:49:50,577:INFO:Logistic Regression Imported successfully
2023-01-15 18:49:50,580:INFO:Cross validation set to False
2023-01-15 18:49:50,580:INFO:Fitting Model
2023-01-15 18:49:51,338:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-01-15 18:49:51,339:INFO:create_model() successfully completed......................................
2023-01-15 18:49:51,420:INFO:Initializing create_model()
2023-01-15 18:49:51,420:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017FD9292DD0>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:49:51,420:INFO:Checking exceptions
2023-01-15 18:49:51,422:INFO:Importing libraries
2023-01-15 18:49:51,422:INFO:Copying training dataset
2023-01-15 18:49:51,428:INFO:Defining folds
2023-01-15 18:49:51,428:INFO:Declaring metric variables
2023-01-15 18:49:51,428:INFO:Importing untrained model
2023-01-15 18:49:51,428:INFO:Declaring custom model
2023-01-15 18:49:51,429:INFO:Linear Discriminant Analysis Imported successfully
2023-01-15 18:49:51,431:INFO:Cross validation set to False
2023-01-15 18:49:51,431:INFO:Fitting Model
2023-01-15 18:49:51,995:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-01-15 18:49:51,995:INFO:create_model() successfully completed......................................
2023-01-15 18:49:52,064:INFO:Initializing create_model()
2023-01-15 18:49:52,064:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017FD9292DD0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:49:52,065:INFO:Checking exceptions
2023-01-15 18:49:52,066:INFO:Importing libraries
2023-01-15 18:49:52,066:INFO:Copying training dataset
2023-01-15 18:49:52,071:INFO:Defining folds
2023-01-15 18:49:52,071:INFO:Declaring metric variables
2023-01-15 18:49:52,071:INFO:Importing untrained model
2023-01-15 18:49:52,071:INFO:Declaring custom model
2023-01-15 18:49:52,072:INFO:Light Gradient Boosting Machine Imported successfully
2023-01-15 18:49:52,074:INFO:Cross validation set to False
2023-01-15 18:49:52,074:INFO:Fitting Model
2023-01-15 18:49:52,825:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-01-15 18:49:52,825:INFO:create_model() successfully completed......................................
2023-01-15 18:49:52,957:INFO:_master_model_container: 14
2023-01-15 18:49:52,957:INFO:_display_container: 2
2023-01-15 18:49:52,958:INFO:[LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)]
2023-01-15 18:49:52,959:INFO:compare_models() successfully completed......................................
2023-01-15 18:49:53,057:INFO:Initializing tune_model()
2023-01-15 18:49:53,058:INFO:tune_model(estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, n_iter=30, custom_grid=None, optimize=AUC, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017FD9292DD0>)
2023-01-15 18:49:53,058:INFO:Checking exceptions
2023-01-15 18:49:53,098:INFO:Copying training dataset
2023-01-15 18:49:53,113:INFO:Checking base model
2023-01-15 18:49:53,113:INFO:Base model : Logistic Regression
2023-01-15 18:49:53,119:INFO:Declaring metric variables
2023-01-15 18:49:53,128:INFO:Defining Hyperparameters
2023-01-15 18:49:53,262:INFO:Tuning with n_jobs=-1
2023-01-15 18:49:53,262:INFO:Initializing RandomizedSearchCV
2023-01-15 18:50:22,280:INFO:best_params: {'actual_estimator__class_weight': {}, 'actual_estimator__C': 0.095}
2023-01-15 18:50:22,282:INFO:Hyperparameter search completed
2023-01-15 18:50:22,282:INFO:SubProcess create_model() called ==================================
2023-01-15 18:50:22,283:INFO:Initializing create_model()
2023-01-15 18:50:22,283:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017FD9292DD0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017FB517EAA0>, model_only=True, return_train_score=False, kwargs={'class_weight': {}, 'C': 0.095})
2023-01-15 18:50:22,283:INFO:Checking exceptions
2023-01-15 18:50:22,283:INFO:Importing libraries
2023-01-15 18:50:22,283:INFO:Copying training dataset
2023-01-15 18:50:22,289:INFO:Defining folds
2023-01-15 18:50:22,290:INFO:Declaring metric variables
2023-01-15 18:50:22,295:INFO:Importing untrained model
2023-01-15 18:50:22,295:INFO:Declaring custom model
2023-01-15 18:50:22,301:INFO:Logistic Regression Imported successfully
2023-01-15 18:50:22,313:INFO:Starting cross validation
2023-01-15 18:50:22,316:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:50:23,575:INFO:Calculating mean and std
2023-01-15 18:50:23,578:INFO:Creating metrics dataframe
2023-01-15 18:50:23,587:INFO:Finalizing model
2023-01-15 18:50:24,248:INFO:Uploading results into container
2023-01-15 18:50:24,249:INFO:Uploading model into container now
2023-01-15 18:50:24,250:INFO:_master_model_container: 15
2023-01-15 18:50:24,250:INFO:_display_container: 3
2023-01-15 18:50:24,250:INFO:LogisticRegression(C=0.095, class_weight={}, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-01-15 18:50:24,250:INFO:create_model() successfully completed......................................
2023-01-15 18:50:24,320:INFO:SubProcess create_model() end ==================================
2023-01-15 18:50:24,320:INFO:choose_better activated
2023-01-15 18:50:24,321:INFO:SubProcess create_model() called ==================================
2023-01-15 18:50:24,321:INFO:Initializing create_model()
2023-01-15 18:50:24,321:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017FD9292DD0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:50:24,321:INFO:Checking exceptions
2023-01-15 18:50:24,328:INFO:Importing libraries
2023-01-15 18:50:24,328:INFO:Copying training dataset
2023-01-15 18:50:24,333:INFO:Defining folds
2023-01-15 18:50:24,333:INFO:Declaring metric variables
2023-01-15 18:50:24,333:INFO:Importing untrained model
2023-01-15 18:50:24,333:INFO:Declaring custom model
2023-01-15 18:50:24,334:INFO:Logistic Regression Imported successfully
2023-01-15 18:50:24,334:INFO:Starting cross validation
2023-01-15 18:50:24,336:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:50:25,673:INFO:Calculating mean and std
2023-01-15 18:50:25,674:INFO:Creating metrics dataframe
2023-01-15 18:50:25,677:INFO:Finalizing model
2023-01-15 18:50:26,360:INFO:Uploading results into container
2023-01-15 18:50:26,361:INFO:Uploading model into container now
2023-01-15 18:50:26,362:INFO:_master_model_container: 16
2023-01-15 18:50:26,362:INFO:_display_container: 4
2023-01-15 18:50:26,362:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-01-15 18:50:26,362:INFO:create_model() successfully completed......................................
2023-01-15 18:50:26,431:INFO:SubProcess create_model() end ==================================
2023-01-15 18:50:26,431:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for AUC is 0.8741
2023-01-15 18:50:26,432:INFO:LogisticRegression(C=0.095, class_weight={}, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for AUC is 0.8746
2023-01-15 18:50:26,432:INFO:LogisticRegression(C=0.095, class_weight={}, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) is best model
2023-01-15 18:50:26,432:INFO:choose_better completed
2023-01-15 18:50:26,442:INFO:_master_model_container: 16
2023-01-15 18:50:26,442:INFO:_display_container: 3
2023-01-15 18:50:26,442:INFO:LogisticRegression(C=0.095, class_weight={}, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-01-15 18:50:26,442:INFO:tune_model() successfully completed......................................
2023-01-15 18:50:26,516:INFO:Initializing tune_model()
2023-01-15 18:50:26,516:INFO:tune_model(estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=None, round=4, n_iter=30, custom_grid=None, optimize=AUC, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017FD9292DD0>)
2023-01-15 18:50:26,516:INFO:Checking exceptions
2023-01-15 18:50:26,538:INFO:Copying training dataset
2023-01-15 18:50:26,550:INFO:Checking base model
2023-01-15 18:50:26,550:INFO:Base model : Linear Discriminant Analysis
2023-01-15 18:50:26,554:INFO:Declaring metric variables
2023-01-15 18:50:26,559:INFO:Defining Hyperparameters
2023-01-15 18:50:26,640:INFO:Tuning with n_jobs=-1
2023-01-15 18:50:26,640:INFO:Initializing RandomizedSearchCV
2023-01-15 18:50:48,053:INFO:best_params: {'actual_estimator__solver': 'lsqr', 'actual_estimator__shrinkage': 0.05}
2023-01-15 18:50:48,055:INFO:Hyperparameter search completed
2023-01-15 18:50:48,055:INFO:SubProcess create_model() called ==================================
2023-01-15 18:50:48,056:INFO:Initializing create_model()
2023-01-15 18:50:48,056:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017FD9292DD0>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017FB517EAA0>, model_only=True, return_train_score=False, kwargs={'solver': 'lsqr', 'shrinkage': 0.05})
2023-01-15 18:50:48,057:INFO:Checking exceptions
2023-01-15 18:50:48,057:INFO:Importing libraries
2023-01-15 18:50:48,057:INFO:Copying training dataset
2023-01-15 18:50:48,063:INFO:Defining folds
2023-01-15 18:50:48,063:INFO:Declaring metric variables
2023-01-15 18:50:48,069:INFO:Importing untrained model
2023-01-15 18:50:48,069:INFO:Declaring custom model
2023-01-15 18:50:48,076:INFO:Linear Discriminant Analysis Imported successfully
2023-01-15 18:50:48,087:INFO:Starting cross validation
2023-01-15 18:50:48,091:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:50:49,371:INFO:Calculating mean and std
2023-01-15 18:50:49,372:INFO:Creating metrics dataframe
2023-01-15 18:50:49,382:INFO:Finalizing model
2023-01-15 18:50:50,013:INFO:Uploading results into container
2023-01-15 18:50:50,014:INFO:Uploading model into container now
2023-01-15 18:50:50,015:INFO:_master_model_container: 17
2023-01-15 18:50:50,015:INFO:_display_container: 4
2023-01-15 18:50:50,015:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=0.05, solver='lsqr',
                           store_covariance=False, tol=0.0001)
2023-01-15 18:50:50,015:INFO:create_model() successfully completed......................................
2023-01-15 18:50:50,098:INFO:SubProcess create_model() end ==================================
2023-01-15 18:50:50,098:INFO:choose_better activated
2023-01-15 18:50:50,104:INFO:SubProcess create_model() called ==================================
2023-01-15 18:50:50,104:INFO:Initializing create_model()
2023-01-15 18:50:50,104:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017FD9292DD0>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:50:50,105:INFO:Checking exceptions
2023-01-15 18:50:50,108:INFO:Importing libraries
2023-01-15 18:50:50,108:INFO:Copying training dataset
2023-01-15 18:50:50,114:INFO:Defining folds
2023-01-15 18:50:50,114:INFO:Declaring metric variables
2023-01-15 18:50:50,114:INFO:Importing untrained model
2023-01-15 18:50:50,114:INFO:Declaring custom model
2023-01-15 18:50:50,115:INFO:Linear Discriminant Analysis Imported successfully
2023-01-15 18:50:50,115:INFO:Starting cross validation
2023-01-15 18:50:50,117:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:50:51,318:INFO:Calculating mean and std
2023-01-15 18:50:51,319:INFO:Creating metrics dataframe
2023-01-15 18:50:51,321:INFO:Finalizing model
2023-01-15 18:50:51,925:INFO:Uploading results into container
2023-01-15 18:50:51,925:INFO:Uploading model into container now
2023-01-15 18:50:51,926:INFO:_master_model_container: 18
2023-01-15 18:50:51,926:INFO:_display_container: 5
2023-01-15 18:50:51,926:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-01-15 18:50:51,926:INFO:create_model() successfully completed......................................
2023-01-15 18:50:51,993:INFO:SubProcess create_model() end ==================================
2023-01-15 18:50:51,993:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001) result for AUC is 0.8724
2023-01-15 18:50:51,994:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=0.05, solver='lsqr',
                           store_covariance=False, tol=0.0001) result for AUC is 0.8742
2023-01-15 18:50:51,994:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=0.05, solver='lsqr',
                           store_covariance=False, tol=0.0001) is best model
2023-01-15 18:50:51,994:INFO:choose_better completed
2023-01-15 18:50:52,004:INFO:_master_model_container: 18
2023-01-15 18:50:52,005:INFO:_display_container: 4
2023-01-15 18:50:52,005:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=0.05, solver='lsqr',
                           store_covariance=False, tol=0.0001)
2023-01-15 18:50:52,005:INFO:tune_model() successfully completed......................................
2023-01-15 18:50:52,074:INFO:Initializing tune_model()
2023-01-15 18:50:52,074:INFO:tune_model(estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, n_iter=30, custom_grid=None, optimize=AUC, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017FD9292DD0>)
2023-01-15 18:50:52,074:INFO:Checking exceptions
2023-01-15 18:50:52,096:INFO:Copying training dataset
2023-01-15 18:50:52,104:INFO:Checking base model
2023-01-15 18:50:52,104:INFO:Base model : Light Gradient Boosting Machine
2023-01-15 18:50:52,109:INFO:Declaring metric variables
2023-01-15 18:50:52,113:INFO:Defining Hyperparameters
2023-01-15 18:50:52,193:INFO:Tuning with n_jobs=-1
2023-01-15 18:50:52,193:INFO:Initializing RandomizedSearchCV
2023-01-15 18:51:37,307:INFO:best_params: {'actual_estimator__reg_lambda': 2, 'actual_estimator__reg_alpha': 0.3, 'actual_estimator__num_leaves': 10, 'actual_estimator__n_estimators': 10, 'actual_estimator__min_split_gain': 0.1, 'actual_estimator__min_child_samples': 71, 'actual_estimator__learning_rate': 0.01, 'actual_estimator__feature_fraction': 0.6, 'actual_estimator__bagging_freq': 2, 'actual_estimator__bagging_fraction': 0.8}
2023-01-15 18:51:37,308:INFO:Hyperparameter search completed
2023-01-15 18:51:37,308:INFO:SubProcess create_model() called ==================================
2023-01-15 18:51:37,309:INFO:Initializing create_model()
2023-01-15 18:51:37,309:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017FD9292DD0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017FD975D990>, model_only=True, return_train_score=False, kwargs={'reg_lambda': 2, 'reg_alpha': 0.3, 'num_leaves': 10, 'n_estimators': 10, 'min_split_gain': 0.1, 'min_child_samples': 71, 'learning_rate': 0.01, 'feature_fraction': 0.6, 'bagging_freq': 2, 'bagging_fraction': 0.8})
2023-01-15 18:51:37,309:INFO:Checking exceptions
2023-01-15 18:51:37,309:INFO:Importing libraries
2023-01-15 18:51:37,310:INFO:Copying training dataset
2023-01-15 18:51:37,318:INFO:Defining folds
2023-01-15 18:51:37,318:INFO:Declaring metric variables
2023-01-15 18:51:37,323:INFO:Importing untrained model
2023-01-15 18:51:37,324:INFO:Declaring custom model
2023-01-15 18:51:37,331:INFO:Light Gradient Boosting Machine Imported successfully
2023-01-15 18:51:37,345:INFO:Starting cross validation
2023-01-15 18:51:37,349:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:51:38,493:INFO:Calculating mean and std
2023-01-15 18:51:38,495:INFO:Creating metrics dataframe
2023-01-15 18:51:38,504:INFO:Finalizing model
2023-01-15 18:51:39,163:INFO:Uploading results into container
2023-01-15 18:51:39,164:INFO:Uploading model into container now
2023-01-15 18:51:39,166:INFO:_master_model_container: 19
2023-01-15 18:51:39,167:INFO:_display_container: 5
2023-01-15 18:51:39,168:INFO:LGBMClassifier(bagging_fraction=0.8, bagging_freq=2, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.6,
               importance_type='split', learning_rate=0.01, max_depth=-1,
               min_child_samples=71, min_child_weight=0.001, min_split_gain=0.1,
               n_estimators=10, n_jobs=-1, num_leaves=10, objective=None,
               random_state=42, reg_alpha=0.3, reg_lambda=2, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-01-15 18:51:39,168:INFO:create_model() successfully completed......................................
2023-01-15 18:51:39,270:INFO:SubProcess create_model() end ==================================
2023-01-15 18:51:39,270:INFO:choose_better activated
2023-01-15 18:51:39,274:INFO:SubProcess create_model() called ==================================
2023-01-15 18:51:39,275:INFO:Initializing create_model()
2023-01-15 18:51:39,275:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017FD9292DD0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:51:39,275:INFO:Checking exceptions
2023-01-15 18:51:39,277:INFO:Importing libraries
2023-01-15 18:51:39,277:INFO:Copying training dataset
2023-01-15 18:51:39,283:INFO:Defining folds
2023-01-15 18:51:39,283:INFO:Declaring metric variables
2023-01-15 18:51:39,284:INFO:Importing untrained model
2023-01-15 18:51:39,284:INFO:Declaring custom model
2023-01-15 18:51:39,285:INFO:Light Gradient Boosting Machine Imported successfully
2023-01-15 18:51:39,285:INFO:Starting cross validation
2023-01-15 18:51:39,288:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:51:40,837:INFO:Calculating mean and std
2023-01-15 18:51:40,837:INFO:Creating metrics dataframe
2023-01-15 18:51:40,840:INFO:Finalizing model
2023-01-15 18:51:41,646:INFO:Uploading results into container
2023-01-15 18:51:41,648:INFO:Uploading model into container now
2023-01-15 18:51:41,649:INFO:_master_model_container: 20
2023-01-15 18:51:41,649:INFO:_display_container: 6
2023-01-15 18:51:41,650:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-01-15 18:51:41,650:INFO:create_model() successfully completed......................................
2023-01-15 18:51:41,760:INFO:SubProcess create_model() end ==================================
2023-01-15 18:51:41,761:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0) result for AUC is 0.8647
2023-01-15 18:51:41,762:INFO:LGBMClassifier(bagging_fraction=0.8, bagging_freq=2, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.6,
               importance_type='split', learning_rate=0.01, max_depth=-1,
               min_child_samples=71, min_child_weight=0.001, min_split_gain=0.1,
               n_estimators=10, n_jobs=-1, num_leaves=10, objective=None,
               random_state=42, reg_alpha=0.3, reg_lambda=2, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0) result for AUC is 0.8722
2023-01-15 18:51:41,763:INFO:LGBMClassifier(bagging_fraction=0.8, bagging_freq=2, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.6,
               importance_type='split', learning_rate=0.01, max_depth=-1,
               min_child_samples=71, min_child_weight=0.001, min_split_gain=0.1,
               n_estimators=10, n_jobs=-1, num_leaves=10, objective=None,
               random_state=42, reg_alpha=0.3, reg_lambda=2, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0) is best model
2023-01-15 18:51:41,763:INFO:choose_better completed
2023-01-15 18:51:41,775:INFO:_master_model_container: 20
2023-01-15 18:51:41,776:INFO:_display_container: 5
2023-01-15 18:51:41,777:INFO:LGBMClassifier(bagging_fraction=0.8, bagging_freq=2, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.6,
               importance_type='split', learning_rate=0.01, max_depth=-1,
               min_child_samples=71, min_child_weight=0.001, min_split_gain=0.1,
               n_estimators=10, n_jobs=-1, num_leaves=10, objective=None,
               random_state=42, reg_alpha=0.3, reg_lambda=2, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-01-15 18:51:41,777:INFO:tune_model() successfully completed......................................
2023-01-15 18:51:41,980:INFO:Initializing create_model()
2023-01-15 18:51:41,980:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017FD9292DD0>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:51:41,981:INFO:Checking exceptions
2023-01-15 18:51:41,985:INFO:Importing libraries
2023-01-15 18:51:41,985:INFO:Copying training dataset
2023-01-15 18:51:41,991:INFO:Defining folds
2023-01-15 18:51:41,991:INFO:Declaring metric variables
2023-01-15 18:51:41,991:INFO:Importing untrained model
2023-01-15 18:51:41,992:INFO:Logistic Regression Imported successfully
2023-01-15 18:51:41,992:INFO:Starting cross validation
2023-01-15 18:51:41,995:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:51:43,555:INFO:Calculating mean and std
2023-01-15 18:51:43,555:INFO:Creating metrics dataframe
2023-01-15 18:51:43,558:INFO:Finalizing model
2023-01-15 18:51:44,371:INFO:Uploading results into container
2023-01-15 18:51:44,372:INFO:Uploading model into container now
2023-01-15 18:51:44,372:INFO:_master_model_container: 21
2023-01-15 18:51:44,372:INFO:_display_container: 6
2023-01-15 18:51:44,373:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-01-15 18:51:44,373:INFO:create_model() successfully completed......................................
2023-01-15 18:51:44,461:INFO:Initializing stack_models()
2023-01-15 18:51:44,461:INFO:stack_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017FD9292DD0>, estimator_list=[LogisticRegression(C=0.095, class_weight={}, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=0.05, solver='lsqr',
                           store_covariance=False, tol=0.0001), LGBMClassifier(bagging_fraction=0.8, bagging_freq=2, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.6,
               importance_type='split', learning_rate=0.01, max_depth=-1,
               min_child_samples=71, min_child_weight=0.001, min_split_gain=0.1,
               n_estimators=10, n_jobs=-1, num_leaves=10, objective=None,
               random_state=42, reg_alpha=0.3, reg_lambda=2, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)], meta_model=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), meta_model_fold=5, fold=None, round=4, method=auto, restack=True, choose_better=False, optimize=Accuracy, fit_kwargs=None, groups=None, probability_threshold=None, verbose=False, return_train_score=False)
2023-01-15 18:51:44,462:INFO:Checking exceptions
2023-01-15 18:51:44,465:INFO:Defining meta model
2023-01-15 18:51:44,470:INFO:Getting model names
2023-01-15 18:51:44,471:INFO:[('Logistic Regression', LogisticRegression(C=0.095, class_weight={}, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)), ('Linear Discriminant Analysis', LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=0.05, solver='lsqr',
                           store_covariance=False, tol=0.0001)), ('Light Gradient Boosting Machine', LGBMClassifier(bagging_fraction=0.8, bagging_freq=2, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.6,
               importance_type='split', learning_rate=0.01, max_depth=-1,
               min_child_samples=71, min_child_weight=0.001, min_split_gain=0.1,
               n_estimators=10, n_jobs=-1, num_leaves=10, objective=None,
               random_state=42, reg_alpha=0.3, reg_lambda=2, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0))]
2023-01-15 18:51:44,473:INFO:SubProcess create_model() called ==================================
2023-01-15 18:51:44,486:INFO:Initializing create_model()
2023-01-15 18:51:44,486:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017FD9292DD0>, estimator=StackingClassifier(cv=5,
                   estimators=[('Logistic Regression',
                                LogisticRegression(C=0.095, class_weight={},
                                                   dual=False,
                                                   fit_intercept=True,
                                                   intercept_scaling=1,
                                                   l1_ratio=None, max_iter=1000,
                                                   multi_class='auto',
                                                   n_jobs=None, penalty='l2',
                                                   random_state=42,
                                                   solver='lbfgs', tol=0.0001,
                                                   verbose=0,
                                                   warm_start=False)),
                               ('Linear Discriminant Analysis',
                                LinearDiscriminantAnalysis...
                                               subsample_for_bin=200000,
                                               subsample_freq=0))],
                   final_estimator=LogisticRegression(C=1.0, class_weight=None,
                                                      dual=False,
                                                      fit_intercept=True,
                                                      intercept_scaling=1,
                                                      l1_ratio=None,
                                                      max_iter=1000,
                                                      multi_class='auto',
                                                      n_jobs=None, penalty='l2',
                                                      random_state=42,
                                                      solver='lbfgs',
                                                      tol=0.0001, verbose=0,
                                                      warm_start=False),
                   n_jobs=-1, passthrough=True, stack_method='auto', verbose=0), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017FB517E5C0>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:51:44,486:INFO:Checking exceptions
2023-01-15 18:51:44,486:INFO:Importing libraries
2023-01-15 18:51:44,486:INFO:Copying training dataset
2023-01-15 18:51:44,493:INFO:Defining folds
2023-01-15 18:51:44,493:INFO:Declaring metric variables
2023-01-15 18:51:44,493:INFO:Importing untrained model
2023-01-15 18:51:44,493:INFO:Declaring custom model
2023-01-15 18:51:44,497:INFO:Stacking Classifier Imported successfully
2023-01-15 18:51:44,497:INFO:Starting cross validation
2023-01-15 18:51:44,502:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:51:48,376:INFO:Calculating mean and std
2023-01-15 18:51:48,377:INFO:Creating metrics dataframe
2023-01-15 18:51:48,380:INFO:Finalizing model
2023-01-15 18:51:50,266:INFO:Uploading results into container
2023-01-15 18:51:50,266:INFO:Uploading model into container now
2023-01-15 18:51:50,267:INFO:_master_model_container: 22
2023-01-15 18:51:50,267:INFO:_display_container: 7
2023-01-15 18:51:50,275:INFO:StackingClassifier(cv=5,
                   estimators=[('Logistic Regression',
                                LogisticRegression(C=0.095, class_weight={},
                                                   dual=False,
                                                   fit_intercept=True,
                                                   intercept_scaling=1,
                                                   l1_ratio=None, max_iter=1000,
                                                   multi_class='auto',
                                                   n_jobs=None, penalty='l2',
                                                   random_state=42,
                                                   solver='lbfgs', tol=0.0001,
                                                   verbose=0,
                                                   warm_start=False)),
                               ('Linear Discriminant Analysis',
                                LinearDiscriminantAnalysis...
                                               subsample_for_bin=200000,
                                               subsample_freq=0))],
                   final_estimator=LogisticRegression(C=1.0, class_weight=None,
                                                      dual=False,
                                                      fit_intercept=True,
                                                      intercept_scaling=1,
                                                      l1_ratio=None,
                                                      max_iter=1000,
                                                      multi_class='auto',
                                                      n_jobs=None, penalty='l2',
                                                      random_state=42,
                                                      solver='lbfgs',
                                                      tol=0.0001, verbose=0,
                                                      warm_start=False),
                   n_jobs=-1, passthrough=True, stack_method='auto', verbose=0)
2023-01-15 18:51:50,275:INFO:create_model() successfully completed......................................
2023-01-15 18:51:50,356:INFO:SubProcess create_model() end ==================================
2023-01-15 18:51:50,357:INFO:_master_model_container: 22
2023-01-15 18:51:50,357:INFO:_display_container: 7
2023-01-15 18:51:50,363:INFO:StackingClassifier(cv=5,
                   estimators=[('Logistic Regression',
                                LogisticRegression(C=0.095, class_weight={},
                                                   dual=False,
                                                   fit_intercept=True,
                                                   intercept_scaling=1,
                                                   l1_ratio=None, max_iter=1000,
                                                   multi_class='auto',
                                                   n_jobs=None, penalty='l2',
                                                   random_state=42,
                                                   solver='lbfgs', tol=0.0001,
                                                   verbose=0,
                                                   warm_start=False)),
                               ('Linear Discriminant Analysis',
                                LinearDiscriminantAnalysis...
                                               subsample_for_bin=200000,
                                               subsample_freq=0))],
                   final_estimator=LogisticRegression(C=1.0, class_weight=None,
                                                      dual=False,
                                                      fit_intercept=True,
                                                      intercept_scaling=1,
                                                      l1_ratio=None,
                                                      max_iter=1000,
                                                      multi_class='auto',
                                                      n_jobs=None, penalty='l2',
                                                      random_state=42,
                                                      solver='lbfgs',
                                                      tol=0.0001, verbose=0,
                                                      warm_start=False),
                   n_jobs=-1, passthrough=True, stack_method='auto', verbose=0)
2023-01-15 18:51:50,363:INFO:stack_models() successfully completed......................................
2023-01-15 18:51:50,540:INFO:Initializing calibrate_model()
2023-01-15 18:51:50,540:INFO:calibrate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017FD9292DD0>, estimator=StackingClassifier(cv=5,
                   estimators=[('Logistic Regression',
                                LogisticRegression(C=0.095, class_weight={},
                                                   dual=False,
                                                   fit_intercept=True,
                                                   intercept_scaling=1,
                                                   l1_ratio=None, max_iter=1000,
                                                   multi_class='auto',
                                                   n_jobs=None, penalty='l2',
                                                   random_state=42,
                                                   solver='lbfgs', tol=0.0001,
                                                   verbose=0,
                                                   warm_start=False)),
                               ('Linear Discriminant Analysis',
                                LinearDiscriminantAnalysis...
                                               subsample_for_bin=200000,
                                               subsample_freq=0))],
                   final_estimator=LogisticRegression(C=1.0, class_weight=None,
                                                      dual=False,
                                                      fit_intercept=True,
                                                      intercept_scaling=1,
                                                      l1_ratio=None,
                                                      max_iter=1000,
                                                      multi_class='auto',
                                                      n_jobs=None, penalty='l2',
                                                      random_state=42,
                                                      solver='lbfgs',
                                                      tol=0.0001, verbose=0,
                                                      warm_start=False),
                   n_jobs=-1, passthrough=True, stack_method='auto', verbose=0), method=sigmoid, calibrate_fold=5, fold=None, round=4, fit_kwargs=None, groups=None, verbose=False, return_train_score=False)
2023-01-15 18:51:50,540:INFO:Checking exceptions
2023-01-15 18:51:50,545:INFO:Preloading libraries
2023-01-15 18:51:50,545:INFO:Preparing display monitor
2023-01-15 18:51:50,549:INFO:Getting model name
2023-01-15 18:51:50,550:INFO:Base model : Stacking Classifier
2023-01-15 18:51:50,551:INFO:Importing untrained CalibratedClassifierCV
2023-01-15 18:51:50,551:INFO:SubProcess create_model() called ==================================
2023-01-15 18:51:50,570:INFO:Initializing create_model()
2023-01-15 18:51:50,571:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017FD9292DD0>, estimator=CalibratedClassifierCV(base_estimator=StackingClassifier(cv=5,
                                                         estimators=[('Logistic '
                                                                      'Regression',
                                                                      LogisticRegression(C=0.095,
                                                                                         class_weight={},
                                                                                         dual=False,
                                                                                         fit_intercept=True,
                                                                                         intercept_scaling=1,
                                                                                         l1_ratio=None,
                                                                                         max_iter=1000,
                                                                                         multi_class='auto',
                                                                                         n_jobs=None,
                                                                                         penalty='l2',
                                                                                         random_state=42,
                                                                                         solver='lbfgs',
                                                                                         tol=0.0001,
                                                                                         verbose=0,
                                                                                         warm_start=False)),
                                                                     ('Linear '
                                                                      'Discri...
                                                         final_estimator=LogisticRegression(C=1.0,
                                                                                            class_weight=None,
                                                                                            dual=False,
                                                                                            fit_intercept=True,
                                                                                            intercept_scaling=1,
                                                                                            l1_ratio=None,
                                                                                            max_iter=1000,
                                                                                            multi_class='auto',
                                                                                            n_jobs=None,
                                                                                            penalty='l2',
                                                                                            random_state=42,
                                                                                            solver='lbfgs',
                                                                                            tol=0.0001,
                                                                                            verbose=0,
                                                                                            warm_start=False),
                                                         n_jobs=-1,
                                                         passthrough=True,
                                                         stack_method='auto',
                                                         verbose=0),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017FD8DDC880>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:51:50,571:INFO:Checking exceptions
2023-01-15 18:51:50,572:INFO:Importing libraries
2023-01-15 18:51:50,572:INFO:Copying training dataset
2023-01-15 18:51:50,576:INFO:Defining folds
2023-01-15 18:51:50,576:INFO:Declaring metric variables
2023-01-15 18:51:50,577:INFO:Importing untrained model
2023-01-15 18:51:50,577:INFO:Declaring custom model
2023-01-15 18:51:50,580:INFO:Stacking Classifier Imported successfully
2023-01-15 18:51:50,580:INFO:Starting cross validation
2023-01-15 18:51:50,582:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:52:00,978:INFO:Calculating mean and std
2023-01-15 18:52:00,979:INFO:Creating metrics dataframe
2023-01-15 18:52:00,982:INFO:Finalizing model
2023-01-15 18:52:08,845:INFO:Uploading results into container
2023-01-15 18:52:08,845:INFO:Uploading model into container now
2023-01-15 18:52:08,846:INFO:_master_model_container: 23
2023-01-15 18:52:08,846:INFO:_display_container: 8
2023-01-15 18:52:08,863:INFO:CalibratedClassifierCV(base_estimator=StackingClassifier(cv=5,
                                                         estimators=[('Logistic '
                                                                      'Regression',
                                                                      LogisticRegression(C=0.095,
                                                                                         class_weight={},
                                                                                         dual=False,
                                                                                         fit_intercept=True,
                                                                                         intercept_scaling=1,
                                                                                         l1_ratio=None,
                                                                                         max_iter=1000,
                                                                                         multi_class='auto',
                                                                                         n_jobs=None,
                                                                                         penalty='l2',
                                                                                         random_state=42,
                                                                                         solver='lbfgs',
                                                                                         tol=0.0001,
                                                                                         verbose=0,
                                                                                         warm_start=False)),
                                                                     ('Linear '
                                                                      'Discri...
                                                         final_estimator=LogisticRegression(C=1.0,
                                                                                            class_weight=None,
                                                                                            dual=False,
                                                                                            fit_intercept=True,
                                                                                            intercept_scaling=1,
                                                                                            l1_ratio=None,
                                                                                            max_iter=1000,
                                                                                            multi_class='auto',
                                                                                            n_jobs=None,
                                                                                            penalty='l2',
                                                                                            random_state=42,
                                                                                            solver='lbfgs',
                                                                                            tol=0.0001,
                                                                                            verbose=0,
                                                                                            warm_start=False),
                                                         n_jobs=-1,
                                                         passthrough=True,
                                                         stack_method='auto',
                                                         verbose=0),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None)
2023-01-15 18:52:08,863:INFO:create_model() successfully completed......................................
2023-01-15 18:52:08,942:INFO:SubProcess create_model() end ==================================
2023-01-15 18:52:08,945:INFO:_master_model_container: 23
2023-01-15 18:52:08,945:INFO:_display_container: 8
2023-01-15 18:52:08,961:INFO:CalibratedClassifierCV(base_estimator=StackingClassifier(cv=5,
                                                         estimators=[('Logistic '
                                                                      'Regression',
                                                                      LogisticRegression(C=0.095,
                                                                                         class_weight={},
                                                                                         dual=False,
                                                                                         fit_intercept=True,
                                                                                         intercept_scaling=1,
                                                                                         l1_ratio=None,
                                                                                         max_iter=1000,
                                                                                         multi_class='auto',
                                                                                         n_jobs=None,
                                                                                         penalty='l2',
                                                                                         random_state=42,
                                                                                         solver='lbfgs',
                                                                                         tol=0.0001,
                                                                                         verbose=0,
                                                                                         warm_start=False)),
                                                                     ('Linear '
                                                                      'Discri...
                                                         final_estimator=LogisticRegression(C=1.0,
                                                                                            class_weight=None,
                                                                                            dual=False,
                                                                                            fit_intercept=True,
                                                                                            intercept_scaling=1,
                                                                                            l1_ratio=None,
                                                                                            max_iter=1000,
                                                                                            multi_class='auto',
                                                                                            n_jobs=None,
                                                                                            penalty='l2',
                                                                                            random_state=42,
                                                                                            solver='lbfgs',
                                                                                            tol=0.0001,
                                                                                            verbose=0,
                                                                                            warm_start=False),
                                                         n_jobs=-1,
                                                         passthrough=True,
                                                         stack_method='auto',
                                                         verbose=0),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None)
2023-01-15 18:52:08,961:INFO:calibrate_model() successfully completed......................................
2023-01-15 18:52:09,152:INFO:Initializing evaluate_model()
2023-01-15 18:52:09,153:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017FD9292DD0>, estimator=CalibratedClassifierCV(base_estimator=StackingClassifier(cv=5,
                                                         estimators=[('Logistic '
                                                                      'Regression',
                                                                      LogisticRegression(C=0.095,
                                                                                         class_weight={},
                                                                                         dual=False,
                                                                                         fit_intercept=True,
                                                                                         intercept_scaling=1,
                                                                                         l1_ratio=None,
                                                                                         max_iter=1000,
                                                                                         multi_class='auto',
                                                                                         n_jobs=None,
                                                                                         penalty='l2',
                                                                                         random_state=42,
                                                                                         solver='lbfgs',
                                                                                         tol=0.0001,
                                                                                         verbose=0,
                                                                                         warm_start=False)),
                                                                     ('Linear '
                                                                      'Discri...
                                                         final_estimator=LogisticRegression(C=1.0,
                                                                                            class_weight=None,
                                                                                            dual=False,
                                                                                            fit_intercept=True,
                                                                                            intercept_scaling=1,
                                                                                            l1_ratio=None,
                                                                                            max_iter=1000,
                                                                                            multi_class='auto',
                                                                                            n_jobs=None,
                                                                                            penalty='l2',
                                                                                            random_state=42,
                                                                                            solver='lbfgs',
                                                                                            tol=0.0001,
                                                                                            verbose=0,
                                                                                            warm_start=False),
                                                         n_jobs=-1,
                                                         passthrough=True,
                                                         stack_method='auto',
                                                         verbose=0),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-01-15 18:52:09,197:INFO:Initializing plot_model()
2023-01-15 18:52:09,197:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=StackingClassifier(cv=5,
                                                         estimators=[('Logistic '
                                                                      'Regression',
                                                                      LogisticRegression(C=0.095,
                                                                                         class_weight={},
                                                                                         dual=False,
                                                                                         fit_intercept=True,
                                                                                         intercept_scaling=1,
                                                                                         l1_ratio=None,
                                                                                         max_iter=1000,
                                                                                         multi_class='auto',
                                                                                         n_jobs=None,
                                                                                         penalty='l2',
                                                                                         random_state=42,
                                                                                         solver='lbfgs',
                                                                                         tol=0.0001,
                                                                                         verbose=0,
                                                                                         warm_start=False)),
                                                                     ('Linear '
                                                                      'Discri...
                                                         final_estimator=LogisticRegression(C=1.0,
                                                                                            class_weight=None,
                                                                                            dual=False,
                                                                                            fit_intercept=True,
                                                                                            intercept_scaling=1,
                                                                                            l1_ratio=None,
                                                                                            max_iter=1000,
                                                                                            multi_class='auto',
                                                                                            n_jobs=None,
                                                                                            penalty='l2',
                                                                                            random_state=42,
                                                                                            solver='lbfgs',
                                                                                            tol=0.0001,
                                                                                            verbose=0,
                                                                                            warm_start=False),
                                                         n_jobs=-1,
                                                         passthrough=True,
                                                         stack_method='auto',
                                                         verbose=0),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017FD9292DD0>, system=True)
2023-01-15 18:52:09,197:INFO:Checking exceptions
2023-01-15 18:52:09,200:INFO:Preloading libraries
2023-01-15 18:52:09,215:INFO:Copying training dataset
2023-01-15 18:52:09,215:INFO:Plot type: pipeline
2023-01-15 18:52:09,701:INFO:Visual Rendered Successfully
2023-01-15 18:52:09,803:INFO:plot_model() successfully completed......................................
2023-01-15 18:52:09,967:INFO:Initializing interpret_model()
2023-01-15 18:52:09,967:INFO:interpret_model(estimator=CalibratedClassifierCV(base_estimator=StackingClassifier(cv=5,
                                                         estimators=[('Logistic '
                                                                      'Regression',
                                                                      LogisticRegression(C=0.095,
                                                                                         class_weight={},
                                                                                         dual=False,
                                                                                         fit_intercept=True,
                                                                                         intercept_scaling=1,
                                                                                         l1_ratio=None,
                                                                                         max_iter=1000,
                                                                                         multi_class='auto',
                                                                                         n_jobs=None,
                                                                                         penalty='l2',
                                                                                         random_state=42,
                                                                                         solver='lbfgs',
                                                                                         tol=0.0001,
                                                                                         verbose=0,
                                                                                         warm_start=False)),
                                                                     ('Linear '
                                                                      'Discri...
                                                         final_estimator=LogisticRegression(C=1.0,
                                                                                            class_weight=None,
                                                                                            dual=False,
                                                                                            fit_intercept=True,
                                                                                            intercept_scaling=1,
                                                                                            l1_ratio=None,
                                                                                            max_iter=1000,
                                                                                            multi_class='auto',
                                                                                            n_jobs=None,
                                                                                            penalty='l2',
                                                                                            random_state=42,
                                                                                            solver='lbfgs',
                                                                                            tol=0.0001,
                                                                                            verbose=0,
                                                                                            warm_start=False),
                                                         n_jobs=-1,
                                                         passthrough=True,
                                                         stack_method='auto',
                                                         verbose=0),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), use_train_data=False, X_new_sample=None, y_new_sample=None, feature=None, kwargs={}, observation=None, plot=summary, save=False, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017FD9292DD0>)
2023-01-15 18:52:09,968:INFO:Checking exceptions
2023-01-15 18:52:09,968:ERROR:
'shap' is a soft dependency and not included in the pycaret installation. Please run: `pip install shap` to install.
Alternately, you can install this by running `pip install pycaret[analysis]`
NoneType: None
2023-01-15 18:52:27,191:INFO:Initializing plot_model()
2023-01-15 18:52:27,192:INFO:plot_model(plot=parameter, fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=StackingClassifier(cv=5,
                                                         estimators=[('Logistic '
                                                                      'Regression',
                                                                      LogisticRegression(C=0.095,
                                                                                         class_weight={},
                                                                                         dual=False,
                                                                                         fit_intercept=True,
                                                                                         intercept_scaling=1,
                                                                                         l1_ratio=None,
                                                                                         max_iter=1000,
                                                                                         multi_class='auto',
                                                                                         n_jobs=None,
                                                                                         penalty='l2',
                                                                                         random_state=42,
                                                                                         solver='lbfgs',
                                                                                         tol=0.0001,
                                                                                         verbose=0,
                                                                                         warm_start=False)),
                                                                     ('Linear '
                                                                      'Discri...
                                                         final_estimator=LogisticRegression(C=1.0,
                                                                                            class_weight=None,
                                                                                            dual=False,
                                                                                            fit_intercept=True,
                                                                                            intercept_scaling=1,
                                                                                            l1_ratio=None,
                                                                                            max_iter=1000,
                                                                                            multi_class='auto',
                                                                                            n_jobs=None,
                                                                                            penalty='l2',
                                                                                            random_state=42,
                                                                                            solver='lbfgs',
                                                                                            tol=0.0001,
                                                                                            verbose=0,
                                                                                            warm_start=False),
                                                         n_jobs=-1,
                                                         passthrough=True,
                                                         stack_method='auto',
                                                         verbose=0),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017FD9292DD0>, system=True)
2023-01-15 18:52:27,192:INFO:Checking exceptions
2023-01-15 18:52:27,195:INFO:Preloading libraries
2023-01-15 18:52:27,208:INFO:Copying training dataset
2023-01-15 18:52:27,209:INFO:Plot type: parameter
2023-01-15 18:52:27,228:INFO:Visual Rendered Successfully
2023-01-15 18:52:27,345:INFO:plot_model() successfully completed......................................
2023-01-15 18:52:32,765:INFO:Initializing plot_model()
2023-01-15 18:52:32,766:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=StackingClassifier(cv=5,
                                                         estimators=[('Logistic '
                                                                      'Regression',
                                                                      LogisticRegression(C=0.095,
                                                                                         class_weight={},
                                                                                         dual=False,
                                                                                         fit_intercept=True,
                                                                                         intercept_scaling=1,
                                                                                         l1_ratio=None,
                                                                                         max_iter=1000,
                                                                                         multi_class='auto',
                                                                                         n_jobs=None,
                                                                                         penalty='l2',
                                                                                         random_state=42,
                                                                                         solver='lbfgs',
                                                                                         tol=0.0001,
                                                                                         verbose=0,
                                                                                         warm_start=False)),
                                                                     ('Linear '
                                                                      'Discri...
                                                         final_estimator=LogisticRegression(C=1.0,
                                                                                            class_weight=None,
                                                                                            dual=False,
                                                                                            fit_intercept=True,
                                                                                            intercept_scaling=1,
                                                                                            l1_ratio=None,
                                                                                            max_iter=1000,
                                                                                            multi_class='auto',
                                                                                            n_jobs=None,
                                                                                            penalty='l2',
                                                                                            random_state=42,
                                                                                            solver='lbfgs',
                                                                                            tol=0.0001,
                                                                                            verbose=0,
                                                                                            warm_start=False),
                                                         n_jobs=-1,
                                                         passthrough=True,
                                                         stack_method='auto',
                                                         verbose=0),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017FD9292DD0>, system=True)
2023-01-15 18:52:32,766:INFO:Checking exceptions
2023-01-15 18:52:32,768:INFO:Preloading libraries
2023-01-15 18:52:32,782:INFO:Copying training dataset
2023-01-15 18:52:32,782:INFO:Plot type: auc
2023-01-15 18:52:33,993:INFO:Fitting Model
2023-01-15 18:52:33,995:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-01-15 18:52:33,996:INFO:Scoring test/hold-out set
2023-01-15 18:52:34,368:INFO:Visual Rendered Successfully
2023-01-15 18:52:34,453:INFO:plot_model() successfully completed......................................
2023-01-15 18:52:49,795:INFO:Initializing plot_model()
2023-01-15 18:52:49,796:INFO:plot_model(plot=confusion_matrix, fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=StackingClassifier(cv=5,
                                                         estimators=[('Logistic '
                                                                      'Regression',
                                                                      LogisticRegression(C=0.095,
                                                                                         class_weight={},
                                                                                         dual=False,
                                                                                         fit_intercept=True,
                                                                                         intercept_scaling=1,
                                                                                         l1_ratio=None,
                                                                                         max_iter=1000,
                                                                                         multi_class='auto',
                                                                                         n_jobs=None,
                                                                                         penalty='l2',
                                                                                         random_state=42,
                                                                                         solver='lbfgs',
                                                                                         tol=0.0001,
                                                                                         verbose=0,
                                                                                         warm_start=False)),
                                                                     ('Linear '
                                                                      'Discri...
                                                         final_estimator=LogisticRegression(C=1.0,
                                                                                            class_weight=None,
                                                                                            dual=False,
                                                                                            fit_intercept=True,
                                                                                            intercept_scaling=1,
                                                                                            l1_ratio=None,
                                                                                            max_iter=1000,
                                                                                            multi_class='auto',
                                                                                            n_jobs=None,
                                                                                            penalty='l2',
                                                                                            random_state=42,
                                                                                            solver='lbfgs',
                                                                                            tol=0.0001,
                                                                                            verbose=0,
                                                                                            warm_start=False),
                                                         n_jobs=-1,
                                                         passthrough=True,
                                                         stack_method='auto',
                                                         verbose=0),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017FD9292DD0>, system=True)
2023-01-15 18:52:49,796:INFO:Checking exceptions
2023-01-15 18:52:49,800:INFO:Preloading libraries
2023-01-15 18:52:49,822:INFO:Copying training dataset
2023-01-15 18:52:49,822:INFO:Plot type: confusion_matrix
2023-01-15 18:52:51,086:INFO:Fitting Model
2023-01-15 18:52:51,086:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-01-15 18:52:51,087:INFO:Scoring test/hold-out set
2023-01-15 18:52:51,373:INFO:Visual Rendered Successfully
2023-01-15 18:52:51,507:INFO:plot_model() successfully completed......................................
2023-01-15 18:53:07,330:INFO:Initializing plot_model()
2023-01-15 18:53:07,330:INFO:plot_model(plot=threshold, fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=StackingClassifier(cv=5,
                                                         estimators=[('Logistic '
                                                                      'Regression',
                                                                      LogisticRegression(C=0.095,
                                                                                         class_weight={},
                                                                                         dual=False,
                                                                                         fit_intercept=True,
                                                                                         intercept_scaling=1,
                                                                                         l1_ratio=None,
                                                                                         max_iter=1000,
                                                                                         multi_class='auto',
                                                                                         n_jobs=None,
                                                                                         penalty='l2',
                                                                                         random_state=42,
                                                                                         solver='lbfgs',
                                                                                         tol=0.0001,
                                                                                         verbose=0,
                                                                                         warm_start=False)),
                                                                     ('Linear '
                                                                      'Discri...
                                                         final_estimator=LogisticRegression(C=1.0,
                                                                                            class_weight=None,
                                                                                            dual=False,
                                                                                            fit_intercept=True,
                                                                                            intercept_scaling=1,
                                                                                            l1_ratio=None,
                                                                                            max_iter=1000,
                                                                                            multi_class='auto',
                                                                                            n_jobs=None,
                                                                                            penalty='l2',
                                                                                            random_state=42,
                                                                                            solver='lbfgs',
                                                                                            tol=0.0001,
                                                                                            verbose=0,
                                                                                            warm_start=False),
                                                         n_jobs=-1,
                                                         passthrough=True,
                                                         stack_method='auto',
                                                         verbose=0),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017FD9292DD0>, system=True)
2023-01-15 18:53:07,330:INFO:Checking exceptions
2023-01-15 18:53:07,333:INFO:Preloading libraries
2023-01-15 18:53:07,346:INFO:Copying training dataset
2023-01-15 18:53:07,347:INFO:Plot type: threshold
2023-01-15 18:53:08,624:INFO:Fitting Model
2023-01-15 18:55:30,403:INFO:Initializing interpret_model()
2023-01-15 18:55:30,404:INFO:interpret_model(estimator=CalibratedClassifierCV(base_estimator=StackingClassifier(cv=5,
                                                         estimators=[('Logistic '
                                                                      'Regression',
                                                                      LogisticRegression(C=0.095,
                                                                                         class_weight={},
                                                                                         dual=False,
                                                                                         fit_intercept=True,
                                                                                         intercept_scaling=1,
                                                                                         l1_ratio=None,
                                                                                         max_iter=1000,
                                                                                         multi_class='auto',
                                                                                         n_jobs=None,
                                                                                         penalty='l2',
                                                                                         random_state=42,
                                                                                         solver='lbfgs',
                                                                                         tol=0.0001,
                                                                                         verbose=0,
                                                                                         warm_start=False)),
                                                                     ('Linear '
                                                                      'Discri...
                                                         final_estimator=LogisticRegression(C=1.0,
                                                                                            class_weight=None,
                                                                                            dual=False,
                                                                                            fit_intercept=True,
                                                                                            intercept_scaling=1,
                                                                                            l1_ratio=None,
                                                                                            max_iter=1000,
                                                                                            multi_class='auto',
                                                                                            n_jobs=None,
                                                                                            penalty='l2',
                                                                                            random_state=42,
                                                                                            solver='lbfgs',
                                                                                            tol=0.0001,
                                                                                            verbose=0,
                                                                                            warm_start=False),
                                                         n_jobs=-1,
                                                         passthrough=True,
                                                         stack_method='auto',
                                                         verbose=0),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), use_train_data=False, X_new_sample=None, y_new_sample=None, feature=None, kwargs={}, observation=None, plot=summary, save=False, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017FD9292DD0>)
2023-01-15 18:55:30,404:INFO:Checking exceptions
2023-01-15 18:55:30,405:ERROR:
'shap' is a soft dependency and not included in the pycaret installation. Please run: `pip install shap` to install.
Alternately, you can install this by running `pip install pycaret[analysis]`
NoneType: None
2023-01-15 18:55:32,903:INFO:Initializing plot_model()
2023-01-15 18:55:32,903:INFO:plot_model(plot=feature, fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=StackingClassifier(cv=5,
                                                         estimators=[('Logistic '
                                                                      'Regression',
                                                                      LogisticRegression(C=0.095,
                                                                                         class_weight={},
                                                                                         dual=False,
                                                                                         fit_intercept=True,
                                                                                         intercept_scaling=1,
                                                                                         l1_ratio=None,
                                                                                         max_iter=1000,
                                                                                         multi_class='auto',
                                                                                         n_jobs=None,
                                                                                         penalty='l2',
                                                                                         random_state=42,
                                                                                         solver='lbfgs',
                                                                                         tol=0.0001,
                                                                                         verbose=0,
                                                                                         warm_start=False)),
                                                                     ('Linear '
                                                                      'Discri...
                                                         final_estimator=LogisticRegression(C=1.0,
                                                                                            class_weight=None,
                                                                                            dual=False,
                                                                                            fit_intercept=True,
                                                                                            intercept_scaling=1,
                                                                                            l1_ratio=None,
                                                                                            max_iter=1000,
                                                                                            multi_class='auto',
                                                                                            n_jobs=None,
                                                                                            penalty='l2',
                                                                                            random_state=42,
                                                                                            solver='lbfgs',
                                                                                            tol=0.0001,
                                                                                            verbose=0,
                                                                                            warm_start=False),
                                                         n_jobs=-1,
                                                         passthrough=True,
                                                         stack_method='auto',
                                                         verbose=0),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017FD9292DD0>, system=True)
2023-01-15 18:55:32,904:INFO:Checking exceptions
2023-01-15 18:56:14,422:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-01-15 18:56:14,422:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-01-15 18:56:14,422:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-01-15 18:56:14,422:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-01-15 18:56:15,022:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-01-15 18:56:16,001:INFO:PyCaret ClassificationExperiment
2023-01-15 18:56:16,001:INFO:Logging name: stroke
2023-01-15 18:56:16,001:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-01-15 18:56:16,001:INFO:version 3.0.0.rc8
2023-01-15 18:56:16,001:INFO:Initializing setup()
2023-01-15 18:56:16,001:INFO:self.USI: f2cb
2023-01-15 18:56:16,001:INFO:self._variable_keys: {'y_train', 'html_param', 'memory', 'X', 'X_train', 'n_jobs_param', 'fix_imbalance', 'log_plots_param', 'pipeline', 'gpu_n_jobs_param', 'USI', '_available_plots', 'fold_shuffle_param', 'logging_param', 'exp_id', 'gpu_param', 'y', 'is_multiclass', 'seed', 'fold_generator', 'fold_groups_param', 'idx', 'X_test', 'target_param', 'data', '_ml_usecase', 'y_test', 'exp_name_log'}
2023-01-15 18:56:16,001:INFO:Checking environment
2023-01-15 18:56:16,001:INFO:python_version: 3.10.5
2023-01-15 18:56:16,001:INFO:python_build: ('tags/v3.10.5:f377153', 'Jun  6 2022 16:14:13')
2023-01-15 18:56:16,001:INFO:machine: AMD64
2023-01-15 18:56:16,001:INFO:platform: Windows-10-10.0.19045-SP0
2023-01-15 18:56:16,005:INFO:Memory: svmem(total=8494747648, available=1989378048, percent=76.6, used=6505369600, free=1989378048)
2023-01-15 18:56:16,005:INFO:Physical Core: 4
2023-01-15 18:56:16,006:INFO:Logical Core: 8
2023-01-15 18:56:16,006:INFO:Checking libraries
2023-01-15 18:56:16,006:INFO:System:
2023-01-15 18:56:16,006:INFO:    python: 3.10.5 (tags/v3.10.5:f377153, Jun  6 2022, 16:14:13) [MSC v.1929 64 bit (AMD64)]
2023-01-15 18:56:16,006:INFO:executable: c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\Scripts\python.exe
2023-01-15 18:56:16,006:INFO:   machine: Windows-10-10.0.19045-SP0
2023-01-15 18:56:16,006:INFO:PyCaret required dependencies:
2023-01-15 18:56:16,007:INFO:                 pip: 22.3.1
2023-01-15 18:56:16,008:INFO:          setuptools: 65.7.0
2023-01-15 18:56:16,008:INFO:             pycaret: 3.0.0rc8
2023-01-15 18:56:16,009:INFO:             IPython: 8.8.0
2023-01-15 18:56:16,009:INFO:          ipywidgets: 8.0.4
2023-01-15 18:56:16,009:INFO:                tqdm: 4.64.1
2023-01-15 18:56:16,009:INFO:               numpy: 1.23.5
2023-01-15 18:56:16,009:INFO:              pandas: 1.5.2
2023-01-15 18:56:16,009:INFO:              jinja2: 3.1.2
2023-01-15 18:56:16,009:INFO:               scipy: 1.10.0
2023-01-15 18:56:16,009:INFO:              joblib: 1.2.0
2023-01-15 18:56:16,009:INFO:             sklearn: 1.1.3
2023-01-15 18:56:16,009:INFO:                pyod: 1.0.7
2023-01-15 18:56:16,010:INFO:            imblearn: 0.10.1
2023-01-15 18:56:16,010:INFO:   category_encoders: 2.6.0
2023-01-15 18:56:16,010:INFO:            lightgbm: 3.3.4
2023-01-15 18:56:16,010:INFO:               numba: 0.56.4
2023-01-15 18:56:16,010:INFO:            requests: 2.28.2
2023-01-15 18:56:16,010:INFO:          matplotlib: 3.6.3
2023-01-15 18:56:16,010:INFO:          scikitplot: 0.3.7
2023-01-15 18:56:16,010:INFO:         yellowbrick: 1.5
2023-01-15 18:56:16,010:INFO:              plotly: 5.12.0
2023-01-15 18:56:16,010:INFO:             kaleido: 0.2.1
2023-01-15 18:56:16,011:INFO:         statsmodels: 0.13.5
2023-01-15 18:56:16,011:INFO:              sktime: 0.15.1
2023-01-15 18:56:16,011:INFO:               tbats: 1.1.2
2023-01-15 18:56:16,011:INFO:            pmdarima: 2.0.2
2023-01-15 18:56:16,012:INFO:              psutil: 5.9.4
2023-01-15 18:56:16,012:INFO:PyCaret optional dependencies:
2023-01-15 18:56:16,047:INFO:                shap: 0.41.0
2023-01-15 18:56:16,047:INFO:           interpret: Not installed
2023-01-15 18:56:16,047:INFO:                umap: Not installed
2023-01-15 18:56:16,047:INFO:    pandas_profiling: Not installed
2023-01-15 18:56:16,047:INFO:  explainerdashboard: Not installed
2023-01-15 18:56:16,047:INFO:             autoviz: Not installed
2023-01-15 18:56:16,048:INFO:           fairlearn: Not installed
2023-01-15 18:56:16,048:INFO:             xgboost: Not installed
2023-01-15 18:56:16,048:INFO:            catboost: Not installed
2023-01-15 18:56:16,048:INFO:              kmodes: Not installed
2023-01-15 18:56:16,048:INFO:             mlxtend: Not installed
2023-01-15 18:56:16,048:INFO:       statsforecast: Not installed
2023-01-15 18:56:16,048:INFO:        tune_sklearn: Not installed
2023-01-15 18:56:16,048:INFO:                 ray: Not installed
2023-01-15 18:56:16,048:INFO:            hyperopt: Not installed
2023-01-15 18:56:16,048:INFO:              optuna: Not installed
2023-01-15 18:56:16,048:INFO:               skopt: Not installed
2023-01-15 18:56:16,048:INFO:              mlflow: Not installed
2023-01-15 18:56:16,048:INFO:              gradio: Not installed
2023-01-15 18:56:16,048:INFO:             fastapi: Not installed
2023-01-15 18:56:16,048:INFO:             uvicorn: Not installed
2023-01-15 18:56:16,049:INFO:              m2cgen: Not installed
2023-01-15 18:56:16,049:INFO:           evidently: Not installed
2023-01-15 18:56:16,049:INFO:                nltk: Not installed
2023-01-15 18:56:16,049:INFO:            pyLDAvis: Not installed
2023-01-15 18:56:16,049:INFO:              gensim: Not installed
2023-01-15 18:56:16,049:INFO:               spacy: Not installed
2023-01-15 18:56:16,049:INFO:           wordcloud: Not installed
2023-01-15 18:56:16,049:INFO:            textblob: Not installed
2023-01-15 18:56:16,049:INFO:               fugue: Not installed
2023-01-15 18:56:16,049:INFO:           streamlit: Not installed
2023-01-15 18:56:16,049:INFO:             prophet: Not installed
2023-01-15 18:56:16,049:INFO:None
2023-01-15 18:56:16,049:INFO:Set up data.
2023-01-15 18:56:16,078:INFO:Set up train/test split.
2023-01-15 18:56:16,088:INFO:Set up index.
2023-01-15 18:56:16,089:INFO:Set up folding strategy.
2023-01-15 18:56:16,089:INFO:Assigning column types.
2023-01-15 18:56:16,096:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-01-15 18:56:16,153:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-01-15 18:56:16,159:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-15 18:56:16,202:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:56:16,223:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:56:16,290:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-01-15 18:56:16,291:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-15 18:56:16,332:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:56:16,332:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:56:16,333:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-01-15 18:56:16,399:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-15 18:56:16,440:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:56:16,440:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:56:16,508:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-15 18:56:16,550:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:56:16,550:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:56:16,550:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-01-15 18:56:16,661:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:56:16,662:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:56:16,772:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:56:16,773:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:56:16,775:INFO:Preparing preprocessing pipeline...
2023-01-15 18:56:16,777:INFO:Set up simple imputation.
2023-01-15 18:56:16,782:INFO:Set up encoding of ordinal features.
2023-01-15 18:56:16,786:INFO:Set up encoding of categorical features.
2023-01-15 18:56:16,786:INFO:Set up imbalanced handling.
2023-01-15 18:56:16,786:INFO:Set up column transformation.
2023-01-15 18:56:16,786:INFO:Set up feature normalization.
2023-01-15 18:56:17,322:INFO:Finished creating preprocessing pipeline.
2023-01-15 18:56:17,365:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\alepi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'hypertension',
                                             'heart_disease',
                                             'avg_glucose_level', 'bmi'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorica...
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=None,
                                                                              sampling_strategy='auto')))),
                ('transformation',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=PowerTransformer(copy=True,
                                                                 method='yeo-johnson',
                                                                 standardize=False))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2023-01-15 18:56:17,365:INFO:Creating final display dataframe.
2023-01-15 18:56:20,128:INFO:Setup _display_container:                     Description            Value
0                    Session id               42
1                        Target           stroke
2                   Target type           Binary
3           Original data shape      (15304, 11)
4        Transformed data shape      (25834, 20)
5   Transformed train set shape      (22008, 20)
6    Transformed test set shape       (3826, 20)
7              Ordinal features                2
8              Numeric features                5
9          Categorical features                5
10                   Preprocess             True
11              Imputation type           simple
12           Numeric imputation             mean
13       Categorical imputation             mode
14     Maximum one-hot encoding               25
15              Encoding method             None
16                Fix imbalance             True
17         Fix imbalance method            SMOTE
18               Transformation             True
19        Transformation method      yeo-johnson
20                    Normalize             True
21             Normalize method           zscore
22               Fold Generator  StratifiedKFold
23                  Fold Number                4
24                     CPU Jobs               -1
25                      Use GPU            False
26               Log Experiment            False
27              Experiment Name           stroke
28                          USI             f2cb
2023-01-15 18:56:20,285:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:56:20,286:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:56:20,437:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:56:20,438:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-15 18:56:20,439:INFO:setup() successfully completed in 4.44s...............
2023-01-15 18:56:20,541:INFO:Initializing compare_models()
2023-01-15 18:56:20,542:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000011A9DAF2200>, include=None, fold=None, round=4, cross_validation=True, sort=AUC, n_select=3, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=False, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000011A9DAF2200>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'AUC', 'n_select': 3, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': False, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-01-15 18:56:20,544:INFO:Checking exceptions
2023-01-15 18:56:20,552:INFO:Preparing display monitor
2023-01-15 18:56:20,555:INFO:Initializing Logistic Regression
2023-01-15 18:56:20,556:INFO:Total runtime is 1.6601880391438804e-05 minutes
2023-01-15 18:56:20,556:INFO:SubProcess create_model() called ==================================
2023-01-15 18:56:20,556:INFO:Initializing create_model()
2023-01-15 18:56:20,556:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000011A9DAF2200>, estimator=lr, fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000011AF968CD00>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:56:20,556:INFO:Checking exceptions
2023-01-15 18:56:20,557:INFO:Importing libraries
2023-01-15 18:56:20,557:INFO:Copying training dataset
2023-01-15 18:56:20,567:INFO:Defining folds
2023-01-15 18:56:20,567:INFO:Declaring metric variables
2023-01-15 18:56:20,568:INFO:Importing untrained model
2023-01-15 18:56:20,568:INFO:Logistic Regression Imported successfully
2023-01-15 18:56:20,568:INFO:Starting cross validation
2023-01-15 18:56:20,571:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:56:26,849:INFO:Calculating mean and std
2023-01-15 18:56:26,850:INFO:Creating metrics dataframe
2023-01-15 18:56:26,860:INFO:Uploading results into container
2023-01-15 18:56:26,862:INFO:Uploading model into container now
2023-01-15 18:56:26,863:INFO:_master_model_container: 1
2023-01-15 18:56:26,864:INFO:_display_container: 2
2023-01-15 18:56:26,865:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-01-15 18:56:26,865:INFO:create_model() successfully completed......................................
2023-01-15 18:56:26,980:INFO:SubProcess create_model() end ==================================
2023-01-15 18:56:26,980:INFO:Creating metrics dataframe
2023-01-15 18:56:26,986:INFO:Initializing K Neighbors Classifier
2023-01-15 18:56:26,987:INFO:Total runtime is 0.10719637473424276 minutes
2023-01-15 18:56:26,987:INFO:SubProcess create_model() called ==================================
2023-01-15 18:56:26,987:INFO:Initializing create_model()
2023-01-15 18:56:26,987:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000011A9DAF2200>, estimator=knn, fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000011AF968CD00>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:56:26,987:INFO:Checking exceptions
2023-01-15 18:56:26,987:INFO:Importing libraries
2023-01-15 18:56:26,987:INFO:Copying training dataset
2023-01-15 18:56:26,995:INFO:Defining folds
2023-01-15 18:56:26,995:INFO:Declaring metric variables
2023-01-15 18:56:26,995:INFO:Importing untrained model
2023-01-15 18:56:26,996:INFO:K Neighbors Classifier Imported successfully
2023-01-15 18:56:26,996:INFO:Starting cross validation
2023-01-15 18:56:26,999:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:56:32,514:INFO:Calculating mean and std
2023-01-15 18:56:32,514:INFO:Creating metrics dataframe
2023-01-15 18:56:32,520:INFO:Uploading results into container
2023-01-15 18:56:32,522:INFO:Uploading model into container now
2023-01-15 18:56:32,522:INFO:_master_model_container: 2
2023-01-15 18:56:32,522:INFO:_display_container: 2
2023-01-15 18:56:32,523:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-01-15 18:56:32,523:INFO:create_model() successfully completed......................................
2023-01-15 18:56:32,616:INFO:SubProcess create_model() end ==================================
2023-01-15 18:56:32,616:INFO:Creating metrics dataframe
2023-01-15 18:56:32,623:INFO:Initializing Naive Bayes
2023-01-15 18:56:32,623:INFO:Total runtime is 0.20114047129948934 minutes
2023-01-15 18:56:32,624:INFO:SubProcess create_model() called ==================================
2023-01-15 18:56:32,624:INFO:Initializing create_model()
2023-01-15 18:56:32,624:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000011A9DAF2200>, estimator=nb, fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000011AF968CD00>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:56:32,624:INFO:Checking exceptions
2023-01-15 18:56:32,624:INFO:Importing libraries
2023-01-15 18:56:32,624:INFO:Copying training dataset
2023-01-15 18:56:32,631:INFO:Defining folds
2023-01-15 18:56:32,631:INFO:Declaring metric variables
2023-01-15 18:56:32,632:INFO:Importing untrained model
2023-01-15 18:56:32,632:INFO:Naive Bayes Imported successfully
2023-01-15 18:56:32,633:INFO:Starting cross validation
2023-01-15 18:56:32,635:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:56:33,751:INFO:Calculating mean and std
2023-01-15 18:56:33,751:INFO:Creating metrics dataframe
2023-01-15 18:56:33,756:INFO:Uploading results into container
2023-01-15 18:56:33,757:INFO:Uploading model into container now
2023-01-15 18:56:33,757:INFO:_master_model_container: 3
2023-01-15 18:56:33,758:INFO:_display_container: 2
2023-01-15 18:56:33,758:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-01-15 18:56:33,758:INFO:create_model() successfully completed......................................
2023-01-15 18:56:33,836:INFO:SubProcess create_model() end ==================================
2023-01-15 18:56:33,836:INFO:Creating metrics dataframe
2023-01-15 18:56:33,842:INFO:Initializing Decision Tree Classifier
2023-01-15 18:56:33,842:INFO:Total runtime is 0.2214487353960673 minutes
2023-01-15 18:56:33,842:INFO:SubProcess create_model() called ==================================
2023-01-15 18:56:33,842:INFO:Initializing create_model()
2023-01-15 18:56:33,842:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000011A9DAF2200>, estimator=dt, fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000011AF968CD00>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:56:33,844:INFO:Checking exceptions
2023-01-15 18:56:33,844:INFO:Importing libraries
2023-01-15 18:56:33,844:INFO:Copying training dataset
2023-01-15 18:56:33,849:INFO:Defining folds
2023-01-15 18:56:33,849:INFO:Declaring metric variables
2023-01-15 18:56:33,850:INFO:Importing untrained model
2023-01-15 18:56:33,850:INFO:Decision Tree Classifier Imported successfully
2023-01-15 18:56:33,851:INFO:Starting cross validation
2023-01-15 18:56:33,853:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:56:35,058:INFO:Calculating mean and std
2023-01-15 18:56:35,059:INFO:Creating metrics dataframe
2023-01-15 18:56:35,065:INFO:Uploading results into container
2023-01-15 18:56:35,066:INFO:Uploading model into container now
2023-01-15 18:56:35,066:INFO:_master_model_container: 4
2023-01-15 18:56:35,066:INFO:_display_container: 2
2023-01-15 18:56:35,067:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=42, splitter='best')
2023-01-15 18:56:35,067:INFO:create_model() successfully completed......................................
2023-01-15 18:56:35,146:INFO:SubProcess create_model() end ==================================
2023-01-15 18:56:35,146:INFO:Creating metrics dataframe
2023-01-15 18:56:35,153:INFO:Initializing SVM - Linear Kernel
2023-01-15 18:56:35,153:INFO:Total runtime is 0.24329827229181925 minutes
2023-01-15 18:56:35,153:INFO:SubProcess create_model() called ==================================
2023-01-15 18:56:35,154:INFO:Initializing create_model()
2023-01-15 18:56:35,154:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000011A9DAF2200>, estimator=svm, fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000011AF968CD00>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:56:35,154:INFO:Checking exceptions
2023-01-15 18:56:35,154:INFO:Importing libraries
2023-01-15 18:56:35,154:INFO:Copying training dataset
2023-01-15 18:56:35,159:INFO:Defining folds
2023-01-15 18:56:35,159:INFO:Declaring metric variables
2023-01-15 18:56:35,159:INFO:Importing untrained model
2023-01-15 18:56:35,159:INFO:SVM - Linear Kernel Imported successfully
2023-01-15 18:56:35,159:INFO:Starting cross validation
2023-01-15 18:56:35,164:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:56:36,110:INFO:Calculating mean and std
2023-01-15 18:56:36,111:INFO:Creating metrics dataframe
2023-01-15 18:56:36,116:INFO:Uploading results into container
2023-01-15 18:56:36,118:INFO:Uploading model into container now
2023-01-15 18:56:36,118:INFO:_master_model_container: 5
2023-01-15 18:56:36,118:INFO:_display_container: 2
2023-01-15 18:56:36,119:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-01-15 18:56:36,119:INFO:create_model() successfully completed......................................
2023-01-15 18:56:36,196:INFO:SubProcess create_model() end ==================================
2023-01-15 18:56:36,196:INFO:Creating metrics dataframe
2023-01-15 18:56:36,202:INFO:Initializing Ridge Classifier
2023-01-15 18:56:36,203:INFO:Total runtime is 0.2608034332593282 minutes
2023-01-15 18:56:36,203:INFO:SubProcess create_model() called ==================================
2023-01-15 18:56:36,203:INFO:Initializing create_model()
2023-01-15 18:56:36,203:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000011A9DAF2200>, estimator=ridge, fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000011AF968CD00>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:56:36,203:INFO:Checking exceptions
2023-01-15 18:56:36,203:INFO:Importing libraries
2023-01-15 18:56:36,204:INFO:Copying training dataset
2023-01-15 18:56:36,208:INFO:Defining folds
2023-01-15 18:56:36,208:INFO:Declaring metric variables
2023-01-15 18:56:36,209:INFO:Importing untrained model
2023-01-15 18:56:36,209:INFO:Ridge Classifier Imported successfully
2023-01-15 18:56:36,209:INFO:Starting cross validation
2023-01-15 18:56:36,213:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:56:37,084:INFO:Calculating mean and std
2023-01-15 18:56:37,084:INFO:Creating metrics dataframe
2023-01-15 18:56:37,089:INFO:Uploading results into container
2023-01-15 18:56:37,090:INFO:Uploading model into container now
2023-01-15 18:56:37,090:INFO:_master_model_container: 6
2023-01-15 18:56:37,090:INFO:_display_container: 2
2023-01-15 18:56:37,091:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize='deprecated', positive=False,
                random_state=42, solver='auto', tol=0.001)
2023-01-15 18:56:37,091:INFO:create_model() successfully completed......................................
2023-01-15 18:56:37,167:INFO:SubProcess create_model() end ==================================
2023-01-15 18:56:37,167:INFO:Creating metrics dataframe
2023-01-15 18:56:37,174:INFO:Initializing Random Forest Classifier
2023-01-15 18:56:37,174:INFO:Total runtime is 0.2769845684369405 minutes
2023-01-15 18:56:37,174:INFO:SubProcess create_model() called ==================================
2023-01-15 18:56:37,175:INFO:Initializing create_model()
2023-01-15 18:56:37,175:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000011A9DAF2200>, estimator=rf, fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000011AF968CD00>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:56:37,175:INFO:Checking exceptions
2023-01-15 18:56:37,175:INFO:Importing libraries
2023-01-15 18:56:37,175:INFO:Copying training dataset
2023-01-15 18:56:37,181:INFO:Defining folds
2023-01-15 18:56:37,181:INFO:Declaring metric variables
2023-01-15 18:56:37,182:INFO:Importing untrained model
2023-01-15 18:56:37,182:INFO:Random Forest Classifier Imported successfully
2023-01-15 18:56:37,183:INFO:Starting cross validation
2023-01-15 18:56:37,185:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:56:40,257:INFO:Calculating mean and std
2023-01-15 18:56:40,258:INFO:Creating metrics dataframe
2023-01-15 18:56:40,263:INFO:Uploading results into container
2023-01-15 18:56:40,264:INFO:Uploading model into container now
2023-01-15 18:56:40,264:INFO:_master_model_container: 7
2023-01-15 18:56:40,264:INFO:_display_container: 2
2023-01-15 18:56:40,265:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=42, verbose=0, warm_start=False)
2023-01-15 18:56:40,265:INFO:create_model() successfully completed......................................
2023-01-15 18:56:40,339:INFO:SubProcess create_model() end ==================================
2023-01-15 18:56:40,339:INFO:Creating metrics dataframe
2023-01-15 18:56:40,344:INFO:Initializing Quadratic Discriminant Analysis
2023-01-15 18:56:40,346:INFO:Total runtime is 0.32985653479894006 minutes
2023-01-15 18:56:40,346:INFO:SubProcess create_model() called ==================================
2023-01-15 18:56:40,346:INFO:Initializing create_model()
2023-01-15 18:56:40,347:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000011A9DAF2200>, estimator=qda, fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000011AF968CD00>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:56:40,347:INFO:Checking exceptions
2023-01-15 18:56:40,347:INFO:Importing libraries
2023-01-15 18:56:40,347:INFO:Copying training dataset
2023-01-15 18:56:40,352:INFO:Defining folds
2023-01-15 18:56:40,352:INFO:Declaring metric variables
2023-01-15 18:56:40,352:INFO:Importing untrained model
2023-01-15 18:56:40,352:INFO:Quadratic Discriminant Analysis Imported successfully
2023-01-15 18:56:40,353:INFO:Starting cross validation
2023-01-15 18:56:40,355:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:56:40,935:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-01-15 18:56:40,951:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-01-15 18:56:40,953:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-01-15 18:56:40,978:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-01-15 18:56:41,445:INFO:Calculating mean and std
2023-01-15 18:56:41,446:INFO:Creating metrics dataframe
2023-01-15 18:56:41,452:INFO:Uploading results into container
2023-01-15 18:56:41,453:INFO:Uploading model into container now
2023-01-15 18:56:41,454:INFO:_master_model_container: 8
2023-01-15 18:56:41,454:INFO:_display_container: 2
2023-01-15 18:56:41,454:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-01-15 18:56:41,454:INFO:create_model() successfully completed......................................
2023-01-15 18:56:41,530:INFO:SubProcess create_model() end ==================================
2023-01-15 18:56:41,530:INFO:Creating metrics dataframe
2023-01-15 18:56:41,537:INFO:Initializing Ada Boost Classifier
2023-01-15 18:56:41,537:INFO:Total runtime is 0.3497002164522807 minutes
2023-01-15 18:56:41,538:INFO:SubProcess create_model() called ==================================
2023-01-15 18:56:41,538:INFO:Initializing create_model()
2023-01-15 18:56:41,538:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000011A9DAF2200>, estimator=ada, fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000011AF968CD00>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:56:41,538:INFO:Checking exceptions
2023-01-15 18:56:41,538:INFO:Importing libraries
2023-01-15 18:56:41,538:INFO:Copying training dataset
2023-01-15 18:56:41,543:INFO:Defining folds
2023-01-15 18:56:41,544:INFO:Declaring metric variables
2023-01-15 18:56:41,544:INFO:Importing untrained model
2023-01-15 18:56:41,544:INFO:Ada Boost Classifier Imported successfully
2023-01-15 18:56:41,545:INFO:Starting cross validation
2023-01-15 18:56:41,548:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:56:44,042:INFO:Calculating mean and std
2023-01-15 18:56:44,042:INFO:Creating metrics dataframe
2023-01-15 18:56:44,048:INFO:Uploading results into container
2023-01-15 18:56:44,049:INFO:Uploading model into container now
2023-01-15 18:56:44,050:INFO:_master_model_container: 9
2023-01-15 18:56:44,050:INFO:_display_container: 2
2023-01-15 18:56:44,050:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2023-01-15 18:56:44,050:INFO:create_model() successfully completed......................................
2023-01-15 18:56:44,126:INFO:SubProcess create_model() end ==================================
2023-01-15 18:56:44,126:INFO:Creating metrics dataframe
2023-01-15 18:56:44,133:INFO:Initializing Gradient Boosting Classifier
2023-01-15 18:56:44,134:INFO:Total runtime is 0.3929875214894613 minutes
2023-01-15 18:56:44,134:INFO:SubProcess create_model() called ==================================
2023-01-15 18:56:44,134:INFO:Initializing create_model()
2023-01-15 18:56:44,134:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000011A9DAF2200>, estimator=gbc, fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000011AF968CD00>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:56:44,134:INFO:Checking exceptions
2023-01-15 18:56:44,134:INFO:Importing libraries
2023-01-15 18:56:44,135:INFO:Copying training dataset
2023-01-15 18:56:44,139:INFO:Defining folds
2023-01-15 18:56:44,139:INFO:Declaring metric variables
2023-01-15 18:56:44,140:INFO:Importing untrained model
2023-01-15 18:56:44,140:INFO:Gradient Boosting Classifier Imported successfully
2023-01-15 18:56:44,141:INFO:Starting cross validation
2023-01-15 18:56:44,143:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:56:49,775:INFO:Calculating mean and std
2023-01-15 18:56:49,776:INFO:Creating metrics dataframe
2023-01-15 18:56:49,781:INFO:Uploading results into container
2023-01-15 18:56:49,781:INFO:Uploading model into container now
2023-01-15 18:56:49,782:INFO:_master_model_container: 10
2023-01-15 18:56:49,783:INFO:_display_container: 2
2023-01-15 18:56:49,783:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-01-15 18:56:49,783:INFO:create_model() successfully completed......................................
2023-01-15 18:56:49,859:INFO:SubProcess create_model() end ==================================
2023-01-15 18:56:49,859:INFO:Creating metrics dataframe
2023-01-15 18:56:49,866:INFO:Initializing Linear Discriminant Analysis
2023-01-15 18:56:49,866:INFO:Total runtime is 0.4885206818580628 minutes
2023-01-15 18:56:49,866:INFO:SubProcess create_model() called ==================================
2023-01-15 18:56:49,867:INFO:Initializing create_model()
2023-01-15 18:56:49,867:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000011A9DAF2200>, estimator=lda, fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000011AF968CD00>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:56:49,867:INFO:Checking exceptions
2023-01-15 18:56:49,867:INFO:Importing libraries
2023-01-15 18:56:49,867:INFO:Copying training dataset
2023-01-15 18:56:49,873:INFO:Defining folds
2023-01-15 18:56:49,873:INFO:Declaring metric variables
2023-01-15 18:56:49,873:INFO:Importing untrained model
2023-01-15 18:56:49,873:INFO:Linear Discriminant Analysis Imported successfully
2023-01-15 18:56:49,874:INFO:Starting cross validation
2023-01-15 18:56:49,876:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:56:51,020:INFO:Calculating mean and std
2023-01-15 18:56:51,020:INFO:Creating metrics dataframe
2023-01-15 18:56:51,025:INFO:Uploading results into container
2023-01-15 18:56:51,026:INFO:Uploading model into container now
2023-01-15 18:56:51,026:INFO:_master_model_container: 11
2023-01-15 18:56:51,026:INFO:_display_container: 2
2023-01-15 18:56:51,027:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-01-15 18:56:51,027:INFO:create_model() successfully completed......................................
2023-01-15 18:56:51,104:INFO:SubProcess create_model() end ==================================
2023-01-15 18:56:51,104:INFO:Creating metrics dataframe
2023-01-15 18:56:51,111:INFO:Initializing Extra Trees Classifier
2023-01-15 18:56:51,111:INFO:Total runtime is 0.5092705647150676 minutes
2023-01-15 18:56:51,111:INFO:SubProcess create_model() called ==================================
2023-01-15 18:56:51,112:INFO:Initializing create_model()
2023-01-15 18:56:51,112:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000011A9DAF2200>, estimator=et, fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000011AF968CD00>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:56:51,112:INFO:Checking exceptions
2023-01-15 18:56:51,112:INFO:Importing libraries
2023-01-15 18:56:51,112:INFO:Copying training dataset
2023-01-15 18:56:51,119:INFO:Defining folds
2023-01-15 18:56:51,119:INFO:Declaring metric variables
2023-01-15 18:56:51,119:INFO:Importing untrained model
2023-01-15 18:56:51,120:INFO:Extra Trees Classifier Imported successfully
2023-01-15 18:56:51,120:INFO:Starting cross validation
2023-01-15 18:56:51,122:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:56:53,748:INFO:Calculating mean and std
2023-01-15 18:56:53,749:INFO:Creating metrics dataframe
2023-01-15 18:56:53,754:INFO:Uploading results into container
2023-01-15 18:56:53,755:INFO:Uploading model into container now
2023-01-15 18:56:53,755:INFO:_master_model_container: 12
2023-01-15 18:56:53,755:INFO:_display_container: 2
2023-01-15 18:56:53,756:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=42, verbose=0, warm_start=False)
2023-01-15 18:56:53,756:INFO:create_model() successfully completed......................................
2023-01-15 18:56:53,831:INFO:SubProcess create_model() end ==================================
2023-01-15 18:56:53,831:INFO:Creating metrics dataframe
2023-01-15 18:56:53,839:INFO:Initializing Light Gradient Boosting Machine
2023-01-15 18:56:53,839:INFO:Total runtime is 0.5547433614730836 minutes
2023-01-15 18:56:53,839:INFO:SubProcess create_model() called ==================================
2023-01-15 18:56:53,840:INFO:Initializing create_model()
2023-01-15 18:56:53,840:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000011A9DAF2200>, estimator=lightgbm, fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000011AF968CD00>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:56:53,840:INFO:Checking exceptions
2023-01-15 18:56:53,840:INFO:Importing libraries
2023-01-15 18:56:53,840:INFO:Copying training dataset
2023-01-15 18:56:53,845:INFO:Defining folds
2023-01-15 18:56:53,845:INFO:Declaring metric variables
2023-01-15 18:56:53,845:INFO:Importing untrained model
2023-01-15 18:56:53,846:INFO:Light Gradient Boosting Machine Imported successfully
2023-01-15 18:56:53,846:INFO:Starting cross validation
2023-01-15 18:56:53,849:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:56:55,423:INFO:Calculating mean and std
2023-01-15 18:56:55,424:INFO:Creating metrics dataframe
2023-01-15 18:56:55,429:INFO:Uploading results into container
2023-01-15 18:56:55,429:INFO:Uploading model into container now
2023-01-15 18:56:55,430:INFO:_master_model_container: 13
2023-01-15 18:56:55,430:INFO:_display_container: 2
2023-01-15 18:56:55,431:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-01-15 18:56:55,431:INFO:create_model() successfully completed......................................
2023-01-15 18:56:55,506:INFO:SubProcess create_model() end ==================================
2023-01-15 18:56:55,507:INFO:Creating metrics dataframe
2023-01-15 18:56:55,513:INFO:Initializing Dummy Classifier
2023-01-15 18:56:55,514:INFO:Total runtime is 0.5826510310173035 minutes
2023-01-15 18:56:55,514:INFO:SubProcess create_model() called ==================================
2023-01-15 18:56:55,514:INFO:Initializing create_model()
2023-01-15 18:56:55,514:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000011A9DAF2200>, estimator=dummy, fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000011AF968CD00>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:56:55,514:INFO:Checking exceptions
2023-01-15 18:56:55,514:INFO:Importing libraries
2023-01-15 18:56:55,515:INFO:Copying training dataset
2023-01-15 18:56:55,521:INFO:Defining folds
2023-01-15 18:56:55,521:INFO:Declaring metric variables
2023-01-15 18:56:55,521:INFO:Importing untrained model
2023-01-15 18:56:55,522:INFO:Dummy Classifier Imported successfully
2023-01-15 18:56:55,522:INFO:Starting cross validation
2023-01-15 18:56:55,525:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:56:56,457:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-15 18:56:56,470:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-15 18:56:56,498:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-15 18:56:56,506:WARNING:c:\Users\alepi\Documents\projects\personal\repos\playground_series_s3e2\env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-15 18:56:56,511:INFO:Calculating mean and std
2023-01-15 18:56:56,512:INFO:Creating metrics dataframe
2023-01-15 18:56:56,517:INFO:Uploading results into container
2023-01-15 18:56:56,519:INFO:Uploading model into container now
2023-01-15 18:56:56,519:INFO:_master_model_container: 14
2023-01-15 18:56:56,519:INFO:_display_container: 2
2023-01-15 18:56:56,520:INFO:DummyClassifier(constant=None, random_state=42, strategy='prior')
2023-01-15 18:56:56,520:INFO:create_model() successfully completed......................................
2023-01-15 18:56:56,595:INFO:SubProcess create_model() end ==================================
2023-01-15 18:56:56,595:INFO:Creating metrics dataframe
2023-01-15 18:56:56,605:INFO:Initializing create_model()
2023-01-15 18:56:56,605:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000011A9DAF2200>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:56:56,605:INFO:Checking exceptions
2023-01-15 18:56:56,607:INFO:Importing libraries
2023-01-15 18:56:56,607:INFO:Copying training dataset
2023-01-15 18:56:56,612:INFO:Defining folds
2023-01-15 18:56:56,612:INFO:Declaring metric variables
2023-01-15 18:56:56,612:INFO:Importing untrained model
2023-01-15 18:56:56,612:INFO:Declaring custom model
2023-01-15 18:56:56,613:INFO:Logistic Regression Imported successfully
2023-01-15 18:56:56,616:INFO:Cross validation set to False
2023-01-15 18:56:56,616:INFO:Fitting Model
2023-01-15 18:56:57,272:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-01-15 18:56:57,272:INFO:create_model() successfully completed......................................
2023-01-15 18:56:57,342:INFO:Initializing create_model()
2023-01-15 18:56:57,342:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000011A9DAF2200>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:56:57,342:INFO:Checking exceptions
2023-01-15 18:56:57,344:INFO:Importing libraries
2023-01-15 18:56:57,344:INFO:Copying training dataset
2023-01-15 18:56:57,348:INFO:Defining folds
2023-01-15 18:56:57,348:INFO:Declaring metric variables
2023-01-15 18:56:57,348:INFO:Importing untrained model
2023-01-15 18:56:57,348:INFO:Declaring custom model
2023-01-15 18:56:57,349:INFO:Linear Discriminant Analysis Imported successfully
2023-01-15 18:56:57,351:INFO:Cross validation set to False
2023-01-15 18:56:57,351:INFO:Fitting Model
2023-01-15 18:56:57,896:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-01-15 18:56:57,896:INFO:create_model() successfully completed......................................
2023-01-15 18:56:57,968:INFO:Initializing create_model()
2023-01-15 18:56:57,968:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000011A9DAF2200>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:56:57,968:INFO:Checking exceptions
2023-01-15 18:56:57,970:INFO:Importing libraries
2023-01-15 18:56:57,970:INFO:Copying training dataset
2023-01-15 18:56:57,975:INFO:Defining folds
2023-01-15 18:56:57,975:INFO:Declaring metric variables
2023-01-15 18:56:57,975:INFO:Importing untrained model
2023-01-15 18:56:57,975:INFO:Declaring custom model
2023-01-15 18:56:57,976:INFO:Light Gradient Boosting Machine Imported successfully
2023-01-15 18:56:57,978:INFO:Cross validation set to False
2023-01-15 18:56:57,978:INFO:Fitting Model
2023-01-15 18:56:58,706:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-01-15 18:56:58,706:INFO:create_model() successfully completed......................................
2023-01-15 18:56:58,823:INFO:_master_model_container: 14
2023-01-15 18:56:58,823:INFO:_display_container: 2
2023-01-15 18:56:58,824:INFO:[LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)]
2023-01-15 18:56:58,824:INFO:compare_models() successfully completed......................................
2023-01-15 18:56:58,956:INFO:Initializing tune_model()
2023-01-15 18:56:58,957:INFO:tune_model(estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, n_iter=30, custom_grid=None, optimize=AUC, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000011A9DAF2200>)
2023-01-15 18:56:58,957:INFO:Checking exceptions
2023-01-15 18:56:58,995:INFO:Copying training dataset
2023-01-15 18:56:59,001:INFO:Checking base model
2023-01-15 18:56:59,001:INFO:Base model : Logistic Regression
2023-01-15 18:56:59,010:INFO:Declaring metric variables
2023-01-15 18:56:59,015:INFO:Defining Hyperparameters
2023-01-15 18:56:59,119:INFO:Tuning with n_jobs=-1
2023-01-15 18:56:59,120:INFO:Initializing RandomizedSearchCV
2023-01-15 18:57:27,539:INFO:best_params: {'actual_estimator__class_weight': {}, 'actual_estimator__C': 0.095}
2023-01-15 18:57:27,540:INFO:Hyperparameter search completed
2023-01-15 18:57:27,540:INFO:SubProcess create_model() called ==================================
2023-01-15 18:57:27,541:INFO:Initializing create_model()
2023-01-15 18:57:27,541:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000011A9DAF2200>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000011A9AB38B50>, model_only=True, return_train_score=False, kwargs={'class_weight': {}, 'C': 0.095})
2023-01-15 18:57:27,541:INFO:Checking exceptions
2023-01-15 18:57:27,543:INFO:Importing libraries
2023-01-15 18:57:27,545:INFO:Copying training dataset
2023-01-15 18:57:27,551:INFO:Defining folds
2023-01-15 18:57:27,551:INFO:Declaring metric variables
2023-01-15 18:57:27,556:INFO:Importing untrained model
2023-01-15 18:57:27,556:INFO:Declaring custom model
2023-01-15 18:57:27,564:INFO:Logistic Regression Imported successfully
2023-01-15 18:57:27,575:INFO:Starting cross validation
2023-01-15 18:57:27,580:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:57:28,903:INFO:Calculating mean and std
2023-01-15 18:57:28,904:INFO:Creating metrics dataframe
2023-01-15 18:57:28,913:INFO:Finalizing model
2023-01-15 18:57:29,581:INFO:Uploading results into container
2023-01-15 18:57:29,583:INFO:Uploading model into container now
2023-01-15 18:57:29,583:INFO:_master_model_container: 15
2023-01-15 18:57:29,584:INFO:_display_container: 3
2023-01-15 18:57:29,584:INFO:LogisticRegression(C=0.095, class_weight={}, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-01-15 18:57:29,584:INFO:create_model() successfully completed......................................
2023-01-15 18:57:29,665:INFO:SubProcess create_model() end ==================================
2023-01-15 18:57:29,665:INFO:choose_better activated
2023-01-15 18:57:29,670:INFO:SubProcess create_model() called ==================================
2023-01-15 18:57:29,670:INFO:Initializing create_model()
2023-01-15 18:57:29,670:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000011A9DAF2200>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:57:29,670:INFO:Checking exceptions
2023-01-15 18:57:29,672:INFO:Importing libraries
2023-01-15 18:57:29,672:INFO:Copying training dataset
2023-01-15 18:57:29,681:INFO:Defining folds
2023-01-15 18:57:29,681:INFO:Declaring metric variables
2023-01-15 18:57:29,681:INFO:Importing untrained model
2023-01-15 18:57:29,682:INFO:Declaring custom model
2023-01-15 18:57:29,683:INFO:Logistic Regression Imported successfully
2023-01-15 18:57:29,683:INFO:Starting cross validation
2023-01-15 18:57:29,686:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:57:31,146:INFO:Calculating mean and std
2023-01-15 18:57:31,146:INFO:Creating metrics dataframe
2023-01-15 18:57:31,150:INFO:Finalizing model
2023-01-15 18:57:31,851:INFO:Uploading results into container
2023-01-15 18:57:31,851:INFO:Uploading model into container now
2023-01-15 18:57:31,852:INFO:_master_model_container: 16
2023-01-15 18:57:31,852:INFO:_display_container: 4
2023-01-15 18:57:31,852:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-01-15 18:57:31,852:INFO:create_model() successfully completed......................................
2023-01-15 18:57:31,924:INFO:SubProcess create_model() end ==================================
2023-01-15 18:57:31,924:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for AUC is 0.8741
2023-01-15 18:57:31,926:INFO:LogisticRegression(C=0.095, class_weight={}, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for AUC is 0.8746
2023-01-15 18:57:31,926:INFO:LogisticRegression(C=0.095, class_weight={}, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) is best model
2023-01-15 18:57:31,926:INFO:choose_better completed
2023-01-15 18:57:31,936:INFO:_master_model_container: 16
2023-01-15 18:57:31,936:INFO:_display_container: 3
2023-01-15 18:57:31,937:INFO:LogisticRegression(C=0.095, class_weight={}, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-01-15 18:57:31,937:INFO:tune_model() successfully completed......................................
2023-01-15 18:57:32,022:INFO:Initializing tune_model()
2023-01-15 18:57:32,023:INFO:tune_model(estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=None, round=4, n_iter=30, custom_grid=None, optimize=AUC, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000011A9DAF2200>)
2023-01-15 18:57:32,023:INFO:Checking exceptions
2023-01-15 18:57:32,049:INFO:Copying training dataset
2023-01-15 18:57:32,054:INFO:Checking base model
2023-01-15 18:57:32,055:INFO:Base model : Linear Discriminant Analysis
2023-01-15 18:57:32,059:INFO:Declaring metric variables
2023-01-15 18:57:32,065:INFO:Defining Hyperparameters
2023-01-15 18:57:32,162:INFO:Tuning with n_jobs=-1
2023-01-15 18:57:32,162:INFO:Initializing RandomizedSearchCV
2023-01-15 18:57:54,361:INFO:best_params: {'actual_estimator__solver': 'lsqr', 'actual_estimator__shrinkage': 0.05}
2023-01-15 18:57:54,362:INFO:Hyperparameter search completed
2023-01-15 18:57:54,362:INFO:SubProcess create_model() called ==================================
2023-01-15 18:57:54,363:INFO:Initializing create_model()
2023-01-15 18:57:54,363:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000011A9DAF2200>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000011AF968CD00>, model_only=True, return_train_score=False, kwargs={'solver': 'lsqr', 'shrinkage': 0.05})
2023-01-15 18:57:54,363:INFO:Checking exceptions
2023-01-15 18:57:54,363:INFO:Importing libraries
2023-01-15 18:57:54,363:INFO:Copying training dataset
2023-01-15 18:57:54,371:INFO:Defining folds
2023-01-15 18:57:54,371:INFO:Declaring metric variables
2023-01-15 18:57:54,376:INFO:Importing untrained model
2023-01-15 18:57:54,376:INFO:Declaring custom model
2023-01-15 18:57:54,381:INFO:Linear Discriminant Analysis Imported successfully
2023-01-15 18:57:54,394:INFO:Starting cross validation
2023-01-15 18:57:54,396:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:57:55,581:INFO:Calculating mean and std
2023-01-15 18:57:55,585:INFO:Creating metrics dataframe
2023-01-15 18:57:55,593:INFO:Finalizing model
2023-01-15 18:57:56,200:INFO:Uploading results into container
2023-01-15 18:57:56,202:INFO:Uploading model into container now
2023-01-15 18:57:56,202:INFO:_master_model_container: 17
2023-01-15 18:57:56,202:INFO:_display_container: 4
2023-01-15 18:57:56,203:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=0.05, solver='lsqr',
                           store_covariance=False, tol=0.0001)
2023-01-15 18:57:56,203:INFO:create_model() successfully completed......................................
2023-01-15 18:57:56,297:INFO:SubProcess create_model() end ==================================
2023-01-15 18:57:56,297:INFO:choose_better activated
2023-01-15 18:57:56,307:INFO:SubProcess create_model() called ==================================
2023-01-15 18:57:56,308:INFO:Initializing create_model()
2023-01-15 18:57:56,308:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000011A9DAF2200>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:57:56,308:INFO:Checking exceptions
2023-01-15 18:57:56,310:INFO:Importing libraries
2023-01-15 18:57:56,311:INFO:Copying training dataset
2023-01-15 18:57:56,316:INFO:Defining folds
2023-01-15 18:57:56,317:INFO:Declaring metric variables
2023-01-15 18:57:56,318:INFO:Importing untrained model
2023-01-15 18:57:56,318:INFO:Declaring custom model
2023-01-15 18:57:56,320:INFO:Linear Discriminant Analysis Imported successfully
2023-01-15 18:57:56,322:INFO:Starting cross validation
2023-01-15 18:57:56,324:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:57:57,611:INFO:Calculating mean and std
2023-01-15 18:57:57,612:INFO:Creating metrics dataframe
2023-01-15 18:57:57,615:INFO:Finalizing model
2023-01-15 18:57:58,304:INFO:Uploading results into container
2023-01-15 18:57:58,304:INFO:Uploading model into container now
2023-01-15 18:57:58,305:INFO:_master_model_container: 18
2023-01-15 18:57:58,305:INFO:_display_container: 5
2023-01-15 18:57:58,305:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-01-15 18:57:58,305:INFO:create_model() successfully completed......................................
2023-01-15 18:57:58,377:INFO:SubProcess create_model() end ==================================
2023-01-15 18:57:58,377:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001) result for AUC is 0.8724
2023-01-15 18:57:58,378:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=0.05, solver='lsqr',
                           store_covariance=False, tol=0.0001) result for AUC is 0.8742
2023-01-15 18:57:58,378:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=0.05, solver='lsqr',
                           store_covariance=False, tol=0.0001) is best model
2023-01-15 18:57:58,378:INFO:choose_better completed
2023-01-15 18:57:58,389:INFO:_master_model_container: 18
2023-01-15 18:57:58,389:INFO:_display_container: 4
2023-01-15 18:57:58,390:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=0.05, solver='lsqr',
                           store_covariance=False, tol=0.0001)
2023-01-15 18:57:58,390:INFO:tune_model() successfully completed......................................
2023-01-15 18:57:58,486:INFO:Initializing tune_model()
2023-01-15 18:57:58,486:INFO:tune_model(estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, n_iter=30, custom_grid=None, optimize=AUC, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000011A9DAF2200>)
2023-01-15 18:57:58,487:INFO:Checking exceptions
2023-01-15 18:57:58,508:INFO:Copying training dataset
2023-01-15 18:57:58,515:INFO:Checking base model
2023-01-15 18:57:58,515:INFO:Base model : Light Gradient Boosting Machine
2023-01-15 18:57:58,521:INFO:Declaring metric variables
2023-01-15 18:57:58,527:INFO:Defining Hyperparameters
2023-01-15 18:57:58,638:INFO:Tuning with n_jobs=-1
2023-01-15 18:57:58,638:INFO:Initializing RandomizedSearchCV
2023-01-15 18:58:43,392:INFO:best_params: {'actual_estimator__reg_lambda': 2, 'actual_estimator__reg_alpha': 0.3, 'actual_estimator__num_leaves': 10, 'actual_estimator__n_estimators': 10, 'actual_estimator__min_split_gain': 0.1, 'actual_estimator__min_child_samples': 71, 'actual_estimator__learning_rate': 0.01, 'actual_estimator__feature_fraction': 0.6, 'actual_estimator__bagging_freq': 2, 'actual_estimator__bagging_fraction': 0.8}
2023-01-15 18:58:43,393:INFO:Hyperparameter search completed
2023-01-15 18:58:43,394:INFO:SubProcess create_model() called ==================================
2023-01-15 18:58:43,395:INFO:Initializing create_model()
2023-01-15 18:58:43,395:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000011A9DAF2200>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000011AF968CD00>, model_only=True, return_train_score=False, kwargs={'reg_lambda': 2, 'reg_alpha': 0.3, 'num_leaves': 10, 'n_estimators': 10, 'min_split_gain': 0.1, 'min_child_samples': 71, 'learning_rate': 0.01, 'feature_fraction': 0.6, 'bagging_freq': 2, 'bagging_fraction': 0.8})
2023-01-15 18:58:43,395:INFO:Checking exceptions
2023-01-15 18:58:43,395:INFO:Importing libraries
2023-01-15 18:58:43,397:INFO:Copying training dataset
2023-01-15 18:58:43,407:INFO:Defining folds
2023-01-15 18:58:43,407:INFO:Declaring metric variables
2023-01-15 18:58:43,411:INFO:Importing untrained model
2023-01-15 18:58:43,414:INFO:Declaring custom model
2023-01-15 18:58:43,420:INFO:Light Gradient Boosting Machine Imported successfully
2023-01-15 18:58:43,431:INFO:Starting cross validation
2023-01-15 18:58:43,435:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:58:44,704:INFO:Calculating mean and std
2023-01-15 18:58:44,706:INFO:Creating metrics dataframe
2023-01-15 18:58:44,715:INFO:Finalizing model
2023-01-15 18:58:45,359:INFO:Uploading results into container
2023-01-15 18:58:45,360:INFO:Uploading model into container now
2023-01-15 18:58:45,361:INFO:_master_model_container: 19
2023-01-15 18:58:45,364:INFO:_display_container: 5
2023-01-15 18:58:45,365:INFO:LGBMClassifier(bagging_fraction=0.8, bagging_freq=2, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.6,
               importance_type='split', learning_rate=0.01, max_depth=-1,
               min_child_samples=71, min_child_weight=0.001, min_split_gain=0.1,
               n_estimators=10, n_jobs=-1, num_leaves=10, objective=None,
               random_state=42, reg_alpha=0.3, reg_lambda=2, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-01-15 18:58:45,365:INFO:create_model() successfully completed......................................
2023-01-15 18:58:45,475:INFO:SubProcess create_model() end ==================================
2023-01-15 18:58:45,476:INFO:choose_better activated
2023-01-15 18:58:45,483:INFO:SubProcess create_model() called ==================================
2023-01-15 18:58:45,484:INFO:Initializing create_model()
2023-01-15 18:58:45,484:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000011A9DAF2200>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:58:45,484:INFO:Checking exceptions
2023-01-15 18:58:45,487:INFO:Importing libraries
2023-01-15 18:58:45,487:INFO:Copying training dataset
2023-01-15 18:58:45,492:INFO:Defining folds
2023-01-15 18:58:45,493:INFO:Declaring metric variables
2023-01-15 18:58:45,493:INFO:Importing untrained model
2023-01-15 18:58:45,493:INFO:Declaring custom model
2023-01-15 18:58:45,494:INFO:Light Gradient Boosting Machine Imported successfully
2023-01-15 18:58:45,495:INFO:Starting cross validation
2023-01-15 18:58:45,499:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:58:47,541:INFO:Calculating mean and std
2023-01-15 18:58:47,541:INFO:Creating metrics dataframe
2023-01-15 18:58:47,544:INFO:Finalizing model
2023-01-15 18:58:48,374:INFO:Uploading results into container
2023-01-15 18:58:48,376:INFO:Uploading model into container now
2023-01-15 18:58:48,377:INFO:_master_model_container: 20
2023-01-15 18:58:48,377:INFO:_display_container: 6
2023-01-15 18:58:48,378:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-01-15 18:58:48,378:INFO:create_model() successfully completed......................................
2023-01-15 18:58:48,490:INFO:SubProcess create_model() end ==================================
2023-01-15 18:58:48,491:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0) result for AUC is 0.8647
2023-01-15 18:58:48,492:INFO:LGBMClassifier(bagging_fraction=0.8, bagging_freq=2, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.6,
               importance_type='split', learning_rate=0.01, max_depth=-1,
               min_child_samples=71, min_child_weight=0.001, min_split_gain=0.1,
               n_estimators=10, n_jobs=-1, num_leaves=10, objective=None,
               random_state=42, reg_alpha=0.3, reg_lambda=2, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0) result for AUC is 0.8722
2023-01-15 18:58:48,493:INFO:LGBMClassifier(bagging_fraction=0.8, bagging_freq=2, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.6,
               importance_type='split', learning_rate=0.01, max_depth=-1,
               min_child_samples=71, min_child_weight=0.001, min_split_gain=0.1,
               n_estimators=10, n_jobs=-1, num_leaves=10, objective=None,
               random_state=42, reg_alpha=0.3, reg_lambda=2, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0) is best model
2023-01-15 18:58:48,493:INFO:choose_better completed
2023-01-15 18:58:48,505:INFO:_master_model_container: 20
2023-01-15 18:58:48,505:INFO:_display_container: 5
2023-01-15 18:58:48,507:INFO:LGBMClassifier(bagging_fraction=0.8, bagging_freq=2, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.6,
               importance_type='split', learning_rate=0.01, max_depth=-1,
               min_child_samples=71, min_child_weight=0.001, min_split_gain=0.1,
               n_estimators=10, n_jobs=-1, num_leaves=10, objective=None,
               random_state=42, reg_alpha=0.3, reg_lambda=2, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-01-15 18:58:48,507:INFO:tune_model() successfully completed......................................
2023-01-15 18:58:48,706:INFO:Initializing create_model()
2023-01-15 18:58:48,706:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000011A9DAF2200>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:58:48,706:INFO:Checking exceptions
2023-01-15 18:58:48,708:INFO:Importing libraries
2023-01-15 18:58:48,709:INFO:Copying training dataset
2023-01-15 18:58:48,718:INFO:Defining folds
2023-01-15 18:58:48,718:INFO:Declaring metric variables
2023-01-15 18:58:48,719:INFO:Importing untrained model
2023-01-15 18:58:48,719:INFO:Logistic Regression Imported successfully
2023-01-15 18:58:48,720:INFO:Starting cross validation
2023-01-15 18:58:48,724:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:58:50,301:INFO:Calculating mean and std
2023-01-15 18:58:50,302:INFO:Creating metrics dataframe
2023-01-15 18:58:50,305:INFO:Finalizing model
2023-01-15 18:58:51,097:INFO:Uploading results into container
2023-01-15 18:58:51,099:INFO:Uploading model into container now
2023-01-15 18:58:51,099:INFO:_master_model_container: 21
2023-01-15 18:58:51,099:INFO:_display_container: 6
2023-01-15 18:58:51,100:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-01-15 18:58:51,100:INFO:create_model() successfully completed......................................
2023-01-15 18:58:51,169:INFO:Initializing stack_models()
2023-01-15 18:58:51,169:INFO:stack_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000011A9DAF2200>, estimator_list=[LogisticRegression(C=0.095, class_weight={}, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=0.05, solver='lsqr',
                           store_covariance=False, tol=0.0001), LGBMClassifier(bagging_fraction=0.8, bagging_freq=2, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.6,
               importance_type='split', learning_rate=0.01, max_depth=-1,
               min_child_samples=71, min_child_weight=0.001, min_split_gain=0.1,
               n_estimators=10, n_jobs=-1, num_leaves=10, objective=None,
               random_state=42, reg_alpha=0.3, reg_lambda=2, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)], meta_model=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), meta_model_fold=5, fold=None, round=4, method=auto, restack=True, choose_better=False, optimize=Accuracy, fit_kwargs=None, groups=None, probability_threshold=None, verbose=False, return_train_score=False)
2023-01-15 18:58:51,169:INFO:Checking exceptions
2023-01-15 18:58:51,172:INFO:Defining meta model
2023-01-15 18:58:51,174:INFO:Getting model names
2023-01-15 18:58:51,174:INFO:[('Logistic Regression', LogisticRegression(C=0.095, class_weight={}, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)), ('Linear Discriminant Analysis', LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=0.05, solver='lsqr',
                           store_covariance=False, tol=0.0001)), ('Light Gradient Boosting Machine', LGBMClassifier(bagging_fraction=0.8, bagging_freq=2, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.6,
               importance_type='split', learning_rate=0.01, max_depth=-1,
               min_child_samples=71, min_child_weight=0.001, min_split_gain=0.1,
               n_estimators=10, n_jobs=-1, num_leaves=10, objective=None,
               random_state=42, reg_alpha=0.3, reg_lambda=2, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0))]
2023-01-15 18:58:51,175:INFO:SubProcess create_model() called ==================================
2023-01-15 18:58:51,182:INFO:Initializing create_model()
2023-01-15 18:58:51,182:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000011A9DAF2200>, estimator=StackingClassifier(cv=5,
                   estimators=[('Logistic Regression',
                                LogisticRegression(C=0.095, class_weight={},
                                                   dual=False,
                                                   fit_intercept=True,
                                                   intercept_scaling=1,
                                                   l1_ratio=None, max_iter=1000,
                                                   multi_class='auto',
                                                   n_jobs=None, penalty='l2',
                                                   random_state=42,
                                                   solver='lbfgs', tol=0.0001,
                                                   verbose=0,
                                                   warm_start=False)),
                               ('Linear Discriminant Analysis',
                                LinearDiscriminantAnalysis...
                                               subsample_for_bin=200000,
                                               subsample_freq=0))],
                   final_estimator=LogisticRegression(C=1.0, class_weight=None,
                                                      dual=False,
                                                      fit_intercept=True,
                                                      intercept_scaling=1,
                                                      l1_ratio=None,
                                                      max_iter=1000,
                                                      multi_class='auto',
                                                      n_jobs=None, penalty='l2',
                                                      random_state=42,
                                                      solver='lbfgs',
                                                      tol=0.0001, verbose=0,
                                                      warm_start=False),
                   n_jobs=-1, passthrough=True, stack_method='auto', verbose=0), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000011AF977F490>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:58:51,182:INFO:Checking exceptions
2023-01-15 18:58:51,182:INFO:Importing libraries
2023-01-15 18:58:51,183:INFO:Copying training dataset
2023-01-15 18:58:51,187:INFO:Defining folds
2023-01-15 18:58:51,187:INFO:Declaring metric variables
2023-01-15 18:58:51,187:INFO:Importing untrained model
2023-01-15 18:58:51,187:INFO:Declaring custom model
2023-01-15 18:58:51,190:INFO:Stacking Classifier Imported successfully
2023-01-15 18:58:51,190:INFO:Starting cross validation
2023-01-15 18:58:51,192:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:58:54,413:INFO:Calculating mean and std
2023-01-15 18:58:54,413:INFO:Creating metrics dataframe
2023-01-15 18:58:54,417:INFO:Finalizing model
2023-01-15 18:58:56,252:INFO:Uploading results into container
2023-01-15 18:58:56,253:INFO:Uploading model into container now
2023-01-15 18:58:56,253:INFO:_master_model_container: 22
2023-01-15 18:58:56,253:INFO:_display_container: 7
2023-01-15 18:58:56,260:INFO:StackingClassifier(cv=5,
                   estimators=[('Logistic Regression',
                                LogisticRegression(C=0.095, class_weight={},
                                                   dual=False,
                                                   fit_intercept=True,
                                                   intercept_scaling=1,
                                                   l1_ratio=None, max_iter=1000,
                                                   multi_class='auto',
                                                   n_jobs=None, penalty='l2',
                                                   random_state=42,
                                                   solver='lbfgs', tol=0.0001,
                                                   verbose=0,
                                                   warm_start=False)),
                               ('Linear Discriminant Analysis',
                                LinearDiscriminantAnalysis...
                                               subsample_for_bin=200000,
                                               subsample_freq=0))],
                   final_estimator=LogisticRegression(C=1.0, class_weight=None,
                                                      dual=False,
                                                      fit_intercept=True,
                                                      intercept_scaling=1,
                                                      l1_ratio=None,
                                                      max_iter=1000,
                                                      multi_class='auto',
                                                      n_jobs=None, penalty='l2',
                                                      random_state=42,
                                                      solver='lbfgs',
                                                      tol=0.0001, verbose=0,
                                                      warm_start=False),
                   n_jobs=-1, passthrough=True, stack_method='auto', verbose=0)
2023-01-15 18:58:56,260:INFO:create_model() successfully completed......................................
2023-01-15 18:58:56,331:INFO:SubProcess create_model() end ==================================
2023-01-15 18:58:56,331:INFO:_master_model_container: 22
2023-01-15 18:58:56,331:INFO:_display_container: 7
2023-01-15 18:58:56,338:INFO:StackingClassifier(cv=5,
                   estimators=[('Logistic Regression',
                                LogisticRegression(C=0.095, class_weight={},
                                                   dual=False,
                                                   fit_intercept=True,
                                                   intercept_scaling=1,
                                                   l1_ratio=None, max_iter=1000,
                                                   multi_class='auto',
                                                   n_jobs=None, penalty='l2',
                                                   random_state=42,
                                                   solver='lbfgs', tol=0.0001,
                                                   verbose=0,
                                                   warm_start=False)),
                               ('Linear Discriminant Analysis',
                                LinearDiscriminantAnalysis...
                                               subsample_for_bin=200000,
                                               subsample_freq=0))],
                   final_estimator=LogisticRegression(C=1.0, class_weight=None,
                                                      dual=False,
                                                      fit_intercept=True,
                                                      intercept_scaling=1,
                                                      l1_ratio=None,
                                                      max_iter=1000,
                                                      multi_class='auto',
                                                      n_jobs=None, penalty='l2',
                                                      random_state=42,
                                                      solver='lbfgs',
                                                      tol=0.0001, verbose=0,
                                                      warm_start=False),
                   n_jobs=-1, passthrough=True, stack_method='auto', verbose=0)
2023-01-15 18:58:56,338:INFO:stack_models() successfully completed......................................
2023-01-15 18:58:56,466:INFO:Initializing calibrate_model()
2023-01-15 18:58:56,467:INFO:calibrate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000011A9DAF2200>, estimator=StackingClassifier(cv=5,
                   estimators=[('Logistic Regression',
                                LogisticRegression(C=0.095, class_weight={},
                                                   dual=False,
                                                   fit_intercept=True,
                                                   intercept_scaling=1,
                                                   l1_ratio=None, max_iter=1000,
                                                   multi_class='auto',
                                                   n_jobs=None, penalty='l2',
                                                   random_state=42,
                                                   solver='lbfgs', tol=0.0001,
                                                   verbose=0,
                                                   warm_start=False)),
                               ('Linear Discriminant Analysis',
                                LinearDiscriminantAnalysis...
                                               subsample_for_bin=200000,
                                               subsample_freq=0))],
                   final_estimator=LogisticRegression(C=1.0, class_weight=None,
                                                      dual=False,
                                                      fit_intercept=True,
                                                      intercept_scaling=1,
                                                      l1_ratio=None,
                                                      max_iter=1000,
                                                      multi_class='auto',
                                                      n_jobs=None, penalty='l2',
                                                      random_state=42,
                                                      solver='lbfgs',
                                                      tol=0.0001, verbose=0,
                                                      warm_start=False),
                   n_jobs=-1, passthrough=True, stack_method='auto', verbose=0), method=sigmoid, calibrate_fold=5, fold=None, round=4, fit_kwargs=None, groups=None, verbose=False, return_train_score=False)
2023-01-15 18:58:56,467:INFO:Checking exceptions
2023-01-15 18:58:56,471:INFO:Preloading libraries
2023-01-15 18:58:56,471:INFO:Preparing display monitor
2023-01-15 18:58:56,474:INFO:Getting model name
2023-01-15 18:58:56,475:INFO:Base model : Stacking Classifier
2023-01-15 18:58:56,476:INFO:Importing untrained CalibratedClassifierCV
2023-01-15 18:58:56,476:INFO:SubProcess create_model() called ==================================
2023-01-15 18:58:56,494:INFO:Initializing create_model()
2023-01-15 18:58:56,494:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000011A9DAF2200>, estimator=CalibratedClassifierCV(base_estimator=StackingClassifier(cv=5,
                                                         estimators=[('Logistic '
                                                                      'Regression',
                                                                      LogisticRegression(C=0.095,
                                                                                         class_weight={},
                                                                                         dual=False,
                                                                                         fit_intercept=True,
                                                                                         intercept_scaling=1,
                                                                                         l1_ratio=None,
                                                                                         max_iter=1000,
                                                                                         multi_class='auto',
                                                                                         n_jobs=None,
                                                                                         penalty='l2',
                                                                                         random_state=42,
                                                                                         solver='lbfgs',
                                                                                         tol=0.0001,
                                                                                         verbose=0,
                                                                                         warm_start=False)),
                                                                     ('Linear '
                                                                      'Discri...
                                                         final_estimator=LogisticRegression(C=1.0,
                                                                                            class_weight=None,
                                                                                            dual=False,
                                                                                            fit_intercept=True,
                                                                                            intercept_scaling=1,
                                                                                            l1_ratio=None,
                                                                                            max_iter=1000,
                                                                                            multi_class='auto',
                                                                                            n_jobs=None,
                                                                                            penalty='l2',
                                                                                            random_state=42,
                                                                                            solver='lbfgs',
                                                                                            tol=0.0001,
                                                                                            verbose=0,
                                                                                            warm_start=False),
                                                         n_jobs=-1,
                                                         passthrough=True,
                                                         stack_method='auto',
                                                         verbose=0),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000011A9DFB9FF0>, model_only=True, return_train_score=False, kwargs={})
2023-01-15 18:58:56,494:INFO:Checking exceptions
2023-01-15 18:58:56,494:INFO:Importing libraries
2023-01-15 18:58:56,494:INFO:Copying training dataset
2023-01-15 18:58:56,500:INFO:Defining folds
2023-01-15 18:58:56,500:INFO:Declaring metric variables
2023-01-15 18:58:56,500:INFO:Importing untrained model
2023-01-15 18:58:56,501:INFO:Declaring custom model
2023-01-15 18:58:56,505:INFO:Stacking Classifier Imported successfully
2023-01-15 18:58:56,506:INFO:Starting cross validation
2023-01-15 18:58:56,508:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2023-01-15 18:59:07,354:INFO:Calculating mean and std
2023-01-15 18:59:07,354:INFO:Creating metrics dataframe
2023-01-15 18:59:07,357:INFO:Finalizing model
2023-01-15 18:59:14,324:INFO:Uploading results into container
2023-01-15 18:59:14,324:INFO:Uploading model into container now
2023-01-15 18:59:14,325:INFO:_master_model_container: 23
2023-01-15 18:59:14,325:INFO:_display_container: 8
2023-01-15 18:59:14,341:INFO:CalibratedClassifierCV(base_estimator=StackingClassifier(cv=5,
                                                         estimators=[('Logistic '
                                                                      'Regression',
                                                                      LogisticRegression(C=0.095,
                                                                                         class_weight={},
                                                                                         dual=False,
                                                                                         fit_intercept=True,
                                                                                         intercept_scaling=1,
                                                                                         l1_ratio=None,
                                                                                         max_iter=1000,
                                                                                         multi_class='auto',
                                                                                         n_jobs=None,
                                                                                         penalty='l2',
                                                                                         random_state=42,
                                                                                         solver='lbfgs',
                                                                                         tol=0.0001,
                                                                                         verbose=0,
                                                                                         warm_start=False)),
                                                                     ('Linear '
                                                                      'Discri...
                                                         final_estimator=LogisticRegression(C=1.0,
                                                                                            class_weight=None,
                                                                                            dual=False,
                                                                                            fit_intercept=True,
                                                                                            intercept_scaling=1,
                                                                                            l1_ratio=None,
                                                                                            max_iter=1000,
                                                                                            multi_class='auto',
                                                                                            n_jobs=None,
                                                                                            penalty='l2',
                                                                                            random_state=42,
                                                                                            solver='lbfgs',
                                                                                            tol=0.0001,
                                                                                            verbose=0,
                                                                                            warm_start=False),
                                                         n_jobs=-1,
                                                         passthrough=True,
                                                         stack_method='auto',
                                                         verbose=0),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None)
2023-01-15 18:59:14,342:INFO:create_model() successfully completed......................................
2023-01-15 18:59:14,419:INFO:SubProcess create_model() end ==================================
2023-01-15 18:59:14,422:INFO:_master_model_container: 23
2023-01-15 18:59:14,422:INFO:_display_container: 8
2023-01-15 18:59:14,439:INFO:CalibratedClassifierCV(base_estimator=StackingClassifier(cv=5,
                                                         estimators=[('Logistic '
                                                                      'Regression',
                                                                      LogisticRegression(C=0.095,
                                                                                         class_weight={},
                                                                                         dual=False,
                                                                                         fit_intercept=True,
                                                                                         intercept_scaling=1,
                                                                                         l1_ratio=None,
                                                                                         max_iter=1000,
                                                                                         multi_class='auto',
                                                                                         n_jobs=None,
                                                                                         penalty='l2',
                                                                                         random_state=42,
                                                                                         solver='lbfgs',
                                                                                         tol=0.0001,
                                                                                         verbose=0,
                                                                                         warm_start=False)),
                                                                     ('Linear '
                                                                      'Discri...
                                                         final_estimator=LogisticRegression(C=1.0,
                                                                                            class_weight=None,
                                                                                            dual=False,
                                                                                            fit_intercept=True,
                                                                                            intercept_scaling=1,
                                                                                            l1_ratio=None,
                                                                                            max_iter=1000,
                                                                                            multi_class='auto',
                                                                                            n_jobs=None,
                                                                                            penalty='l2',
                                                                                            random_state=42,
                                                                                            solver='lbfgs',
                                                                                            tol=0.0001,
                                                                                            verbose=0,
                                                                                            warm_start=False),
                                                         n_jobs=-1,
                                                         passthrough=True,
                                                         stack_method='auto',
                                                         verbose=0),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None)
2023-01-15 18:59:14,440:INFO:calibrate_model() successfully completed......................................
2023-01-15 18:59:14,635:INFO:Initializing evaluate_model()
2023-01-15 18:59:14,636:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000011A9DAF2200>, estimator=CalibratedClassifierCV(base_estimator=StackingClassifier(cv=5,
                                                         estimators=[('Logistic '
                                                                      'Regression',
                                                                      LogisticRegression(C=0.095,
                                                                                         class_weight={},
                                                                                         dual=False,
                                                                                         fit_intercept=True,
                                                                                         intercept_scaling=1,
                                                                                         l1_ratio=None,
                                                                                         max_iter=1000,
                                                                                         multi_class='auto',
                                                                                         n_jobs=None,
                                                                                         penalty='l2',
                                                                                         random_state=42,
                                                                                         solver='lbfgs',
                                                                                         tol=0.0001,
                                                                                         verbose=0,
                                                                                         warm_start=False)),
                                                                     ('Linear '
                                                                      'Discri...
                                                         final_estimator=LogisticRegression(C=1.0,
                                                                                            class_weight=None,
                                                                                            dual=False,
                                                                                            fit_intercept=True,
                                                                                            intercept_scaling=1,
                                                                                            l1_ratio=None,
                                                                                            max_iter=1000,
                                                                                            multi_class='auto',
                                                                                            n_jobs=None,
                                                                                            penalty='l2',
                                                                                            random_state=42,
                                                                                            solver='lbfgs',
                                                                                            tol=0.0001,
                                                                                            verbose=0,
                                                                                            warm_start=False),
                                                         n_jobs=-1,
                                                         passthrough=True,
                                                         stack_method='auto',
                                                         verbose=0),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-01-15 18:59:14,687:INFO:Initializing plot_model()
2023-01-15 18:59:14,687:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=StackingClassifier(cv=5,
                                                         estimators=[('Logistic '
                                                                      'Regression',
                                                                      LogisticRegression(C=0.095,
                                                                                         class_weight={},
                                                                                         dual=False,
                                                                                         fit_intercept=True,
                                                                                         intercept_scaling=1,
                                                                                         l1_ratio=None,
                                                                                         max_iter=1000,
                                                                                         multi_class='auto',
                                                                                         n_jobs=None,
                                                                                         penalty='l2',
                                                                                         random_state=42,
                                                                                         solver='lbfgs',
                                                                                         tol=0.0001,
                                                                                         verbose=0,
                                                                                         warm_start=False)),
                                                                     ('Linear '
                                                                      'Discri...
                                                         final_estimator=LogisticRegression(C=1.0,
                                                                                            class_weight=None,
                                                                                            dual=False,
                                                                                            fit_intercept=True,
                                                                                            intercept_scaling=1,
                                                                                            l1_ratio=None,
                                                                                            max_iter=1000,
                                                                                            multi_class='auto',
                                                                                            n_jobs=None,
                                                                                            penalty='l2',
                                                                                            random_state=42,
                                                                                            solver='lbfgs',
                                                                                            tol=0.0001,
                                                                                            verbose=0,
                                                                                            warm_start=False),
                                                         n_jobs=-1,
                                                         passthrough=True,
                                                         stack_method='auto',
                                                         verbose=0),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000011A9DAF2200>, system=True)
2023-01-15 18:59:14,687:INFO:Checking exceptions
2023-01-15 18:59:14,694:INFO:Preloading libraries
2023-01-15 18:59:14,709:INFO:Copying training dataset
2023-01-15 18:59:14,709:INFO:Plot type: pipeline
2023-01-15 18:59:15,102:INFO:Visual Rendered Successfully
2023-01-15 18:59:15,184:INFO:plot_model() successfully completed......................................
2023-01-15 18:59:59,591:INFO:Initializing finalize_model()
2023-01-15 18:59:59,591:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000011A9DAF2200>, estimator=CalibratedClassifierCV(base_estimator=StackingClassifier(cv=5,
                                                         estimators=[('Logistic '
                                                                      'Regression',
                                                                      LogisticRegression(C=0.095,
                                                                                         class_weight={},
                                                                                         dual=False,
                                                                                         fit_intercept=True,
                                                                                         intercept_scaling=1,
                                                                                         l1_ratio=None,
                                                                                         max_iter=1000,
                                                                                         multi_class='auto',
                                                                                         n_jobs=None,
                                                                                         penalty='l2',
                                                                                         random_state=42,
                                                                                         solver='lbfgs',
                                                                                         tol=0.0001,
                                                                                         verbose=0,
                                                                                         warm_start=False)),
                                                                     ('Linear '
                                                                      'Discri...
                                                         final_estimator=LogisticRegression(C=1.0,
                                                                                            class_weight=None,
                                                                                            dual=False,
                                                                                            fit_intercept=True,
                                                                                            intercept_scaling=1,
                                                                                            l1_ratio=None,
                                                                                            max_iter=1000,
                                                                                            multi_class='auto',
                                                                                            n_jobs=None,
                                                                                            penalty='l2',
                                                                                            random_state=42,
                                                                                            solver='lbfgs',
                                                                                            tol=0.0001,
                                                                                            verbose=0,
                                                                                            warm_start=False),
                                                         n_jobs=-1,
                                                         passthrough=True,
                                                         stack_method='auto',
                                                         verbose=0),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-01-15 18:59:59,608:INFO:Finalizing CalibratedClassifierCV(base_estimator=StackingClassifier(cv=5,
                                                         estimators=[('Logistic '
                                                                      'Regression',
                                                                      LogisticRegression(C=0.095,
                                                                                         class_weight={},
                                                                                         dual=False,
                                                                                         fit_intercept=True,
                                                                                         intercept_scaling=1,
                                                                                         l1_ratio=None,
                                                                                         max_iter=1000,
                                                                                         multi_class='auto',
                                                                                         n_jobs=None,
                                                                                         penalty='l2',
                                                                                         random_state=42,
                                                                                         solver='lbfgs',
                                                                                         tol=0.0001,
                                                                                         verbose=0,
                                                                                         warm_start=False)),
                                                                     ('Linear '
                                                                      'Discri...
                                                         final_estimator=LogisticRegression(C=1.0,
                                                                                            class_weight=None,
                                                                                            dual=False,
                                                                                            fit_intercept=True,
                                                                                            intercept_scaling=1,
                                                                                            l1_ratio=None,
                                                                                            max_iter=1000,
                                                                                            multi_class='auto',
                                                                                            n_jobs=None,
                                                                                            penalty='l2',
                                                                                            random_state=42,
                                                                                            solver='lbfgs',
                                                                                            tol=0.0001,
                                                                                            verbose=0,
                                                                                            warm_start=False),
                                                         n_jobs=-1,
                                                         passthrough=True,
                                                         stack_method='auto',
                                                         verbose=0),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None)
2023-01-15 18:59:59,632:INFO:Initializing create_model()
2023-01-15 18:59:59,633:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000011A9DAF2200>, estimator=CalibratedClassifierCV(base_estimator=StackingClassifier(cv=5,
                                                         estimators=[('Logistic '
                                                                      'Regression',
                                                                      LogisticRegression(C=0.095,
                                                                                         class_weight={},
                                                                                         dual=False,
                                                                                         fit_intercept=True,
                                                                                         intercept_scaling=1,
                                                                                         l1_ratio=None,
                                                                                         max_iter=1000,
                                                                                         multi_class='auto',
                                                                                         n_jobs=None,
                                                                                         penalty='l2',
                                                                                         random_state=42,
                                                                                         solver='lbfgs',
                                                                                         tol=0.0001,
                                                                                         verbose=0,
                                                                                         warm_start=False)),
                                                                     ('Linear '
                                                                      'Discri...
                                                         final_estimator=LogisticRegression(C=1.0,
                                                                                            class_weight=None,
                                                                                            dual=False,
                                                                                            fit_intercept=True,
                                                                                            intercept_scaling=1,
                                                                                            l1_ratio=None,
                                                                                            max_iter=1000,
                                                                                            multi_class='auto',
                                                                                            n_jobs=None,
                                                                                            penalty='l2',
                                                                                            random_state=42,
                                                                                            solver='lbfgs',
                                                                                            tol=0.0001,
                                                                                            verbose=0,
                                                                                            warm_start=False),
                                                         n_jobs=-1,
                                                         passthrough=True,
                                                         stack_method='auto',
                                                         verbose=0),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2023-01-15 18:59:59,633:INFO:Checking exceptions
2023-01-15 18:59:59,640:INFO:Importing libraries
2023-01-15 18:59:59,640:INFO:Copying training dataset
2023-01-15 18:59:59,641:INFO:Defining folds
2023-01-15 18:59:59,641:INFO:Declaring metric variables
2023-01-15 18:59:59,641:INFO:Importing untrained model
2023-01-15 18:59:59,641:INFO:Declaring custom model
2023-01-15 18:59:59,645:INFO:Stacking Classifier Imported successfully
2023-01-15 18:59:59,647:INFO:Cross validation set to False
2023-01-15 18:59:59,647:INFO:Fitting Model
2023-01-15 19:00:09,461:INFO:Pipeline(memory=Memory(location=C:\Users\alepi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'hypertension',
                                             'heart_disease',
                                             'avg_glucose_level', 'bmi'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorica...
                                                                          final_estimator=LogisticRegression(C=1.0,
                                                                                                             class_weight=None,
                                                                                                             dual=False,
                                                                                                             fit_intercept=True,
                                                                                                             intercept_scaling=1,
                                                                                                             l1_ratio=None,
                                                                                                             max_iter=1000,
                                                                                                             multi_class='auto',
                                                                                                             n_jobs=None,
                                                                                                             penalty='l2',
                                                                                                             random_state=42,
                                                                                                             solver='lbfgs',
                                                                                                             tol=0.0001,
                                                                                                             verbose=0,
                                                                                                             warm_start=False),
                                                                          n_jobs=-1,
                                                                          passthrough=True,
                                                                          stack_method='auto',
                                                                          verbose=0),
                                        cv=5, ensemble=True, method='sigmoid',
                                        n_jobs=None))],
         verbose=False)
2023-01-15 19:00:09,461:INFO:create_model() successfully completed......................................
2023-01-15 19:00:09,554:INFO:_master_model_container: 23
2023-01-15 19:00:09,554:INFO:_display_container: 8
2023-01-15 19:00:09,626:INFO:Pipeline(memory=Memory(location=C:\Users\alepi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'hypertension',
                                             'heart_disease',
                                             'avg_glucose_level', 'bmi'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorica...
                                                                          final_estimator=LogisticRegression(C=1.0,
                                                                                                             class_weight=None,
                                                                                                             dual=False,
                                                                                                             fit_intercept=True,
                                                                                                             intercept_scaling=1,
                                                                                                             l1_ratio=None,
                                                                                                             max_iter=1000,
                                                                                                             multi_class='auto',
                                                                                                             n_jobs=None,
                                                                                                             penalty='l2',
                                                                                                             random_state=42,
                                                                                                             solver='lbfgs',
                                                                                                             tol=0.0001,
                                                                                                             verbose=0,
                                                                                                             warm_start=False),
                                                                          n_jobs=-1,
                                                                          passthrough=True,
                                                                          stack_method='auto',
                                                                          verbose=0),
                                        cv=5, ensemble=True, method='sigmoid',
                                        n_jobs=None))],
         verbose=False)
2023-01-15 19:00:09,626:INFO:finalize_model() successfully completed......................................
2023-01-15 19:00:09,771:INFO:Initializing predict_model()
2023-01-15 19:00:09,772:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000011A9DAF2200>, estimator=Pipeline(memory=Memory(location=C:\Users\alepi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'hypertension',
                                             'heart_disease',
                                             'avg_glucose_level', 'bmi'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorica...
                                                                          final_estimator=LogisticRegression(C=1.0,
                                                                                                             class_weight=None,
                                                                                                             dual=False,
                                                                                                             fit_intercept=True,
                                                                                                             intercept_scaling=1,
                                                                                                             l1_ratio=None,
                                                                                                             max_iter=1000,
                                                                                                             multi_class='auto',
                                                                                                             n_jobs=None,
                                                                                                             penalty='l2',
                                                                                                             random_state=42,
                                                                                                             solver='lbfgs',
                                                                                                             tol=0.0001,
                                                                                                             verbose=0,
                                                                                                             warm_start=False),
                                                                          n_jobs=-1,
                                                                          passthrough=True,
                                                                          stack_method='auto',
                                                                          verbose=0),
                                        cv=5, ensemble=True, method='sigmoid',
                                        n_jobs=None))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=True, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x0000011A9DE84820>)
2023-01-15 19:00:09,772:INFO:Checking exceptions
2023-01-15 19:00:09,772:INFO:Preloading libraries
2023-01-15 19:00:09,774:INFO:Set up data.
2023-01-15 19:00:09,783:INFO:Set up index.
2023-01-15 19:00:46,669:INFO:Initializing finalize_model()
2023-01-15 19:00:46,669:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000011A9DAF2200>, estimator=CalibratedClassifierCV(base_estimator=StackingClassifier(cv=5,
                                                         estimators=[('Logistic '
                                                                      'Regression',
                                                                      LogisticRegression(C=0.095,
                                                                                         class_weight={},
                                                                                         dual=False,
                                                                                         fit_intercept=True,
                                                                                         intercept_scaling=1,
                                                                                         l1_ratio=None,
                                                                                         max_iter=1000,
                                                                                         multi_class='auto',
                                                                                         n_jobs=None,
                                                                                         penalty='l2',
                                                                                         random_state=42,
                                                                                         solver='lbfgs',
                                                                                         tol=0.0001,
                                                                                         verbose=0,
                                                                                         warm_start=False)),
                                                                     ('Linear '
                                                                      'Discri...
                                                         final_estimator=LogisticRegression(C=1.0,
                                                                                            class_weight=None,
                                                                                            dual=False,
                                                                                            fit_intercept=True,
                                                                                            intercept_scaling=1,
                                                                                            l1_ratio=None,
                                                                                            max_iter=1000,
                                                                                            multi_class='auto',
                                                                                            n_jobs=None,
                                                                                            penalty='l2',
                                                                                            random_state=42,
                                                                                            solver='lbfgs',
                                                                                            tol=0.0001,
                                                                                            verbose=0,
                                                                                            warm_start=False),
                                                         n_jobs=-1,
                                                         passthrough=True,
                                                         stack_method='auto',
                                                         verbose=0),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-01-15 19:00:46,689:INFO:Finalizing CalibratedClassifierCV(base_estimator=StackingClassifier(cv=5,
                                                         estimators=[('Logistic '
                                                                      'Regression',
                                                                      LogisticRegression(C=0.095,
                                                                                         class_weight={},
                                                                                         dual=False,
                                                                                         fit_intercept=True,
                                                                                         intercept_scaling=1,
                                                                                         l1_ratio=None,
                                                                                         max_iter=1000,
                                                                                         multi_class='auto',
                                                                                         n_jobs=None,
                                                                                         penalty='l2',
                                                                                         random_state=42,
                                                                                         solver='lbfgs',
                                                                                         tol=0.0001,
                                                                                         verbose=0,
                                                                                         warm_start=False)),
                                                                     ('Linear '
                                                                      'Discri...
                                                         final_estimator=LogisticRegression(C=1.0,
                                                                                            class_weight=None,
                                                                                            dual=False,
                                                                                            fit_intercept=True,
                                                                                            intercept_scaling=1,
                                                                                            l1_ratio=None,
                                                                                            max_iter=1000,
                                                                                            multi_class='auto',
                                                                                            n_jobs=None,
                                                                                            penalty='l2',
                                                                                            random_state=42,
                                                                                            solver='lbfgs',
                                                                                            tol=0.0001,
                                                                                            verbose=0,
                                                                                            warm_start=False),
                                                         n_jobs=-1,
                                                         passthrough=True,
                                                         stack_method='auto',
                                                         verbose=0),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None)
2023-01-15 19:00:46,711:INFO:Initializing create_model()
2023-01-15 19:00:46,711:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000011A9DAF2200>, estimator=CalibratedClassifierCV(base_estimator=StackingClassifier(cv=5,
                                                         estimators=[('Logistic '
                                                                      'Regression',
                                                                      LogisticRegression(C=0.095,
                                                                                         class_weight={},
                                                                                         dual=False,
                                                                                         fit_intercept=True,
                                                                                         intercept_scaling=1,
                                                                                         l1_ratio=None,
                                                                                         max_iter=1000,
                                                                                         multi_class='auto',
                                                                                         n_jobs=None,
                                                                                         penalty='l2',
                                                                                         random_state=42,
                                                                                         solver='lbfgs',
                                                                                         tol=0.0001,
                                                                                         verbose=0,
                                                                                         warm_start=False)),
                                                                     ('Linear '
                                                                      'Discri...
                                                         final_estimator=LogisticRegression(C=1.0,
                                                                                            class_weight=None,
                                                                                            dual=False,
                                                                                            fit_intercept=True,
                                                                                            intercept_scaling=1,
                                                                                            l1_ratio=None,
                                                                                            max_iter=1000,
                                                                                            multi_class='auto',
                                                                                            n_jobs=None,
                                                                                            penalty='l2',
                                                                                            random_state=42,
                                                                                            solver='lbfgs',
                                                                                            tol=0.0001,
                                                                                            verbose=0,
                                                                                            warm_start=False),
                                                         n_jobs=-1,
                                                         passthrough=True,
                                                         stack_method='auto',
                                                         verbose=0),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2023-01-15 19:00:46,711:INFO:Checking exceptions
2023-01-15 19:00:46,716:INFO:Importing libraries
2023-01-15 19:00:46,716:INFO:Copying training dataset
2023-01-15 19:00:46,716:INFO:Defining folds
2023-01-15 19:00:46,716:INFO:Declaring metric variables
2023-01-15 19:00:46,717:INFO:Importing untrained model
2023-01-15 19:00:46,717:INFO:Declaring custom model
2023-01-15 19:00:46,721:INFO:Stacking Classifier Imported successfully
2023-01-15 19:00:46,723:INFO:Cross validation set to False
2023-01-15 19:00:46,723:INFO:Fitting Model
2023-01-15 19:00:55,107:INFO:Pipeline(memory=Memory(location=C:\Users\alepi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'hypertension',
                                             'heart_disease',
                                             'avg_glucose_level', 'bmi'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorica...
                                                                          final_estimator=LogisticRegression(C=1.0,
                                                                                                             class_weight=None,
                                                                                                             dual=False,
                                                                                                             fit_intercept=True,
                                                                                                             intercept_scaling=1,
                                                                                                             l1_ratio=None,
                                                                                                             max_iter=1000,
                                                                                                             multi_class='auto',
                                                                                                             n_jobs=None,
                                                                                                             penalty='l2',
                                                                                                             random_state=42,
                                                                                                             solver='lbfgs',
                                                                                                             tol=0.0001,
                                                                                                             verbose=0,
                                                                                                             warm_start=False),
                                                                          n_jobs=-1,
                                                                          passthrough=True,
                                                                          stack_method='auto',
                                                                          verbose=0),
                                        cv=5, ensemble=True, method='sigmoid',
                                        n_jobs=None))],
         verbose=False)
2023-01-15 19:00:55,107:INFO:create_model() successfully completed......................................
2023-01-15 19:00:55,188:INFO:_master_model_container: 23
2023-01-15 19:00:55,188:INFO:_display_container: 8
2023-01-15 19:00:55,260:INFO:Pipeline(memory=Memory(location=C:\Users\alepi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'hypertension',
                                             'heart_disease',
                                             'avg_glucose_level', 'bmi'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorica...
                                                                          final_estimator=LogisticRegression(C=1.0,
                                                                                                             class_weight=None,
                                                                                                             dual=False,
                                                                                                             fit_intercept=True,
                                                                                                             intercept_scaling=1,
                                                                                                             l1_ratio=None,
                                                                                                             max_iter=1000,
                                                                                                             multi_class='auto',
                                                                                                             n_jobs=None,
                                                                                                             penalty='l2',
                                                                                                             random_state=42,
                                                                                                             solver='lbfgs',
                                                                                                             tol=0.0001,
                                                                                                             verbose=0,
                                                                                                             warm_start=False),
                                                                          n_jobs=-1,
                                                                          passthrough=True,
                                                                          stack_method='auto',
                                                                          verbose=0),
                                        cv=5, ensemble=True, method='sigmoid',
                                        n_jobs=None))],
         verbose=False)
2023-01-15 19:00:55,261:INFO:finalize_model() successfully completed......................................
2023-01-15 19:00:55,424:INFO:Initializing predict_model()
2023-01-15 19:00:55,424:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000011A9DAF2200>, estimator=Pipeline(memory=Memory(location=C:\Users\alepi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'hypertension',
                                             'heart_disease',
                                             'avg_glucose_level', 'bmi'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorica...
                                                                          final_estimator=LogisticRegression(C=1.0,
                                                                                                             class_weight=None,
                                                                                                             dual=False,
                                                                                                             fit_intercept=True,
                                                                                                             intercept_scaling=1,
                                                                                                             l1_ratio=None,
                                                                                                             max_iter=1000,
                                                                                                             multi_class='auto',
                                                                                                             n_jobs=None,
                                                                                                             penalty='l2',
                                                                                                             random_state=42,
                                                                                                             solver='lbfgs',
                                                                                                             tol=0.0001,
                                                                                                             verbose=0,
                                                                                                             warm_start=False),
                                                                          n_jobs=-1,
                                                                          passthrough=True,
                                                                          stack_method='auto',
                                                                          verbose=0),
                                        cv=5, ensemble=True, method='sigmoid',
                                        n_jobs=None))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=True, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x0000011A9DC22680>)
2023-01-15 19:00:55,425:INFO:Checking exceptions
2023-01-15 19:00:55,425:INFO:Preloading libraries
2023-01-15 19:00:55,428:INFO:Set up data.
2023-01-15 19:00:55,438:INFO:Set up index.
